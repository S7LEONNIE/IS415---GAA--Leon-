[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex02/Hands-On_Ex02.html",
    "href": "Hands-On_Ex/Hands-On_Ex02/Hands-On_Ex02.html",
    "title": "Hands-On Exercise 2: Geospatial Data Wrangling",
    "section": "",
    "text": "pacman::p_load(sf, tidyverse)\n\n\n\n\n\n\n\n\n\nmpsz = st_read(dsn = \"data/geospatial\", \n                  layer = \"MP14_SUBZONE_WEB_PL\")\n\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `C:\\Users\\la935\\Desktop\\IS415 - GAA\\IS415 - GAA (New)\\Hands-On_Ex\\Hands-On_Ex02\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n\n\n\n\n\n\ncyclingpath = st_read(dsn = \"data/geospatial\", \n                         layer = \"CyclingPathGazette\")\n\nReading layer `CyclingPathGazette' from data source \n  `C:\\Users\\la935\\Desktop\\IS415 - GAA\\IS415 - GAA (New)\\Hands-On_Ex\\Hands-On_Ex02\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 2248 features and 2 fields\nGeometry type: MULTILINESTRING\nDimension:     XY\nBounding box:  xmin: 11854.32 ymin: 28347.98 xmax: 42626.09 ymax: 48948.15\nProjected CRS: SVY21\n\n\n\n\n\n\npreschool = st_read(\"data/geospatial/preschools-location.kml\")\n\nReading layer `PRESCHOOLS_LOCATION' from data source \n  `C:\\Users\\la935\\Desktop\\IS415 - GAA\\IS415 - GAA (New)\\Hands-On_Ex\\Hands-On_Ex02\\data\\geospatial\\preschools-location.kml' \n  using driver `KML'\nSimple feature collection with 1925 features and 2 fields\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 103.6824 ymin: 1.247759 xmax: 103.9897 ymax: 1.462134\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex02/Hands-On_Ex02.html#working-with-st_geometry",
    "href": "Hands-On_Ex/Hands-On_Ex02/Hands-On_Ex02.html#working-with-st_geometry",
    "title": "Hands-On Exercise 2: Geospatial Data Wrangling",
    "section": "Working with st_geometry()",
    "text": "Working with st_geometry()\n\nst_geometry(mpsz)\n\nGeometry set for 323 features \nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\nFirst 5 geometries:"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex02/Hands-On_Ex02.html#working-with-glimpse",
    "href": "Hands-On_Ex/Hands-On_Ex02/Hands-On_Ex02.html#working-with-glimpse",
    "title": "Hands-On Exercise 2: Geospatial Data Wrangling",
    "section": "Working with glimpse()",
    "text": "Working with glimpse()\n\nglimpse(mpsz)\n\nRows: 323\nColumns: 16\n$ OBJECTID   <int> 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, …\n$ SUBZONE_NO <int> 1, 1, 3, 8, 3, 7, 9, 2, 13, 7, 12, 6, 1, 5, 1, 1, 3, 2, 2, …\n$ SUBZONE_N  <chr> \"MARINA SOUTH\", \"PEARL'S HILL\", \"BOAT QUAY\", \"HENDERSON HIL…\n$ SUBZONE_C  <chr> \"MSSZ01\", \"OTSZ01\", \"SRSZ03\", \"BMSZ08\", \"BMSZ03\", \"BMSZ07\",…\n$ CA_IND     <chr> \"Y\", \"Y\", \"Y\", \"N\", \"N\", \"N\", \"N\", \"Y\", \"N\", \"N\", \"N\", \"N\",…\n$ PLN_AREA_N <chr> \"MARINA SOUTH\", \"OUTRAM\", \"SINGAPORE RIVER\", \"BUKIT MERAH\",…\n$ PLN_AREA_C <chr> \"MS\", \"OT\", \"SR\", \"BM\", \"BM\", \"BM\", \"BM\", \"SR\", \"QT\", \"QT\",…\n$ REGION_N   <chr> \"CENTRAL REGION\", \"CENTRAL REGION\", \"CENTRAL REGION\", \"CENT…\n$ REGION_C   <chr> \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\",…\n$ INC_CRC    <chr> \"5ED7EB253F99252E\", \"8C7149B9EB32EEFC\", \"C35FEFF02B13E0E5\",…\n$ FMEL_UPD_D <date> 2014-12-05, 2014-12-05, 2014-12-05, 2014-12-05, 2014-12-05…\n$ X_ADDR     <dbl> 31595.84, 28679.06, 29654.96, 26782.83, 26201.96, 25358.82,…\n$ Y_ADDR     <dbl> 29220.19, 29782.05, 29974.66, 29933.77, 30005.70, 29991.38,…\n$ SHAPE_Leng <dbl> 5267.381, 3506.107, 1740.926, 3313.625, 2825.594, 4428.913,…\n$ SHAPE_Area <dbl> 1630379.27, 559816.25, 160807.50, 595428.89, 387429.44, 103…\n$ geometry   <MULTIPOLYGON [m]> MULTIPOLYGON (((31495.56 30..., MULTIPOLYGON (…"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex02/Hands-On_Ex02.html#working-with-head",
    "href": "Hands-On_Ex/Hands-On_Ex02/Hands-On_Ex02.html#working-with-head",
    "title": "Hands-On Exercise 2: Geospatial Data Wrangling",
    "section": "Working with head()",
    "text": "Working with head()\n\nhead(mpsz, n=5)  \n\nSimple feature collection with 5 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 25867.68 ymin: 28369.47 xmax: 32362.39 ymax: 30435.54\nProjected CRS: SVY21\n  OBJECTID SUBZONE_NO      SUBZONE_N SUBZONE_C CA_IND      PLN_AREA_N\n1        1          1   MARINA SOUTH    MSSZ01      Y    MARINA SOUTH\n2        2          1   PEARL'S HILL    OTSZ01      Y          OUTRAM\n3        3          3      BOAT QUAY    SRSZ03      Y SINGAPORE RIVER\n4        4          8 HENDERSON HILL    BMSZ08      N     BUKIT MERAH\n5        5          3        REDHILL    BMSZ03      N     BUKIT MERAH\n  PLN_AREA_C       REGION_N REGION_C          INC_CRC FMEL_UPD_D   X_ADDR\n1         MS CENTRAL REGION       CR 5ED7EB253F99252E 2014-12-05 31595.84\n2         OT CENTRAL REGION       CR 8C7149B9EB32EEFC 2014-12-05 28679.06\n3         SR CENTRAL REGION       CR C35FEFF02B13E0E5 2014-12-05 29654.96\n4         BM CENTRAL REGION       CR 3775D82C5DDBEFBD 2014-12-05 26782.83\n5         BM CENTRAL REGION       CR 85D9ABEF0A40678F 2014-12-05 26201.96\n    Y_ADDR SHAPE_Leng SHAPE_Area                       geometry\n1 29220.19   5267.381  1630379.3 MULTIPOLYGON (((31495.56 30...\n2 29782.05   3506.107   559816.2 MULTIPOLYGON (((29092.28 30...\n3 29974.66   1740.926   160807.5 MULTIPOLYGON (((29932.33 29...\n4 29933.77   3313.625   595428.9 MULTIPOLYGON (((27131.28 30...\n5 30005.70   2825.594   387429.4 MULTIPOLYGON (((26451.03 30..."
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex02/Hands-On_Ex02.html#assigning-epsg-code-to-a-simple-feature-data-frame",
    "href": "Hands-On_Ex/Hands-On_Ex02/Hands-On_Ex02.html#assigning-epsg-code-to-a-simple-feature-data-frame",
    "title": "Hands-On Exercise 2: Geospatial Data Wrangling",
    "section": "Assigning EPSG Code to a Simple Feature Data Frame",
    "text": "Assigning EPSG Code to a Simple Feature Data Frame\n\nst_crs(mpsz)\n\nCoordinate Reference System:\n  User input: SVY21 \n  wkt:\nPROJCRS[\"SVY21\",\n    BASEGEOGCRS[\"SVY21[WGS84]\",\n        DATUM[\"World Geodetic System 1984\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]],\n            ID[\"EPSG\",6326]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"Degree\",0.0174532925199433]]],\n    CONVERSION[\"unnamed\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"Degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"Degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"(E)\",east,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1,\n                ID[\"EPSG\",9001]]],\n        AXIS[\"(N)\",north,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1,\n                ID[\"EPSG\",9001]]]]\n\n\n\nmpsz3414 <- st_set_crs(mpsz, 3414)\n\n\nst_crs(mpsz3414)\n\nCoordinate Reference System:\n  User input: EPSG:3414 \n  wkt:\nPROJCRS[\"SVY21 / Singapore TM\",\n    BASEGEOGCRS[\"SVY21\",\n        DATUM[\"SVY21\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4757]],\n    CONVERSION[\"Singapore Transverse Mercator\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"northing (N)\",north,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"easting (E)\",east,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Cadastre, engineering survey, topographic mapping.\"],\n        AREA[\"Singapore - onshore and offshore.\"],\n        BBOX[1.13,103.59,1.47,104.07]],\n    ID[\"EPSG\",3414]]"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex02/Hands-On_Ex02.html#transforming-the-projection-of-preschool-from-wgs84-to-svy21",
    "href": "Hands-On_Ex/Hands-On_Ex02/Hands-On_Ex02.html#transforming-the-projection-of-preschool-from-wgs84-to-svy21",
    "title": "Hands-On Exercise 2: Geospatial Data Wrangling",
    "section": "Transforming the Projection of Preschool from WGS84 to SVY21",
    "text": "Transforming the Projection of Preschool from WGS84 to SVY21\n\npreschool3414 <- st_transform(preschool, \n                              crs = 3414)"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex02/Hands-On_Ex02.html#importing-the-aspatial-data",
    "href": "Hands-On_Ex/Hands-On_Ex02/Hands-On_Ex02.html#importing-the-aspatial-data",
    "title": "Hands-On Exercise 2: Geospatial Data Wrangling",
    "section": "Importing the Aspatial Data",
    "text": "Importing the Aspatial Data\n\nlistings <- read_csv(\"data/aspatial/listings.csv\")"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex02/Hands-On_Ex02.html#creating-a-simple-feature-data-frame-from-an-aspatial-data-frame",
    "href": "Hands-On_Ex/Hands-On_Ex02/Hands-On_Ex02.html#creating-a-simple-feature-data-frame-from-an-aspatial-data-frame",
    "title": "Hands-On Exercise 2: Geospatial Data Wrangling",
    "section": "Creating a Simple Feature Data Frame From an Aspatial Data Frame",
    "text": "Creating a Simple Feature Data Frame From an Aspatial Data Frame\n\nlistings_sf <- st_as_sf(listings, \n                       coords = c(\"longitude\", \"latitude\"),\n                       crs=4326) %>%\n  st_transform(crs = 3414)\n\n\nglimpse(listings_sf)\n\nRows: 4,161\nColumns: 74\n$ id                                           <dbl> 50646, 71609, 71896, 7190…\n$ listing_url                                  <chr> \"https://www.airbnb.com/r…\n$ scrape_id                                    <dbl> 2.022092e+13, 2.022092e+1…\n$ last_scraped                                 <date> 2022-09-23, 2022-09-22, …\n$ source                                       <chr> \"previous scrape\", \"city …\n$ name                                         <chr> \"Pleasant Room along Buki…\n$ description                                  <chr> \"Fully furnished bedroom …\n$ neighborhood_overview                        <chr> \"The serenity & quiet sur…\n$ picture_url                                  <chr> \"https://a0.muscache.com/…\n$ host_id                                      <dbl> 227796, 367042, 367042, 3…\n$ host_url                                     <chr> \"https://www.airbnb.com/u…\n$ host_name                                    <chr> \"Sujatha\", \"Belinda\", \"Be…\n$ host_since                                   <date> 2010-09-08, 2011-01-29, …\n$ host_location                                <chr> \"Singapore\", \"Singapore\",…\n$ host_about                                   <chr> \"I am a working professio…\n$ host_response_time                           <chr> \"a few days or more\", \"wi…\n$ host_response_rate                           <chr> \"0%\", \"100%\", \"100%\", \"10…\n$ host_acceptance_rate                         <chr> \"N/A\", \"100%\", \"100%\", \"1…\n$ host_is_superhost                            <lgl> FALSE, FALSE, FALSE, FALS…\n$ host_thumbnail_url                           <chr> \"https://a0.muscache.com/…\n$ host_picture_url                             <chr> \"https://a0.muscache.com/…\n$ host_neighbourhood                           <chr> \"Bukit Timah\", \"Tampines\"…\n$ host_listings_count                          <dbl> 1, 6, 6, 6, 44, 6, 7, 44,…\n$ host_total_listings_count                    <dbl> 4, 15, 15, 15, 57, 15, 8,…\n$ host_verifications                           <chr> \"['email', 'phone', 'work…\n$ host_has_profile_pic                         <lgl> TRUE, TRUE, TRUE, TRUE, T…\n$ host_identity_verified                       <lgl> TRUE, TRUE, TRUE, TRUE, T…\n$ neighbourhood                                <chr> \"Singapore, Singapore\", N…\n$ neighbourhood_cleansed                       <chr> \"Bukit Timah\", \"Tampines\"…\n$ neighbourhood_group_cleansed                 <chr> \"Central Region\", \"East R…\n$ property_type                                <chr> \"Private room in rental u…\n$ room_type                                    <chr> \"Private room\", \"Private …\n$ accommodates                                 <dbl> 2, 6, 1, 2, 1, 4, 2, 1, 1…\n$ bathrooms                                    <lgl> NA, NA, NA, NA, NA, NA, N…\n$ bathrooms_text                               <chr> \"1 bath\", \"1 private bath…\n$ bedrooms                                     <dbl> 1, 2, 1, 1, 1, 3, 1, 1, N…\n$ beds                                         <dbl> 1, 3, 1, 2, 1, 5, 1, 1, 1…\n$ amenities                                    <chr> \"[\\\"Gym\\\", \\\"Washer\\\", \\\"…\n$ price                                        <chr> \"$80.00\", \"$145.00\", \"$85…\n$ minimum_nights                               <dbl> 92, 92, 92, 92, 60, 92, 9…\n$ maximum_nights                               <dbl> 730, 1125, 1125, 1125, 99…\n$ minimum_minimum_nights                       <dbl> 92, 92, 92, 92, 60, 92, 9…\n$ maximum_minimum_nights                       <dbl> 92, 92, 92, 92, 60, 92, 9…\n$ minimum_maximum_nights                       <dbl> 730, 1125, 1125, 1125, 99…\n$ maximum_maximum_nights                       <dbl> 730, 1125, 1125, 1125, 99…\n$ minimum_nights_avg_ntm                       <dbl> 92, 92, 92, 92, 60, 92, 9…\n$ maximum_nights_avg_ntm                       <dbl> 730, 1125, 1125, 1125, 99…\n$ calendar_updated                             <lgl> NA, NA, NA, NA, NA, NA, N…\n$ has_availability                             <lgl> TRUE, TRUE, TRUE, TRUE, T…\n$ availability_30                              <dbl> 30, 5, 0, 30, 0, 0, 30, 5…\n$ availability_60                              <dbl> 60, 35, 1, 60, 0, 0, 60, …\n$ availability_90                              <dbl> 90, 65, 1, 90, 21, 10, 90…\n$ availability_365                             <dbl> 365, 340, 265, 365, 296, …\n$ calendar_last_scraped                        <date> 2022-09-23, 2022-09-22, …\n$ number_of_reviews                            <dbl> 18, 20, 24, 47, 14, 12, 1…\n$ number_of_reviews_ltm                        <dbl> 0, 0, 0, 0, 1, 0, 0, 3, 2…\n$ number_of_reviews_l30d                       <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ first_review                                 <date> 2014-04-18, 2011-12-19, …\n$ last_review                                  <date> 2014-12-26, 2020-01-17, …\n$ review_scores_rating                         <dbl> 4.56, 4.44, 4.16, 4.41, 4…\n$ review_scores_accuracy                       <dbl> 4.72, 4.37, 4.22, 4.39, 4…\n$ review_scores_cleanliness                    <dbl> 4.78, 4.00, 4.09, 4.52, 4…\n$ review_scores_checkin                        <dbl> 4.78, 4.63, 4.43, 4.63, 4…\n$ review_scores_communication                  <dbl> 4.94, 4.78, 4.43, 4.64, 4…\n$ review_scores_location                       <dbl> 4.72, 4.26, 4.17, 4.50, 4…\n$ review_scores_value                          <dbl> 4.50, 4.32, 4.04, 4.36, 4…\n$ license                                      <chr> NA, NA, NA, NA, \"S0399\", …\n$ instant_bookable                             <lgl> FALSE, FALSE, TRUE, FALSE…\n$ calculated_host_listings_count               <dbl> 1, 6, 6, 6, 44, 6, 7, 44,…\n$ calculated_host_listings_count_entire_homes  <dbl> 0, 0, 0, 0, 2, 0, 1, 2, 2…\n$ calculated_host_listings_count_private_rooms <dbl> 1, 6, 6, 6, 42, 6, 6, 42,…\n$ calculated_host_listings_count_shared_rooms  <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ reviews_per_month                            <dbl> 0.18, 0.15, 0.18, 0.34, 0…\n$ geometry                                     <POINT [m]> POINT (22646.02 351…"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex02/Hands-On_Ex02.html#buffering",
    "href": "Hands-On_Ex/Hands-On_Ex02/Hands-On_Ex02.html#buffering",
    "title": "Hands-On Exercise 2: Geospatial Data Wrangling",
    "section": "Buffering",
    "text": "Buffering\n\nbuffer_cycling <- st_buffer(cyclingpath, \n                               dist=5, nQuadSegs = 30)\n\n\nbuffer_cycling$AREA <- st_area(buffer_cycling)\n\n\nsum(buffer_cycling$AREA)\n\n1556978 [m^2]"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex02/Hands-On_Ex02.html#point-in-polygon-count",
    "href": "Hands-On_Ex/Hands-On_Ex02/Hands-On_Ex02.html#point-in-polygon-count",
    "title": "Hands-On Exercise 2: Geospatial Data Wrangling",
    "section": "Point-in-Polygon Count",
    "text": "Point-in-Polygon Count\n\nmpsz3414$`PreSch Count`<- lengths(st_intersects(mpsz3414, preschool3414))\n\n\nsummary(mpsz3414$`PreSch Count`)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n   0.00    0.00    3.00    5.96    9.00   58.00 \n\n\n\ntop_n(mpsz3414, 1, `PreSch Count`)\n\nSimple feature collection with 1 feature and 16 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 39655.33 ymin: 35966 xmax: 42940.57 ymax: 38622.37\nProjected CRS: SVY21 / Singapore TM\n  OBJECTID SUBZONE_NO     SUBZONE_N SUBZONE_C CA_IND PLN_AREA_N PLN_AREA_C\n1      189          2 TAMPINES EAST    TMSZ02      N   TAMPINES         TM\n     REGION_N REGION_C          INC_CRC FMEL_UPD_D   X_ADDR   Y_ADDR SHAPE_Leng\n1 EAST REGION       ER 21658EAAF84F4D8D 2014-12-05 41122.55 37392.39   10180.62\n  SHAPE_Area                       geometry PreSch Count\n1    4339824 MULTIPOLYGON (((42196.76 38...           58\n\n\n\nmpsz3414$Area <- mpsz3414 %>%\n  st_area()\n\n\nmpsz3414 <- mpsz3414 %>%\n  mutate(`PreSch Density` = `PreSch Count`/Area * 1000000)"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex03/Hands-On_Ex03.html",
    "href": "Hands-On_Ex/Hands-On_Ex03/Hands-On_Ex03.html",
    "title": "Hands-On Exercise 3: Choropleth Mapping with R",
    "section": "",
    "text": "pacman::p_load(sf, tmap, tidyverse)\n\n\n\n\n\n\n\nmpsz <- st_read(dsn = \"data/geospatial\", \n                layer = \"MP14_SUBZONE_WEB_PL\")\n\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `C:\\Users\\la935\\Desktop\\IS415 - GAA\\IS415 - GAA (New)\\Hands-On_Ex\\Hands-On_Ex03\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n\n\n\nmpsz\n\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\nFirst 10 features:\n   OBJECTID SUBZONE_NO       SUBZONE_N SUBZONE_C CA_IND      PLN_AREA_N\n1         1          1    MARINA SOUTH    MSSZ01      Y    MARINA SOUTH\n2         2          1    PEARL'S HILL    OTSZ01      Y          OUTRAM\n3         3          3       BOAT QUAY    SRSZ03      Y SINGAPORE RIVER\n4         4          8  HENDERSON HILL    BMSZ08      N     BUKIT MERAH\n5         5          3         REDHILL    BMSZ03      N     BUKIT MERAH\n6         6          7  ALEXANDRA HILL    BMSZ07      N     BUKIT MERAH\n7         7          9   BUKIT HO SWEE    BMSZ09      N     BUKIT MERAH\n8         8          2     CLARKE QUAY    SRSZ02      Y SINGAPORE RIVER\n9         9         13 PASIR PANJANG 1    QTSZ13      N      QUEENSTOWN\n10       10          7       QUEENSWAY    QTSZ07      N      QUEENSTOWN\n   PLN_AREA_C       REGION_N REGION_C          INC_CRC FMEL_UPD_D   X_ADDR\n1          MS CENTRAL REGION       CR 5ED7EB253F99252E 2014-12-05 31595.84\n2          OT CENTRAL REGION       CR 8C7149B9EB32EEFC 2014-12-05 28679.06\n3          SR CENTRAL REGION       CR C35FEFF02B13E0E5 2014-12-05 29654.96\n4          BM CENTRAL REGION       CR 3775D82C5DDBEFBD 2014-12-05 26782.83\n5          BM CENTRAL REGION       CR 85D9ABEF0A40678F 2014-12-05 26201.96\n6          BM CENTRAL REGION       CR 9D286521EF5E3B59 2014-12-05 25358.82\n7          BM CENTRAL REGION       CR 7839A8577144EFE2 2014-12-05 27680.06\n8          SR CENTRAL REGION       CR 48661DC0FBA09F7A 2014-12-05 29253.21\n9          QT CENTRAL REGION       CR 1F721290C421BFAB 2014-12-05 22077.34\n10         QT CENTRAL REGION       CR 3580D2AFFBEE914C 2014-12-05 24168.31\n     Y_ADDR SHAPE_Leng SHAPE_Area                       geometry\n1  29220.19   5267.381  1630379.3 MULTIPOLYGON (((31495.56 30...\n2  29782.05   3506.107   559816.2 MULTIPOLYGON (((29092.28 30...\n3  29974.66   1740.926   160807.5 MULTIPOLYGON (((29932.33 29...\n4  29933.77   3313.625   595428.9 MULTIPOLYGON (((27131.28 30...\n5  30005.70   2825.594   387429.4 MULTIPOLYGON (((26451.03 30...\n6  29991.38   4428.913  1030378.8 MULTIPOLYGON (((25899.7 297...\n7  30230.86   3275.312   551732.0 MULTIPOLYGON (((27746.95 30...\n8  30222.86   2208.619   290184.7 MULTIPOLYGON (((29351.26 29...\n9  29893.78   6571.323  1084792.3 MULTIPOLYGON (((20996.49 30...\n10 30104.18   3454.239   631644.3 MULTIPOLYGON (((24472.11 29...\n\n\n\n\n\n\npopdata <- read_csv(\"data/aspatial/respopagesexfa2011to2020.csv\")\n\n\n\n\n\n\n\n\npopdata2020 <- popdata %>%\n  filter(Time == 2020) %>%\n  group_by(PA, SZ, AG) %>%\n  summarise(`POP` = sum(`Pop`)) %>%\n  ungroup()%>%\n  pivot_wider(names_from=AG, \n              values_from=POP) %>%\n  mutate(YOUNG = rowSums(.[3:6])\n         +rowSums(.[12])) %>%\nmutate(`ECONOMY ACTIVE` = rowSums(.[7:11])+\nrowSums(.[13:15]))%>%\nmutate(`AGED`=rowSums(.[16:21])) %>%\nmutate(`TOTAL`=rowSums(.[3:21])) %>%  \nmutate(`DEPENDENCY` = (`YOUNG` + `AGED`)\n/`ECONOMY ACTIVE`) %>%\n  select(`PA`, `SZ`, `YOUNG`, \n       `ECONOMY ACTIVE`, `AGED`, \n       `TOTAL`, `DEPENDENCY`)\n\n\n\n\n\npopdata2020 <- popdata2020 %>%\n  mutate_at(.vars = vars(PA, SZ), \n          .funs = funs(toupper)) %>%\n  filter(`ECONOMY ACTIVE` > 0)\n\n\nmpsz_pop2020 <- left_join(mpsz, popdata2020,\n                          by = c(\"SUBZONE_N\" = \"SZ\"))\n\n\nwrite_rds(mpsz_pop2020, \"data/rds/mpszpop2020.rds\")"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex03/Hands-On_Ex03.html#plotting-a-choropleth-map-quickly-by-using-qtm",
    "href": "Hands-On_Ex/Hands-On_Ex03/Hands-On_Ex03.html#plotting-a-choropleth-map-quickly-by-using-qtm",
    "title": "Hands-On Exercise 3: Choropleth Mapping with R",
    "section": "Plotting a Choropleth Map Quickly by Using qtm()",
    "text": "Plotting a Choropleth Map Quickly by Using qtm()\n\ntmap_mode(\"plot\")\nqtm(mpsz_pop2020, \n    fill = \"DEPENDENCY\")"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex03/Hands-On_Ex03.html#creating-a-choropleth-map-by-using-tmaps-elements",
    "href": "Hands-On_Ex/Hands-On_Ex03/Hands-On_Ex03.html#creating-a-choropleth-map-by-using-tmaps-elements",
    "title": "Hands-On Exercise 3: Choropleth Mapping with R",
    "section": "Creating a Choropleth Map by Using tmap’s Elements",
    "text": "Creating a Choropleth Map by Using tmap’s Elements\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\", \n          style = \"quantile\", \n          palette = \"Blues\",\n          title = \"Dependency ratio\") +\n  tm_layout(main.title = \"Distribution of Dependency Ratio by planning subzone\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar() +\n  tm_grid(alpha =0.2) +\n  tm_credits(\"Source: Planning Sub-zone boundary from Urban Redevelopment Authorithy (URA)\\n and Population data from Department of Statistics DOS\", \n             position = c(\"left\", \"bottom\"))\n\n\n\n\n\nDrawing a Base Map\n\ntm_shape(mpsz_pop2020) +\n  tm_polygons()\n\n\n\n\n\n\nDrawing a Choropleth Map Using tm_polygons()\n\ntm_shape(mpsz_pop2020)+\n  tm_polygons(\"DEPENDENCY\")\n\n\n\n\n\n\nDrawing a Choropleth Map Using tm_fill() and tm_border()\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\")\n\n\n\n\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\") +\n  tm_borders(lwd = 0.1,  alpha = 1)"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex03/Hands-On_Ex03.html#data-classification-methods-of-tmap",
    "href": "Hands-On_Ex/Hands-On_Ex03/Hands-On_Ex03.html#data-classification-methods-of-tmap",
    "title": "Hands-On Exercise 3: Choropleth Mapping with R",
    "section": "Data Classification Methods of tmap",
    "text": "Data Classification Methods of tmap\n\nPlotting Choropleth Maps with Built-In Classification Methods\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 5,\n          style = \"jenks\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 5,\n          style = \"equal\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\nPlotting Choropleth Map With Custom Break\n\nsummary(mpsz_pop2020$DEPENDENCY)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's \n 0.0000  0.6540  0.7063  0.7712  0.7657 19.0000      92 \n\n\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          breaks = c(0, 0.60, 0.70, 0.80, 0.90, 1.00)) +\n  tm_borders(alpha = 0.5)"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex03/Hands-On_Ex03.html#colour-scheme",
    "href": "Hands-On_Ex/Hands-On_Ex03/Hands-On_Ex03.html#colour-scheme",
    "title": "Hands-On Exercise 3: Choropleth Mapping with R",
    "section": "Colour Scheme",
    "text": "Colour Scheme\n\nUsing ColourBrewer Palette\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 6,\n          style = \"quantile\",\n          palette = \"Blues\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          style = \"quantile\",\n          palette = \"-Greens\") +\n  tm_borders(alpha = 0.5)"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex03/Hands-On_Ex03.html#map-layouts",
    "href": "Hands-On_Ex/Hands-On_Ex03/Hands-On_Ex03.html#map-layouts",
    "title": "Hands-On Exercise 3: Choropleth Mapping with R",
    "section": "Map Layouts",
    "text": "Map Layouts\n\nMap Legend\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\", \n          style = \"jenks\", \n          palette = \"Blues\", \n          legend.hist = TRUE, \n          legend.is.portrait = TRUE,\n          legend.hist.z = 0.1) +\n  tm_layout(main.title = \"Distribution of Dependency Ratio by planning subzone \\n(Jenks classification)\",\n            main.title.position = \"center\",\n            main.title.size = 1,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            legend.outside = FALSE,\n            legend.position = c(\"right\", \"bottom\"),\n            frame = FALSE) +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\nMap Style\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\", \n          style = \"quantile\", \n          palette = \"-Greens\") +\n  tm_borders(alpha = 0.5) +\n  tmap_style(\"classic\")\n\n\n\n\n\n\nCartographic Furniture\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\", \n          style = \"quantile\", \n          palette = \"Blues\",\n          title = \"No. of persons\") +\n  tm_layout(main.title = \"Distribution of Dependency Ratio \\nby planning subzone\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar(width = 0.15) +\n  tm_grid(lwd = 0.1, alpha = 0.2) +\n  tm_credits(\"Source: Planning Sub-zone boundary from Urban Redevelopment Authorithy (URA)\\n and Population data from Department of Statistics DOS\", \n             position = c(\"left\", \"bottom\"))\n\n\n\n\n\ntmap_style(\"white\")"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex03/Hands-On_Ex03.html#drawing-small-multiple-choropleth-maps",
    "href": "Hands-On_Ex/Hands-On_Ex03/Hands-On_Ex03.html#drawing-small-multiple-choropleth-maps",
    "title": "Hands-On Exercise 3: Choropleth Mapping with R",
    "section": "Drawing Small Multiple Choropleth Maps",
    "text": "Drawing Small Multiple Choropleth Maps\n\nBy Assigning Multiple Values to at Least One of the Aesthetic Arguments\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(c(\"YOUNG\", \"AGED\"),\n          style = \"equal\", \n          palette = \"Blues\") +\n  tm_layout(legend.position = c(\"right\", \"bottom\")) +\n  tm_borders(alpha = 0.5) +\n  tmap_style(\"white\")\n\n\n\n\n\ntm_shape(mpsz_pop2020)+ \n  tm_polygons(c(\"DEPENDENCY\",\"AGED\"),\n          style = c(\"equal\", \"quantile\"), \n          palette = list(\"Blues\",\"Greens\")) +\n  tm_layout(legend.position = c(\"right\", \"bottom\"))\n\n\n\n\n\n\nBy Defining a Group-By Variable in tm_facets()\n\ntm_shape(mpsz_pop2020) +\n  tm_fill(\"DEPENDENCY\",\n          style = \"quantile\",\n          palette = \"Blues\",\n          thres.poly = 0) + \n  tm_facets(by=\"REGION_N\", \n            free.coords=TRUE, \n            drop.shapes=TRUE) +\n  tm_layout(legend.show = FALSE,\n            title.position = c(\"center\", \"center\"), \n            title.size = 20) +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\nBy Creating Multiple Stand-Alone Maps with tmap_arrange()\n\nyoungmap <- tm_shape(mpsz_pop2020)+ \n  tm_polygons(\"YOUNG\", \n              style = \"quantile\", \n              palette = \"Blues\")\n\nagedmap <- tm_shape(mpsz_pop2020)+ \n  tm_polygons(\"AGED\", \n              style = \"quantile\", \n              palette = \"Blues\")\n\ntmap_arrange(youngmap, agedmap, asp=1, ncol=2)"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex03/Hands-On_Ex03.html#mapping-spatial-object-meeting-a-selection-criterion",
    "href": "Hands-On_Ex/Hands-On_Ex03/Hands-On_Ex03.html#mapping-spatial-object-meeting-a-selection-criterion",
    "title": "Hands-On Exercise 3: Choropleth Mapping with R",
    "section": "Mapping Spatial Object Meeting a Selection Criterion",
    "text": "Mapping Spatial Object Meeting a Selection Criterion\n\ntm_shape(mpsz_pop2020[mpsz_pop2020$REGION_N==\"CENTRAL REGION\", ])+\n  tm_fill(\"DEPENDENCY\", \n          style = \"quantile\", \n          palette = \"Blues\", \n          legend.hist = TRUE, \n          legend.is.portrait = TRUE,\n          legend.hist.z = 0.1) +\n  tm_layout(legend.outside = TRUE,\n            legend.height = 0.45, \n            legend.width = 5.0,\n            legend.position = c(\"right\", \"bottom\"),\n            frame = FALSE) +\n  tm_borders(alpha = 0.5)"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex04/Hands-On_Ex04.html",
    "href": "Hands-On_Ex/Hands-On_Ex04/Hands-On_Ex04.html",
    "title": "Hands-On Exercise 4: 1st Order Spatial Point Patterns Analysis Methods",
    "section": "",
    "text": "pacman::p_load(maptools, sf, raster, spatstat, tmap)"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex04/Hands-On_Ex04.html#spatial-data-wrangling",
    "href": "Hands-On_Ex/Hands-On_Ex04/Hands-On_Ex04.html#spatial-data-wrangling",
    "title": "Hands-On Exercise 4: 1st Order Spatial Point Patterns Analysis Methods",
    "section": "Spatial Data Wrangling",
    "text": "Spatial Data Wrangling\n\nImporting the Spatial Data\n\nchildcare_sf <- st_read(\"data/child-care-services-geojson.geojson\") %>%\n  st_transform(crs = 3414)\n\nReading layer `child-care-services-geojson' from data source \n  `C:\\Users\\la935\\Desktop\\IS415 - GAA\\IS415 - GAA (New)\\Hands-On_Ex\\Hands-On_Ex04\\data\\child-care-services-geojson.geojson' \n  using driver `GeoJSON'\nSimple feature collection with 1545 features and 2 fields\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 103.6824 ymin: 1.248403 xmax: 103.9897 ymax: 1.462134\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\n\n\n\nsg_sf <- st_read(dsn = \"data\", layer=\"CostalOutline\")\n\nReading layer `CostalOutline' from data source \n  `C:\\Users\\la935\\Desktop\\IS415 - GAA\\IS415 - GAA (New)\\Hands-On_Ex\\Hands-On_Ex04\\data' \n  using driver `ESRI Shapefile'\nSimple feature collection with 60 features and 4 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 2663.926 ymin: 16357.98 xmax: 56047.79 ymax: 50244.03\nProjected CRS: SVY21\n\n\n\nsg_sf <- st_read(dsn = \"data\", layer=\"CostalOutline\")\n\nReading layer `CostalOutline' from data source \n  `C:\\Users\\la935\\Desktop\\IS415 - GAA\\IS415 - GAA (New)\\Hands-On_Ex\\Hands-On_Ex04\\data' \n  using driver `ESRI Shapefile'\nSimple feature collection with 60 features and 4 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 2663.926 ymin: 16357.98 xmax: 56047.79 ymax: 50244.03\nProjected CRS: SVY21\n\n\n\nmpsz_sf <- st_read(dsn = \"data\", \n                layer = \"MP14_SUBZONE_WEB_PL\")\n\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `C:\\Users\\la935\\Desktop\\IS415 - GAA\\IS415 - GAA (New)\\Hands-On_Ex\\Hands-On_Ex04\\data' \n  using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n\n\n\n\nMapping the Geospatial Data Sets\n\ntmap_mode('view')\ntm_shape(childcare_sf)+\n  tm_dots()\n\n\n\n\n\n\n\ntmap_mode('plot')"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex04/Hands-On_Ex04.html#geospatial-data-wrangling",
    "href": "Hands-On_Ex/Hands-On_Ex04/Hands-On_Ex04.html#geospatial-data-wrangling",
    "title": "Hands-On Exercise 4: 1st Order Spatial Point Patterns Analysis Methods",
    "section": "Geospatial Data Wrangling",
    "text": "Geospatial Data Wrangling\n\nConverting sf data frames to sp’s Spatial Class\n\nchildcare <- as_Spatial(childcare_sf)\nmpsz <- as_Spatial(mpsz_sf)\nsg <- as_Spatial(sg_sf)\n\n\nchildcare\n\nclass       : SpatialPointsDataFrame \nfeatures    : 1545 \nextent      : 11203.01, 45404.24, 25667.6, 49300.88  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \nvariables   : 2\nnames       :    Name,                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           Description \nmin values  :   kml_1, <center><table><tr><th colspan='2' align='center'><em>Attributes</em></th></tr><tr bgcolor=\"#E3E3F3\"> <th>ADDRESSBLOCKHOUSENUMBER</th> <td></td> </tr><tr bgcolor=\"\"> <th>ADDRESSBUILDINGNAME</th> <td></td> </tr><tr bgcolor=\"#E3E3F3\"> <th>ADDRESSPOSTALCODE</th> <td>018989</td> </tr><tr bgcolor=\"\"> <th>ADDRESSSTREETNAME</th> <td>1, MARINA BOULEVARD, #B1 - 01, ONE MARINA BOULEVARD, SINGAPORE 018989</td> </tr><tr bgcolor=\"#E3E3F3\"> <th>ADDRESSTYPE</th> <td></td> </tr><tr bgcolor=\"\"> <th>DESCRIPTION</th> <td></td> </tr><tr bgcolor=\"#E3E3F3\"> <th>HYPERLINK</th> <td></td> </tr><tr bgcolor=\"\"> <th>LANDXADDRESSPOINT</th> <td>0</td> </tr><tr bgcolor=\"#E3E3F3\"> <th>LANDYADDRESSPOINT</th> <td>0</td> </tr><tr bgcolor=\"\"> <th>NAME</th> <td>THE LITTLE SKOOL-HOUSE INTERNATIONAL PTE. LTD.</td> </tr><tr bgcolor=\"#E3E3F3\"> <th>PHOTOURL</th> <td></td> </tr><tr bgcolor=\"\"> <th>ADDRESSFLOORNUMBER</th> <td></td> </tr><tr bgcolor=\"#E3E3F3\"> <th>INC_CRC</th> <td>08F73931F4A691F4</td> </tr><tr bgcolor=\"\"> <th>FMEL_UPD_D</th> <td>20200826094036</td> </tr><tr bgcolor=\"#E3E3F3\"> <th>ADDRESSUNITNUMBER</th> <td></td> </tr></table></center> \nmax values  : kml_999,                  <center><table><tr><th colspan='2' align='center'><em>Attributes</em></th></tr><tr bgcolor=\"#E3E3F3\"> <th>ADDRESSBLOCKHOUSENUMBER</th> <td></td> </tr><tr bgcolor=\"\"> <th>ADDRESSBUILDINGNAME</th> <td></td> </tr><tr bgcolor=\"#E3E3F3\"> <th>ADDRESSPOSTALCODE</th> <td>829646</td> </tr><tr bgcolor=\"\"> <th>ADDRESSSTREETNAME</th> <td>200, PONGGOL SEVENTEENTH AVENUE, SINGAPORE 829646</td> </tr><tr bgcolor=\"#E3E3F3\"> <th>ADDRESSTYPE</th> <td></td> </tr><tr bgcolor=\"\"> <th>DESCRIPTION</th> <td>Child Care Services</td> </tr><tr bgcolor=\"#E3E3F3\"> <th>HYPERLINK</th> <td></td> </tr><tr bgcolor=\"\"> <th>LANDXADDRESSPOINT</th> <td>0</td> </tr><tr bgcolor=\"#E3E3F3\"> <th>LANDYADDRESSPOINT</th> <td>0</td> </tr><tr bgcolor=\"\"> <th>NAME</th> <td>RAFFLES KIDZ @ PUNGGOL PTE LTD</td> </tr><tr bgcolor=\"#E3E3F3\"> <th>PHOTOURL</th> <td></td> </tr><tr bgcolor=\"\"> <th>ADDRESSFLOORNUMBER</th> <td></td> </tr><tr bgcolor=\"#E3E3F3\"> <th>INC_CRC</th> <td>379D017BF244B0FA</td> </tr><tr bgcolor=\"\"> <th>FMEL_UPD_D</th> <td>20200826094036</td> </tr><tr bgcolor=\"#E3E3F3\"> <th>ADDRESSUNITNUMBER</th> <td></td> </tr></table></center> \n\n\n\nmpsz\n\nclass       : SpatialPolygonsDataFrame \nfeatures    : 323 \nextent      : 2667.538, 56396.44, 15748.72, 50256.33  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +datum=WGS84 +units=m +no_defs \nvariables   : 15\nnames       : OBJECTID, SUBZONE_NO, SUBZONE_N, SUBZONE_C, CA_IND, PLN_AREA_N, PLN_AREA_C,       REGION_N, REGION_C,          INC_CRC, FMEL_UPD_D,     X_ADDR,     Y_ADDR,    SHAPE_Leng,    SHAPE_Area \nmin values  :        1,          1, ADMIRALTY,    AMSZ01,      N, ANG MO KIO,         AM, CENTRAL REGION,       CR, 00F5E30B5C9B7AD8,      16409,  5092.8949,  19579.069, 871.554887798, 39437.9352703 \nmax values  :      323,         17,    YUNNAN,    YSSZ09,      Y,     YISHUN,         YS,    WEST REGION,       WR, FFCCF172717C2EAF,      16409, 50424.7923, 49552.7904, 68083.9364708,  69748298.792 \n\n\n\nsg\n\nclass       : SpatialPolygonsDataFrame \nfeatures    : 60 \nextent      : 2663.926, 56047.79, 16357.98, 50244.03  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +datum=WGS84 +units=m +no_defs \nvariables   : 4\nnames       : GDO_GID, MSLINK, MAPID,              COSTAL_NAM \nmin values  :       1,      1,     0,             ISLAND LINK \nmax values  :      60,     67,     0, SINGAPORE - MAIN ISLAND \n\n\n\n\nConverting the Spatial Class into Generic sp Format\n\nchildcare_sp <- as(childcare, \"SpatialPoints\")\nsg_sp <- as(sg, \"SpatialPolygons\")\n\n\nchildcare_sp\n\nclass       : SpatialPoints \nfeatures    : 1545 \nextent      : 11203.01, 45404.24, 25667.6, 49300.88  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \n\n\n\nsg_sp\n\nclass       : SpatialPolygons \nfeatures    : 60 \nextent      : 2663.926, 56047.79, 16357.98, 50244.03  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +datum=WGS84 +units=m +no_defs \n\n\n\n\nConverting the Generic sp Format into Spatstat’s ppp Format\n\nchildcare_ppp <- as(childcare_sp, \"ppp\")\nchildcare_ppp\n\nPlanar point pattern: 1545 points\nwindow: rectangle = [11203.01, 45404.24] x [25667.6, 49300.88] units\n\n\n\nplot(childcare_ppp)\n\n\n\n\n\nsummary(childcare_ppp)\n\nPlanar point pattern:  1545 points\nAverage intensity 1.91145e-06 points per square unit\n\n*Pattern contains duplicated points*\n\nCoordinates are given to 3 decimal places\ni.e. rounded to the nearest multiple of 0.001 units\n\nWindow: rectangle = [11203.01, 45404.24] x [25667.6, 49300.88] units\n                    (34200 x 23630 units)\nWindow area = 808287000 square units\n\n\n\n\nHandling Duplicated Points\n\nany(duplicated(childcare_ppp))\n\n[1] TRUE\n\n\n\nmultiplicity(childcare_ppp)\n\n   1    2    3    4    5    6    7    8    9   10   11   12   13   14   15   16 \n   1    1    1    3    1    1    1    1    2    1    1    1    1    1    1    1 \n  17   18   19   20   21   22   23   24   25   26   27   28   29   30   31   32 \n   1    1    1    1    1    1    1    1    1    1    9    1    1    1    1    1 \n  33   34   35   36   37   38   39   40   41   42   43   44   45   46   47   48 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n  49   50   51   52   53   54   55   56   57   58   59   60   61   62   63   64 \n   1    1    1    1    1    1    2    1    1    3    1    1    1    1    1    1 \n  65   66   67   68   69   70   71   72   73   74   75   76   77   78   79   80 \n   1    1    1    1    1    2    1    1    1    1    1    2    1    1    1    1 \n  81   82   83   84   85   86   87   88   89   90   91   92   93   94   95   96 \n   1    1    1    3    1    1    1    1    1    1    1    1    1    1    1    1 \n  97   98   99  100  101  102  103  104  105  106  107  108  109  110  111  112 \n   1    1    1    1    1    1    1    1    2    1    1    1    1    1    1    1 \n 113  114  115  116  117  118  119  120  121  122  123  124  125  126  127  128 \n   1    1    1    1    1    1    2    1    1    1    3    1    1    1    2    1 \n 129  130  131  132  133  134  135  136  137  138  139  140  141  142  143  144 \n   1    1    1    1    1    2    1    1    1    1    1    1    1    1    3    2 \n 145  146  147  148  149  150  151  152  153  154  155  156  157  158  159  160 \n   1    2    1    1    1    2    2    3    1    5    1    5    1    1    1    2 \n 161  162  163  164  165  166  167  168  169  170  171  172  173  174  175  176 \n   1    1    1    1    2    1    1    1    1    1    1    2    1    1    1    1 \n 177  178  179  180  181  182  183  184  185  186  187  188  189  190  191  192 \n   1    4    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 193  194  195  196  197  198  199  200  201  202  203  204  205  206  207  208 \n   1    1    1    1    1    2    2    1    1    1    1    2    1    4    1    1 \n 209  210  211  212  213  214  215  216  217  218  219  220  221  222  223  224 \n   2    1    1    1    1    1    1    1    1    1    1    1    2    1    1    1 \n 225  226  227  228  229  230  231  232  233  234  235  236  237  238  239  240 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 241  242  243  244  245  246  247  248  249  250  251  252  253  254  255  256 \n   1    1    1    1    2    1    1    1    1    1    1    1    1    1    1    1 \n 257  258  259  260  261  262  263  264  265  266  267  268  269  270  271  272 \n   1    1    1    1    1    1    1    1    1    1    2    1    1    1    1    3 \n 273  274  275  276  277  278  279  280  281  282  283  284  285  286  287  288 \n   1    1    1    1    1    1    3    1    1    1    1    1    1    1    1    1 \n 289  290  291  292  293  294  295  296  297  298  299  300  301  302  303  304 \n   1    1    1    1    1    1    1    9    1    1    2    1    1    1    1    1 \n 305  306  307  308  309  310  311  312  313  314  315  316  317  318  319  320 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 321  322  323  324  325  326  327  328  329  330  331  332  333  334  335  336 \n   1    1    1    5    1    1    1    1    1    2    1    1    2    2    1    1 \n 337  338  339  340  341  342  343  344  345  346  347  348  349  350  351  352 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    2    2    1 \n 353  354  355  356  357  358  359  360  361  362  363  364  365  366  367  368 \n   1    1    1    1    9    1    1    1    1    1    1    1    1    1    1    1 \n 369  370  371  372  373  374  375  376  377  378  379  380  381  382  383  384 \n   1    3    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 385  386  387  388  389  390  391  392  393  394  395  396  397  398  399  400 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 401  402  403  404  405  406  407  408  409  410  411  412  413  414  415  416 \n   1    1    2    1    1    1    1    1    1    1    2    1    1    1    1    1 \n 417  418  419  420  421  422  423  424  425  426  427  428  429  430  431  432 \n   1    1    1    1    1    1    1    2    1    1    2    1    1    1    1    1 \n 433  434  435  436  437  438  439  440  441  442  443  444  445  446  447  448 \n   1    1    1    1    2    1    1    1    1    1    1    1    1    1    1    1 \n 449  450  451  452  453  454  455  456  457  458  459  460  461  462  463  464 \n   1    1    9    9    1    1    1    1    1    1    1    1    1    1    2    1 \n 465  466  467  468  469  470  471  472  473  474  475  476  477  478  479  480 \n   2    1    1    1    1    1    1    1    1    1    1    1    2    2    1    1 \n 481  482  483  484  485  486  487  488  489  490  491  492  493  494  495  496 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 497  498  499  500  501  502  503  504  505  506  507  508  509  510  511  512 \n   1    1    1    1    1    1    2    1    1    1    1    1    1    1    1    2 \n 513  514  515  516  517  518  519  520  521  522  523  524  525  526  527  528 \n   1    1    1    1    1    1    1    1    1    1    1    2    1    1    3    1 \n 529  530  531  532  533  534  535  536  537  538  539  540  541  542  543  544 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 545  546  547  548  549  550  551  552  553  554  555  556  557  558  559  560 \n   1    1    1    1    1    1    1    1    1    3    1    1    1    1    1    1 \n 561  562  563  564  565  566  567  568  569  570  571  572  573  574  575  576 \n   2    2    2    1    1    1    1    2    1    1    2    1    1    1    2    1 \n 577  578  579  580  581  582  583  584  585  586  587  588  589  590  591  592 \n   1    2    1    1    1    1    1    9    1    4    1    2    1    1    1    1 \n 593  594  595  596  597  598  599  600  601  602  603  604  605  606  607  608 \n   2    1    1    1    1    1    1    1    2    1    2    1    1    1    1    1 \n 609  610  611  612  613  614  615  616  617  618  619  620  621  622  623  624 \n   1    1    1    1    1    1    1    1    1    2    1    2    1    1    1    1 \n 625  626  627  628  629  630  631  632  633  634  635  636  637  638  639  640 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 641  642  643  644  645  646  647  648  649  650  651  652  653  654  655  656 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    4 \n 657  658  659  660  661  662  663  664  665  666  667  668  669  670  671  672 \n   1    1    1    1    1    1    1    3    1    1    1    1    1    1    1    1 \n 673  674  675  676  677  678  679  680  681  682  683  684  685  686  687  688 \n   1    1    1    1    1    4    1    1    1    1    1    4    1    1    1    1 \n 689  690  691  692  693  694  695  696  697  698  699  700  701  702  703  704 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 705  706  707  708  709  710  711  712  713  714  715  716  717  718  719  720 \n   1    1    2    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 721  722  723  724  725  726  727  728  729  730  731  732  733  734  735  736 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 737  738  739  740  741  742  743  744  745  746  747  748  749  750  751  752 \n   1    2    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 753  754  755  756  757  758  759  760  761  762  763  764  765  766  767  768 \n   1    1    1    1    1    2    1    1    1    1    1    1    1    1    1    1 \n 769  770  771  772  773  774  775  776  777  778  779  780  781  782  783  784 \n   1    1    1    1    1    1    1    1    1    4    1    1    1    1    1    1 \n 785  786  787  788  789  790  791  792  793  794  795  796  797  798  799  800 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 801  802  803  804  805  806  807  808  809  810  811  812  813  814  815  816 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 817  818  819  820  821  822  823  824  825  826  827  828  829  830  831  832 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 833  834  835  836  837  838  839  840  841  842  843  844  845  846  847  848 \n   1    1    1    1    1    1    1    2    1    1    1    1    1    1    1    1 \n 849  850  851  852  853  854  855  856  857  858  859  860  861  862  863  864 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 865  866  867  868  869  870  871  872  873  874  875  876  877  878  879  880 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    2 \n 881  882  883  884  885  886  887  888  889  890  891  892  893  894  895  896 \n   3    1    1    1    2    1    1    1    3    1    1    3    1    1    1    1 \n 897  898  899  900  901  902  903  904  905  906  907  908  909  910  911  912 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 913  914  915  916  917  918  919  920  921  922  923  924  925  926  927  928 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 929  930  931  932  933  934  935  936  937  938  939  940  941  942  943  944 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 945  946  947  948  949  950  951  952  953  954  955  956  957  958  959  960 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    2 \n 961  962  963  964  965  966  967  968  969  970  971  972  973  974  975  976 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 977  978  979  980  981  982  983  984  985  986  987  988  989  990  991  992 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 993  994  995  996  997  998  999 1000 1001 1002 1003 1004 1005 1006 1007 1008 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1009 1010 1011 1012 1013 1014 1015 1016 1017 1018 1019 1020 1021 1022 1023 1024 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1025 1026 1027 1028 1029 1030 1031 1032 1033 1034 1035 1036 1037 1038 1039 1040 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1041 1042 1043 1044 1045 1046 1047 1048 1049 1050 1051 1052 1053 1054 1055 1056 \n   1    1    1    1    1    1    1    1    1    2    2    1    1    1    1    1 \n1057 1058 1059 1060 1061 1062 1063 1064 1065 1066 1067 1068 1069 1070 1071 1072 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1073 1074 1075 1076 1077 1078 1079 1080 1081 1082 1083 1084 1085 1086 1087 1088 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1089 1090 1091 1092 1093 1094 1095 1096 1097 1098 1099 1100 1101 1102 1103 1104 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1105 1106 1107 1108 1109 1110 1111 1112 1113 1114 1115 1116 1117 1118 1119 1120 \n   1    1    1    1    1    2    1    1    1    1    1    1    1    1    1    1 \n1121 1122 1123 1124 1125 1126 1127 1128 1129 1130 1131 1132 1133 1134 1135 1136 \n   1    1    1    1    1    1    1    1    2    2    1    1    1    5    1    1 \n1137 1138 1139 1140 1141 1142 1143 1144 1145 1146 1147 1148 1149 1150 1151 1152 \n   1    1    1    1    1    1    1    1    1    2    1    1    1    1    1    1 \n1153 1154 1155 1156 1157 1158 1159 1160 1161 1162 1163 1164 1165 1166 1167 1168 \n   1    1    1    1    1    1    1    1    1    1    2    1    1    1    1    1 \n1169 1170 1171 1172 1173 1174 1175 1176 1177 1178 1179 1180 1181 1182 1183 1184 \n   1    9    1    2    2    1    1    1    2    1    1    1    1    1    1    1 \n1185 1186 1187 1188 1189 1190 1191 1192 1193 1194 1195 1196 1197 1198 1199 1200 \n   1    1    1    1    2    1    1    1    3    1    1    1    1    1    1    1 \n1201 1202 1203 1204 1205 1206 1207 1208 1209 1210 1211 1212 1213 1214 1215 1216 \n   9    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1217 1218 1219 1220 1221 1222 1223 1224 1225 1226 1227 1228 1229 1230 1231 1232 \n   1    1    1    2    1    1    1    1    1    1    1    1    1    1    1    1 \n1233 1234 1235 1236 1237 1238 1239 1240 1241 1242 1243 1244 1245 1246 1247 1248 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1249 1250 1251 1252 1253 1254 1255 1256 1257 1258 1259 1260 1261 1262 1263 1264 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1265 1266 1267 1268 1269 1270 1271 1272 1273 1274 1275 1276 1277 1278 1279 1280 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1281 1282 1283 1284 1285 1286 1287 1288 1289 1290 1291 1292 1293 1294 1295 1296 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    2 \n1297 1298 1299 1300 1301 1302 1303 1304 1305 1306 1307 1308 1309 1310 1311 1312 \n   1    1    1    2    1    2    1    1    1    2    2    2    1    1    1    1 \n1313 1314 1315 1316 1317 1318 1319 1320 1321 1322 1323 1324 1325 1326 1327 1328 \n   1    1    2    1    1    1    1    1    1    1    1    1    2    1    1    1 \n1329 1330 1331 1332 1333 1334 1335 1336 1337 1338 1339 1340 1341 1342 1343 1344 \n   1    1    1    1    3    1    1    1    1    1    1    1    1    1    1    1 \n1345 1346 1347 1348 1349 1350 1351 1352 1353 1354 1355 1356 1357 1358 1359 1360 \n   1    1    1    1    1    1    1    1    4    1    1    1    1    1    2    1 \n1361 1362 1363 1364 1365 1366 1367 1368 1369 1370 1371 1372 1373 1374 1375 1376 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1377 1378 1379 1380 1381 1382 1383 1384 1385 1386 1387 1388 1389 1390 1391 1392 \n   1    1    1    1    1    1    1    1    1    9    1    1    1    1    1    1 \n1393 1394 1395 1396 1397 1398 1399 1400 1401 1402 1403 1404 1405 1406 1407 1408 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1409 1410 1411 1412 1413 1414 1415 1416 1417 1418 1419 1420 1421 1422 1423 1424 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1425 1426 1427 1428 1429 1430 1431 1432 1433 1434 1435 1436 1437 1438 1439 1440 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    2    1 \n1441 1442 1443 1444 1445 1446 1447 1448 1449 1450 1451 1452 1453 1454 1455 1456 \n   1    2    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1457 1458 1459 1460 1461 1462 1463 1464 1465 1466 1467 1468 1469 1470 1471 1472 \n   1    1    1    1    1    1    1    1    1    1    2    1    1    1    1    1 \n1473 1474 1475 1476 1477 1478 1479 1480 1481 1482 1483 1484 1485 1486 1487 1488 \n   1    1    1    1    1    1    2    1    1    1    1    1    1    1    1    1 \n1489 1490 1491 1492 1493 1494 1495 1496 1497 1498 1499 1500 1501 1502 1503 1504 \n   1    1    1    1    1    1    1    1    1    1    5    1    1    1    1    1 \n1505 1506 1507 1508 1509 1510 1511 1512 1513 1514 1515 1516 1517 1518 1519 1520 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1521 1522 1523 1524 1525 1526 1527 1528 1529 1530 1531 1532 1533 1534 1535 1536 \n   1    1    1    1    1    2    1    1    1    1    2    1    1    1    1    3 \n1537 1538 1539 1540 1541 1542 1543 1544 1545 \n   1    1    1    1    1    1    2    1    1 \n\n\n\nsum(multiplicity(childcare_ppp) > 1)\n\n[1] 128\n\n\n\ntmap_mode('view')\ntm_shape(childcare) +\n  tm_dots(alpha=0.4, \n          size=0.05)\n\n\n\n\n\n\n\ntmap_mode('plot')\n\n\nchildcare_ppp_jit <- rjitter(childcare_ppp, retry=TRUE, nsim=1, drop=TRUE)\n\n\nany(duplicated(childcare_ppp_jit))\n\n[1] FALSE\n\n\n\n\nCreating owin Object\n\nsg_owin <- as(sg_sp, \"owin\")\n\n\nplot(sg_owin)\n\n\n\n\n\nsummary(sg_owin)\n\nWindow: polygonal boundary\n60 separate polygons (no holes)\n            vertices        area relative.area\npolygon 1         38 1.56140e+04      2.09e-05\npolygon 2        735 4.69093e+06      6.27e-03\npolygon 3         49 1.66986e+04      2.23e-05\npolygon 4         76 3.12332e+05      4.17e-04\npolygon 5       5141 6.36179e+08      8.50e-01\npolygon 6         42 5.58317e+04      7.46e-05\npolygon 7         67 1.31354e+06      1.75e-03\npolygon 8         15 4.46420e+03      5.96e-06\npolygon 9         14 5.46674e+03      7.30e-06\npolygon 10        37 5.26194e+03      7.03e-06\npolygon 11        53 3.44003e+04      4.59e-05\npolygon 12        74 5.82234e+04      7.78e-05\npolygon 13        69 5.63134e+04      7.52e-05\npolygon 14       143 1.45139e+05      1.94e-04\npolygon 15       165 3.38736e+05      4.52e-04\npolygon 16       130 9.40465e+04      1.26e-04\npolygon 17        19 1.80977e+03      2.42e-06\npolygon 18        16 2.01046e+03      2.69e-06\npolygon 19        93 4.30642e+05      5.75e-04\npolygon 20        90 4.15092e+05      5.54e-04\npolygon 21       721 1.92795e+06      2.57e-03\npolygon 22       330 1.11896e+06      1.49e-03\npolygon 23       115 9.28394e+05      1.24e-03\npolygon 24        37 1.01705e+04      1.36e-05\npolygon 25        25 1.66227e+04      2.22e-05\npolygon 26        10 2.14507e+03      2.86e-06\npolygon 27       190 2.02489e+05      2.70e-04\npolygon 28       175 9.25904e+05      1.24e-03\npolygon 29      1993 9.99217e+06      1.33e-02\npolygon 30        38 2.42492e+04      3.24e-05\npolygon 31        24 6.35239e+03      8.48e-06\npolygon 32        53 6.35791e+05      8.49e-04\npolygon 33        41 1.60161e+04      2.14e-05\npolygon 34        22 2.54368e+03      3.40e-06\npolygon 35        30 1.08382e+04      1.45e-05\npolygon 36       327 2.16921e+06      2.90e-03\npolygon 37       111 6.62927e+05      8.85e-04\npolygon 38        90 1.15991e+05      1.55e-04\npolygon 39        98 6.26829e+04      8.37e-05\npolygon 40       415 3.25384e+06      4.35e-03\npolygon 41       222 1.51142e+06      2.02e-03\npolygon 42       107 6.33039e+05      8.45e-04\npolygon 43         7 2.48299e+03      3.32e-06\npolygon 44        17 3.28303e+04      4.38e-05\npolygon 45        26 8.34758e+03      1.11e-05\npolygon 46       177 4.67446e+05      6.24e-04\npolygon 47        16 3.19460e+03      4.27e-06\npolygon 48        15 4.87296e+03      6.51e-06\npolygon 49        66 1.61841e+04      2.16e-05\npolygon 50       149 5.63430e+06      7.53e-03\npolygon 51       609 2.62570e+07      3.51e-02\npolygon 52         8 7.82256e+03      1.04e-05\npolygon 53       976 2.33447e+07      3.12e-02\npolygon 54        55 8.25379e+04      1.10e-04\npolygon 55       976 2.33447e+07      3.12e-02\npolygon 56        61 3.33449e+05      4.45e-04\npolygon 57         6 1.68410e+04      2.25e-05\npolygon 58         4 9.45963e+03      1.26e-05\npolygon 59        46 6.99702e+05      9.35e-04\npolygon 60        13 7.00873e+04      9.36e-05\nenclosing rectangle: [2663.93, 56047.79] x [16357.98, 50244.03] units\n                     (53380 x 33890 units)\nWindow area = 748741000 square units\nFraction of frame area: 0.414\n\n\n\n\nCombining Point Events Object and owin Object\n\nchildcareSG_ppp = childcare_ppp[sg_owin]\n\n\nsummary(childcareSG_ppp)\n\nPlanar point pattern:  1545 points\nAverage intensity 2.063463e-06 points per square unit\n\n*Pattern contains duplicated points*\n\nCoordinates are given to 3 decimal places\ni.e. rounded to the nearest multiple of 0.001 units\n\nWindow: polygonal boundary\n60 separate polygons (no holes)\n            vertices        area relative.area\npolygon 1         38 1.56140e+04      2.09e-05\npolygon 2        735 4.69093e+06      6.27e-03\npolygon 3         49 1.66986e+04      2.23e-05\npolygon 4         76 3.12332e+05      4.17e-04\npolygon 5       5141 6.36179e+08      8.50e-01\npolygon 6         42 5.58317e+04      7.46e-05\npolygon 7         67 1.31354e+06      1.75e-03\npolygon 8         15 4.46420e+03      5.96e-06\npolygon 9         14 5.46674e+03      7.30e-06\npolygon 10        37 5.26194e+03      7.03e-06\npolygon 11        53 3.44003e+04      4.59e-05\npolygon 12        74 5.82234e+04      7.78e-05\npolygon 13        69 5.63134e+04      7.52e-05\npolygon 14       143 1.45139e+05      1.94e-04\npolygon 15       165 3.38736e+05      4.52e-04\npolygon 16       130 9.40465e+04      1.26e-04\npolygon 17        19 1.80977e+03      2.42e-06\npolygon 18        16 2.01046e+03      2.69e-06\npolygon 19        93 4.30642e+05      5.75e-04\npolygon 20        90 4.15092e+05      5.54e-04\npolygon 21       721 1.92795e+06      2.57e-03\npolygon 22       330 1.11896e+06      1.49e-03\npolygon 23       115 9.28394e+05      1.24e-03\npolygon 24        37 1.01705e+04      1.36e-05\npolygon 25        25 1.66227e+04      2.22e-05\npolygon 26        10 2.14507e+03      2.86e-06\npolygon 27       190 2.02489e+05      2.70e-04\npolygon 28       175 9.25904e+05      1.24e-03\npolygon 29      1993 9.99217e+06      1.33e-02\npolygon 30        38 2.42492e+04      3.24e-05\npolygon 31        24 6.35239e+03      8.48e-06\npolygon 32        53 6.35791e+05      8.49e-04\npolygon 33        41 1.60161e+04      2.14e-05\npolygon 34        22 2.54368e+03      3.40e-06\npolygon 35        30 1.08382e+04      1.45e-05\npolygon 36       327 2.16921e+06      2.90e-03\npolygon 37       111 6.62927e+05      8.85e-04\npolygon 38        90 1.15991e+05      1.55e-04\npolygon 39        98 6.26829e+04      8.37e-05\npolygon 40       415 3.25384e+06      4.35e-03\npolygon 41       222 1.51142e+06      2.02e-03\npolygon 42       107 6.33039e+05      8.45e-04\npolygon 43         7 2.48299e+03      3.32e-06\npolygon 44        17 3.28303e+04      4.38e-05\npolygon 45        26 8.34758e+03      1.11e-05\npolygon 46       177 4.67446e+05      6.24e-04\npolygon 47        16 3.19460e+03      4.27e-06\npolygon 48        15 4.87296e+03      6.51e-06\npolygon 49        66 1.61841e+04      2.16e-05\npolygon 50       149 5.63430e+06      7.53e-03\npolygon 51       609 2.62570e+07      3.51e-02\npolygon 52         8 7.82256e+03      1.04e-05\npolygon 53       976 2.33447e+07      3.12e-02\npolygon 54        55 8.25379e+04      1.10e-04\npolygon 55       976 2.33447e+07      3.12e-02\npolygon 56        61 3.33449e+05      4.45e-04\npolygon 57         6 1.68410e+04      2.25e-05\npolygon 58         4 9.45963e+03      1.26e-05\npolygon 59        46 6.99702e+05      9.35e-04\npolygon 60        13 7.00873e+04      9.36e-05\nenclosing rectangle: [2663.93, 56047.79] x [16357.98, 50244.03] units\n                     (53380 x 33890 units)\nWindow area = 748741000 square units\nFraction of frame area: 0.414"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex04/Hands-On_Ex04.html#first-order-spatial-point-patterns-analysis",
    "href": "Hands-On_Ex/Hands-On_Ex04/Hands-On_Ex04.html#first-order-spatial-point-patterns-analysis",
    "title": "Hands-On Exercise 4: 1st Order Spatial Point Patterns Analysis Methods",
    "section": "First-Order Spatial Point Patterns Analysis",
    "text": "First-Order Spatial Point Patterns Analysis\n\nKernel Density Estimation\n\nComputing Kernel Density Estimation Using Automatic Bandwidth Selection Method\n\nkde_childcareSG_bw <- density(childcareSG_ppp,\n                              sigma=bw.diggle,\n                              edge=TRUE,\n                            kernel=\"gaussian\") \n\n\nplot(kde_childcareSG_bw)\n\n\n\n\n\nbw <- bw.diggle(childcareSG_ppp)\nbw\n\n   sigma \n298.4095 \n\n\n\n\nRescalling KDE Values\n\nchildcareSG_ppp.km <- rescale(childcareSG_ppp, 1000, \"km\")\n\n\nkde_childcareSG.bw <- density(childcareSG_ppp.km, sigma=bw.diggle, edge=TRUE, kernel=\"gaussian\")\nplot(kde_childcareSG.bw)\n\n\n\n\n\n\n\nWorking with Different Automatic Bandwidth Methods\n\n bw.CvL(childcareSG_ppp.km)\n\n   sigma \n4.543278 \n\n\n\nbw.scott(childcareSG_ppp.km)\n\n sigma.x  sigma.y \n2.224898 1.450966 \n\n\n\nbw.ppl(childcareSG_ppp.km)\n\n    sigma \n0.3897114 \n\n\n\nbw.diggle(childcareSG_ppp.km)\n\n    sigma \n0.2984095 \n\n\n\nkde_childcareSG.ppl <- density(childcareSG_ppp.km, \n                               sigma=bw.ppl, \n                               edge=TRUE,\n                               kernel=\"gaussian\")\npar(mfrow=c(1,2))\nplot(kde_childcareSG.bw, main = \"bw.diggle\")\nplot(kde_childcareSG.ppl, main = \"bw.ppl\")\n\n\n\n\n\n\nWorking with Different Kernel Methods\n\npar(mfrow=c(2,2))\nplot(density(childcareSG_ppp.km, \n             sigma=bw.ppl, \n             edge=TRUE, \n             kernel=\"gaussian\"), \n     main=\"Gaussian\")\nplot(density(childcareSG_ppp.km, \n             sigma=bw.ppl, \n             edge=TRUE, \n             kernel=\"epanechnikov\"), \n     main=\"Epanechnikov\")\nplot(density(childcareSG_ppp.km, \n             sigma=bw.ppl, \n             edge=TRUE, \n             kernel=\"quartic\"), \n     main=\"Quartic\")\nplot(density(childcareSG_ppp.km, \n             sigma=bw.ppl, \n             edge=TRUE, \n             kernel=\"disc\"), \n     main=\"Disc\")"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex04/Hands-On_Ex04.html#fixed-and-adaptive-kde",
    "href": "Hands-On_Ex/Hands-On_Ex04/Hands-On_Ex04.html#fixed-and-adaptive-kde",
    "title": "Hands-On Exercise 4: 1st Order Spatial Point Patterns Analysis Methods",
    "section": "Fixed and Adaptive KDE",
    "text": "Fixed and Adaptive KDE\n\nComputing KDE by Using Fixed Bandwidth\n\nkde_childcareSG_600 <- density(childcareSG_ppp.km, sigma=0.6, edge=TRUE, kernel=\"gaussian\")\nplot(kde_childcareSG_600)\n\n\n\n\n\n\nComputing KDE by Using Adaptive Bandwidth\n\nkde_childcareSG_adaptive <- adaptive.density(childcareSG_ppp.km, method=\"kernel\")\nplot(kde_childcareSG_adaptive)\n\n\n\n\n\n\nComparing KDE Between Fixed and Adaptive\n\npar(mfrow=c(1,2))\nplot(kde_childcareSG.bw, main = \"Fixed bandwidth\")\nplot(kde_childcareSG_adaptive, main = \"Adaptive bandwidth\")\n\n\n\n\n\n\nConverting KDE Output into Grid Object\n\ngridded_kde_childcareSG_bw <- as.SpatialGridDataFrame.im(kde_childcareSG.bw)\nspplot(gridded_kde_childcareSG_bw)\n\n\n\n\n\nConverting Gridded Output into Raster\n\nkde_childcareSG_bw_raster <- raster(gridded_kde_childcareSG_bw)\n\n\nkde_childcareSG_bw_raster\n\nclass      : RasterLayer \ndimensions : 128, 128, 16384  (nrow, ncol, ncell)\nresolution : 0.4170614, 0.2647348  (x, y)\nextent     : 2.663926, 56.04779, 16.35798, 50.24403  (xmin, xmax, ymin, ymax)\ncrs        : NA \nsource     : memory\nnames      : v \nvalues     : -8.476185e-15, 28.51831  (min, max)\n\n\n\n\nAssigning Projection Systems\n\nprojection(kde_childcareSG_bw_raster) <- CRS(\"+init=EPSG:3414\")\nkde_childcareSG_bw_raster\n\nclass      : RasterLayer \ndimensions : 128, 128, 16384  (nrow, ncol, ncell)\nresolution : 0.4170614, 0.2647348  (x, y)\nextent     : 2.663926, 56.04779, 16.35798, 50.24403  (xmin, xmax, ymin, ymax)\ncrs        : +init=EPSG:3414 \nsource     : memory\nnames      : v \nvalues     : -8.476185e-15, 28.51831  (min, max)\n\n\n\n\n\nVisualising the Output in tmap\n\ntm_shape(kde_childcareSG_bw_raster) + \n  tm_raster(\"v\") +\n  tm_layout(legend.position = c(\"right\", \"bottom\"), frame = FALSE)\n\n\n\n\n\n\nComparing Spatial Point Patterns Using KDE\n\nExtracting Study Area\n\npg = mpsz[mpsz@data$PLN_AREA_N == \"PUNGGOL\",]\ntm = mpsz[mpsz@data$PLN_AREA_N == \"TAMPINES\",]\nck = mpsz[mpsz@data$PLN_AREA_N == \"CHOA CHU KANG\",]\njw = mpsz[mpsz@data$PLN_AREA_N == \"JURONG WEST\",]\n\n\npar(mfrow=c(2,2))\nplot(pg, main = \"Ponggol\")\nplot(tm, main = \"Tampines\")\nplot(ck, main = \"Choa Chu Kang\")\nplot(jw, main = \"Jurong West\")\n\n\n\n\n\n\nConverting the Spatial Point Data Frame into Generic sp Format\n\npg_sp = as(pg, \"SpatialPolygons\")\ntm_sp = as(tm, \"SpatialPolygons\")\nck_sp = as(ck, \"SpatialPolygons\")\njw_sp = as(jw, \"SpatialPolygons\")\n\n\n\nCreating owin Object\n\npg_owin = as(pg_sp, \"owin\")\ntm_owin = as(tm_sp, \"owin\")\nck_owin = as(ck_sp, \"owin\")\njw_owin = as(jw_sp, \"owin\")\n\n\n\nCombining Childcare Points and the Study Area\n\nchildcare_pg_ppp = childcare_ppp_jit[pg_owin]\nchildcare_tm_ppp = childcare_ppp_jit[tm_owin]\nchildcare_ck_ppp = childcare_ppp_jit[ck_owin]\nchildcare_jw_ppp = childcare_ppp_jit[jw_owin]\n\n\nchildcare_pg_ppp.km = rescale(childcare_pg_ppp, 1000, \"km\")\nchildcare_tm_ppp.km = rescale(childcare_tm_ppp, 1000, \"km\")\nchildcare_ck_ppp.km = rescale(childcare_ck_ppp, 1000, \"km\")\nchildcare_jw_ppp.km = rescale(childcare_jw_ppp, 1000, \"km\")\n\n\npar(mfrow=c(2,2))\nplot(childcare_pg_ppp.km, main=\"Punggol\")\nplot(childcare_tm_ppp.km, main=\"Tampines\")\nplot(childcare_ck_ppp.km, main=\"Choa Chu Kang\")\nplot(childcare_jw_ppp.km, main=\"Jurong West\")\n\n\n\n\n\n\nComputing KDE\n\npar(mfrow=c(2,2))\nplot(density(childcare_pg_ppp.km, \n             sigma=bw.diggle, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"Punggol\")\nplot(density(childcare_tm_ppp.km, \n             sigma=bw.diggle, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"Tempines\")\nplot(density(childcare_ck_ppp.km, \n             sigma=bw.diggle, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"Choa Chu Kang\")\nplot(density(childcare_jw_ppp.km, \n             sigma=bw.diggle, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"JUrong West\")\n\n\n\n\n\n\nComputing Fixed Bandwidth KDE\n\npar(mfrow=c(2,2))\nplot(density(childcare_ck_ppp.km, \n             sigma=0.25, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"Chou Chu Kang\")\nplot(density(childcare_jw_ppp.km, \n             sigma=0.25, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"JUrong West\")\nplot(density(childcare_pg_ppp.km, \n             sigma=0.25, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"Punggol\")\nplot(density(childcare_tm_ppp.km, \n             sigma=0.25, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"Tampines\")"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex04/Hands-On_Ex04.html#nearest-neighbour-analysis",
    "href": "Hands-On_Ex/Hands-On_Ex04/Hands-On_Ex04.html#nearest-neighbour-analysis",
    "title": "Hands-On Exercise 4: 1st Order Spatial Point Patterns Analysis Methods",
    "section": "Nearest Neighbour Analysis",
    "text": "Nearest Neighbour Analysis\n\nTesting Spatial Point Patterns Using Clark and Evans Test\n\nclarkevans.test(childcareSG_ppp,\n                correction=\"none\",\n                clipregion=\"sg_owin\",\n                alternative=c(\"clustered\"),\n                nsim=99)\n\n\n    Clark-Evans test\n    No edge correction\n    Monte Carlo test based on 99 simulations of CSR with fixed n\n\ndata:  childcareSG_ppp\nR = 0.54756, p-value = 0.01\nalternative hypothesis: clustered (R < 1)\n\n\n\n\nClark and Evan Test: Choa Chu Kang Planning Area\n\nclarkevans.test(childcare_ck_ppp,\n                correction=\"none\",\n                clipregion=NULL,\n                alternative=c(\"two.sided\"),\n                nsim=999)\n\n\n    Clark-Evans test\n    No edge correction\n    Monte Carlo test based on 999 simulations of CSR with fixed n\n\ndata:  childcare_ck_ppp\nR = 1.0037, p-value = 0.372\nalternative hypothesis: two-sided\n\n\n\n\nClark and Evan Test: Tampines Planning Area\n\nclarkevans.test(childcare_tm_ppp,\n                correction=\"none\",\n                clipregion=NULL,\n                alternative=c(\"two.sided\"),\n                nsim=999)\n\n\n    Clark-Evans test\n    No edge correction\n    Monte Carlo test based on 999 simulations of CSR with fixed n\n\ndata:  childcare_tm_ppp\nR = 0.80374, p-value = 0.002\nalternative hypothesis: two-sided"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex04/Hands-On_Ex04_2.html",
    "href": "Hands-On_Ex/Hands-On_Ex04/Hands-On_Ex04_2.html",
    "title": "Hands-On Exercise 4: 2nd Order Spatial Point Patterns Analysis Methods",
    "section": "",
    "text": "pacman::p_load(maptools, sf, raster, spatstat, tmap)\n\n\n\n\n\nchildcare_sf <- st_read(\"data/child-care-services-geojson.geojson\") %>%\n  st_transform(crs = 3414)\n\nReading layer `child-care-services-geojson' from data source \n  `C:\\Users\\la935\\Desktop\\IS415 - GAA\\IS415 - GAA (New)\\Hands-On_Ex\\Hands-On_Ex04\\data\\child-care-services-geojson.geojson' \n  using driver `GeoJSON'\nSimple feature collection with 1545 features and 2 fields\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 103.6824 ymin: 1.248403 xmax: 103.9897 ymax: 1.462134\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\n\n\n\nsg_sf <- st_read(dsn = \"data\", layer=\"CostalOutline\")\n\nReading layer `CostalOutline' from data source \n  `C:\\Users\\la935\\Desktop\\IS415 - GAA\\IS415 - GAA (New)\\Hands-On_Ex\\Hands-On_Ex04\\data' \n  using driver `ESRI Shapefile'\nSimple feature collection with 60 features and 4 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 2663.926 ymin: 16357.98 xmax: 56047.79 ymax: 50244.03\nProjected CRS: SVY21\n\n\n\nmpsz_sf <- st_read(dsn = \"data\", \n                layer = \"MP14_SUBZONE_WEB_PL\")\n\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `C:\\Users\\la935\\Desktop\\IS415 - GAA\\IS415 - GAA (New)\\Hands-On_Ex\\Hands-On_Ex04\\data' \n  using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n\n\n\n\n\n\ntmap_mode('view')\n\n\ntm_shape(childcare_sf)+tm_dots()\n\n\n\n\n\n\n\ntmap_mode('plot')"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex04/Hands-On_Ex04_2.html#converting-sf-data-frames-to-sps-spatial-class",
    "href": "Hands-On_Ex/Hands-On_Ex04/Hands-On_Ex04_2.html#converting-sf-data-frames-to-sps-spatial-class",
    "title": "Hands-On Exercise 4: 2nd Order Spatial Point Patterns Analysis Methods",
    "section": "Converting sf data frames to sp’s Spatial* class",
    "text": "Converting sf data frames to sp’s Spatial* class\n\nchildcare <- as_Spatial(childcare_sf)\nmpsz <- as_Spatial(mpsz_sf)\nsg <- as_Spatial(sg_sf)\n\n\nchildcare\n\nclass       : SpatialPointsDataFrame \nfeatures    : 1545 \nextent      : 11203.01, 45404.24, 25667.6, 49300.88  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \nvariables   : 2\nnames       :    Nameescription \nmin values  :   kml_1, <center><table><tr><th colspan='2' align='center'><em>Attributes</em></th></tr><tr bgcolor=\"#E3E3F3\"> <th>ADDRESSBLOCKHOUSENUMBER</th> <td></td> </tr><tr bgcolor=\"\"> <th>ADDRESSBUILDINGNAME</th> <td></td> </tr><tr bgcolor=\"#E3E3F3\"> <th>ADDRESSPOSTALCODE</th> <td>018989</td> </tr><tr bgcolor=\"\"> <th>ADDRESSSTREETNAME</th> <td>1, MARINA BOULEVARD, #B1 - 01, ONE MARINA BOULEVARD, SINGAPORE 018989</td> </tr><tr bgcolor=\"#E3E3F3\"> <th>ADDRESSTYPE</th> <td></td> </tr><tr bgcolor=\"\"> <th>DESCRIPTION</th> <td></td> </tr><tr bgcolor=\"#E3E3F3\"> <th>HYPERLINK</th> <td></td> </tr><tr bgcolor=\"\"> <th>LANDXADDRESSPOINT</th> <td>0</td> </tr><tr bgcolor=\"#E3E3F3\"> <th>LANDYADDRESSPOINT</th> <td>0</td> </tr><tr bgcolor=\"\"> <th>NAME</th> <td>THE LITTLE SKOOL-HOUSE INTERNATIONAL PTE. LTD.</td> </tr><tr bgcolor=\"#E3E3F3\"> <th>PHOTOURL</th> <td></td> </tr><tr bgcolor=\"\"> <th>ADDRESSFLOORNUMBER</th> <td></td> </tr><tr bgcolor=\"#E3E3F3\"> <th>INC_CRC</th> <td>08F73931F4A691F4</td> </tr><tr bgcolor=\"\"> <th>FMEL_UPD_D</th> <td>20200826094036</td> </tr><tr bgcolor=\"#E3E3F3\"> <th>ADDRESSUNITNUMBER</th> <td></td> </tr></table></center> \nmax values  : kml_999,                  <center><table><tr><th colspan='2' align='center'><em>Attributes</em></th></tr><tr bgcolor=\"#E3E3F3\"> <th>ADDRESSBLOCKHOUSENUMBER</th> <td></td> </tr><tr bgcolor=\"\"> <th>ADDRESSBUILDINGNAME</th> <td></td> </tr><tr bgcolor=\"#E3E3F3\"> <th>ADDRESSPOSTALCODE</th> <td>829646</td> </tr><tr bgcolor=\"\"> <th>ADDRESSSTREETNAME</th> <td>200, PONGGOL SEVENTEENTH AVENUE, SINGAPORE 829646</td> </tr><tr bgcolor=\"#E3E3F3\"> <th>ADDRESSTYPE</th> <td></td> </tr><tr bgcolor=\"\"> <th>DESCRIPTION</th> <td>Child Care Services</td> </tr><tr bgcolor=\"#E3E3F3\"> <th>HYPERLINK</th> <td></td> </tr><tr bgcolor=\"\"> <th>LANDXADDRESSPOINT</th> <td>0</td> </tr><tr bgcolor=\"#E3E3F3\"> <th>LANDYADDRESSPOINT</th> <td>0</td> </tr><tr bgcolor=\"\"> <th>NAME</th> <td>RAFFLES KIDZ @ PUNGGOL PTE LTD</td> </tr><tr bgcolor=\"#E3E3F3\"> <th>PHOTOURL</th> <td></td> </tr><tr bgcolor=\"\"> <th>ADDRESSFLOORNUMBER</th> <td></td> </tr><tr bgcolor=\"#E3E3F3\"> <th>INC_CRC</th> <td>379D017BF244B0FA</td> </tr><tr bgcolor=\"\"> <th>FMEL_UPD_D</th> <td>20200826094036</td> </tr><tr bgcolor=\"#E3E3F3\"> <th>ADDRESSUNITNUMBER</th> <td></td> </tr></table></center> \n\n\n\nmpsz\n\nclass       : SpatialPolygonsDataFrame \nfeatures    : 323 \nextent      : 2667.538, 56396.44, 15748.72, 50256.33  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +datum=WGS84 +units=m +no_defs \nvariables   : 15\nnames       : OBJECTID, SUBZONE_NO, SUBZONE_N, SUBZONE_C, CA_IND, PLN_AREA_N, PLN_AREA_C,       REGION_N, REGION_C,          INC_CRC, FMEL_UPD_D,     X_ADDR,     Y_ADDR,    SHAPE_Leng,    SHAPE_Area \nmin values  :        1,          1, ADMIRALTY,    AMSZ01,      N, ANG MO KIO,         AM, CENTRAL REGION,       CR, 00F5E30B5C9B7AD8,      16409,  5092.8949,  19579.069, 871.554887798, 39437.9352703 \nmax values  :      323,         17,    YUNNAN,    YSSZ09,      Y,     YISHUN,         YS,    WEST REGION,       WR, FFCCF172717C2EAF,      16409, 50424.7923, 49552.7904, 68083.9364708,  69748298.792 \n\n\n\nsg\n\nclass       : SpatialPolygonsDataFrame \nfeatures    : 60 \nextent      : 2663.926, 56047.79, 16357.98, 50244.03  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +datum=WGS84 +units=m +no_defs \nvariables   : 4\nnames       : GDO_GID, MSLINK, MAPID,              COSTAL_NAM \nmin values  :       1,      1,     0,             ISLAND LINK \nmax values  :      60,     67,     0, SINGAPORE - MAIN ISLAND"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex04/Hands-On_Ex04_2.html#converting-the-spatial-class-into-generic-sp-format",
    "href": "Hands-On_Ex/Hands-On_Ex04/Hands-On_Ex04_2.html#converting-the-spatial-class-into-generic-sp-format",
    "title": "Hands-On Exercise 4: 2nd Order Spatial Point Patterns Analysis Methods",
    "section": "Converting the Spatial* class into generic sp format",
    "text": "Converting the Spatial* class into generic sp format\n\nchildcare_sp <- as(childcare, \"SpatialPoints\")\nsg_sp <- as(sg, \"SpatialPolygons\")\n\n\nchildcare_sp\n\nclass       : SpatialPoints \nfeatures    : 1545 \nextent      : 11203.01, 45404.24, 25667.6, 49300.88  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \n\n\n\nsg_sp\n\nclass       : SpatialPolygons \nfeatures    : 60 \nextent      : 2663.926, 56047.79, 16357.98, 50244.03  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +datum=WGS84 +units=m +no_defs"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex04/Hands-On_Ex04_2.html#converting-the-generic-sp-format-into-spatstats-ppp-format",
    "href": "Hands-On_Ex/Hands-On_Ex04/Hands-On_Ex04_2.html#converting-the-generic-sp-format-into-spatstats-ppp-format",
    "title": "Hands-On Exercise 4: 2nd Order Spatial Point Patterns Analysis Methods",
    "section": "Converting the generic sp format into spatstat’s ppp format",
    "text": "Converting the generic sp format into spatstat’s ppp format\n\nchildcare_ppp <- as(childcare_sp, \"ppp\")\nchildcare_ppp\n\nPlanar point pattern: 1545 points\nwindow: rectangle = [11203.01, 45404.24] x [25667.6, 49300.88] units\n\n\n\nplot(childcare_ppp)\n\n\n\n\n\nsummary(childcare_ppp)\n\nPlanar point pattern:  1545 points\nAverage intensity 1.91145e-06 points per square unit\n\n*Pattern contains duplicated points*\n\nCoordinates are given to 3 decimal places\ni.e. rounded to the nearest multiple of 0.001 units\n\nWindow: rectangle = [11203.01, 45404.24] x [25667.6, 49300.88] units\n                    (34200 x 23630 units)\nWindow area = 808287000 square units"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex04/Hands-On_Ex04_2.html#handling-duplicated-points",
    "href": "Hands-On_Ex/Hands-On_Ex04/Hands-On_Ex04_2.html#handling-duplicated-points",
    "title": "Hands-On Exercise 4: 2nd Order Spatial Point Patterns Analysis Methods",
    "section": "Handling Duplicated Points",
    "text": "Handling Duplicated Points\n\nany(duplicated(childcare_ppp))\n\n[1] TRUE\n\n\n\nmultiplicity(childcare_ppp)\n\n   1    2    3    4    5    6    7    8    9   10   11   12   13   14   15   16 \n   1    1    1    3    1    1    1    1    2    1    1    1    1    1    1    1 \n  17   18   19   20   21   22   23   24   25   26   27   28   29   30   31   32 \n   1    1    1    1    1    1    1    1    1    1    9    1    1    1    1    1 \n  33   34   35   36   37   38   39   40   41   42   43   44   45   46   47   48 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n  49   50   51   52   53   54   55   56   57   58   59   60   61   62   63   64 \n   1    1    1    1    1    1    2    1    1    3    1    1    1    1    1    1 \n  65   66   67   68   69   70   71   72   73   74   75   76   77   78   79   80 \n   1    1    1    1    1    2    1    1    1    1    1    2    1    1    1    1 \n  81   82   83   84   85   86   87   88   89   90   91   92   93   94   95   96 \n   1    1    1    3    1    1    1    1    1    1    1    1    1    1    1    1 \n  97   98   99  100  101  102  103  104  105  106  107  108  109  110  111  112 \n   1    1    1    1    1    1    1    1    2    1    1    1    1    1    1    1 \n 113  114  115  116  117  118  119  120  121  122  123  124  125  126  127  128 \n   1    1    1    1    1    1    2    1    1    1    3    1    1    1    2    1 \n 129  130  131  132  133  134  135  136  137  138  139  140  141  142  143  144 \n   1    1    1    1    1    2    1    1    1    1    1    1    1    1    3    2 \n 145  146  147  148  149  150  151  152  153  154  155  156  157  158  159  160 \n   1    2    1    1    1    2    2    3    1    5    1    5    1    1    1    2 \n 161  162  163  164  165  166  167  168  169  170  171  172  173  174  175  176 \n   1    1    1    1    2    1    1    1    1    1    1    2    1    1    1    1 \n 177  178  179  180  181  182  183  184  185  186  187  188  189  190  191  192 \n   1    4    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 193  194  195  196  197  198  199  200  201  202  203  204  205  206  207  208 \n   1    1    1    1    1    2    2    1    1    1    1    2    1    4    1    1 \n 209  210  211  212  213  214  215  216  217  218  219  220  221  222  223  224 \n   2    1    1    1    1    1    1    1    1    1    1    1    2    1    1    1 \n 225  226  227  228  229  230  231  232  233  234  235  236  237  238  239  240 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 241  242  243  244  245  246  247  248  249  250  251  252  253  254  255  256 \n   1    1    1    1    2    1    1    1    1    1    1    1    1    1    1    1 \n 257  258  259  260  261  262  263  264  265  266  267  268  269  270  271  272 \n   1    1    1    1    1    1    1    1    1    1    2    1    1    1    1    3 \n 273  274  275  276  277  278  279  280  281  282  283  284  285  286  287  288 \n   1    1    1    1    1    1    3    1    1    1    1    1    1    1    1    1 \n 289  290  291  292  293  294  295  296  297  298  299  300  301  302  303  304 \n   1    1    1    1    1    1    1    9    1    1    2    1    1    1    1    1 \n 305  306  307  308  309  310  311  312  313  314  315  316  317  318  319  320 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 321  322  323  324  325  326  327  328  329  330  331  332  333  334  335  336 \n   1    1    1    5    1    1    1    1    1    2    1    1    2    2    1    1 \n 337  338  339  340  341  342  343  344  345  346  347  348  349  350  351  352 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    2    2    1 \n 353  354  355  356  357  358  359  360  361  362  363  364  365  366  367  368 \n   1    1    1    1    9    1    1    1    1    1    1    1    1    1    1    1 \n 369  370  371  372  373  374  375  376  377  378  379  380  381  382  383  384 \n   1    3    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 385  386  387  388  389  390  391  392  393  394  395  396  397  398  399  400 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 401  402  403  404  405  406  407  408  409  410  411  412  413  414  415  416 \n   1    1    2    1    1    1    1    1    1    1    2    1    1    1    1    1 \n 417  418  419  420  421  422  423  424  425  426  427  428  429  430  431  432 \n   1    1    1    1    1    1    1    2    1    1    2    1    1    1    1    1 \n 433  434  435  436  437  438  439  440  441  442  443  444  445  446  447  448 \n   1    1    1    1    2    1    1    1    1    1    1    1    1    1    1    1 \n 449  450  451  452  453  454  455  456  457  458  459  460  461  462  463  464 \n   1    1    9    9    1    1    1    1    1    1    1    1    1    1    2    1 \n 465  466  467  468  469  470  471  472  473  474  475  476  477  478  479  480 \n   2    1    1    1    1    1    1    1    1    1    1    1    2    2    1    1 \n 481  482  483  484  485  486  487  488  489  490  491  492  493  494  495  496 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 497  498  499  500  501  502  503  504  505  506  507  508  509  510  511  512 \n   1    1    1    1    1    1    2    1    1    1    1    1    1    1    1    2 \n 513  514  515  516  517  518  519  520  521  522  523  524  525  526  527  528 \n   1    1    1    1    1    1    1    1    1    1    1    2    1    1    3    1 \n 529  530  531  532  533  534  535  536  537  538  539  540  541  542  543  544 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 545  546  547  548  549  550  551  552  553  554  555  556  557  558  559  560 \n   1    1    1    1    1    1    1    1    1    3    1    1    1    1    1    1 \n 561  562  563  564  565  566  567  568  569  570  571  572  573  574  575  576 \n   2    2    2    1    1    1    1    2    1    1    2    1    1    1    2    1 \n 577  578  579  580  581  582  583  584  585  586  587  588  589  590  591  592 \n   1    2    1    1    1    1    1    9    1    4    1    2    1    1    1    1 \n 593  594  595  596  597  598  599  600  601  602  603  604  605  606  607  608 \n   2    1    1    1    1    1    1    1    2    1    2    1    1    1    1    1 \n 609  610  611  612  613  614  615  616  617  618  619  620  621  622  623  624 \n   1    1    1    1    1    1    1    1    1    2    1    2    1    1    1    1 \n 625  626  627  628  629  630  631  632  633  634  635  636  637  638  639  640 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 641  642  643  644  645  646  647  648  649  650  651  652  653  654  655  656 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    4 \n 657  658  659  660  661  662  663  664  665  666  667  668  669  670  671  672 \n   1    1    1    1    1    1    1    3    1    1    1    1    1    1    1    1 \n 673  674  675  676  677  678  679  680  681  682  683  684  685  686  687  688 \n   1    1    1    1    1    4    1    1    1    1    1    4    1    1    1    1 \n 689  690  691  692  693  694  695  696  697  698  699  700  701  702  703  704 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 705  706  707  708  709  710  711  712  713  714  715  716  717  718  719  720 \n   1    1    2    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 721  722  723  724  725  726  727  728  729  730  731  732  733  734  735  736 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 737  738  739  740  741  742  743  744  745  746  747  748  749  750  751  752 \n   1    2    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 753  754  755  756  757  758  759  760  761  762  763  764  765  766  767  768 \n   1    1    1    1    1    2    1    1    1    1    1    1    1    1    1    1 \n 769  770  771  772  773  774  775  776  777  778  779  780  781  782  783  784 \n   1    1    1    1    1    1    1    1    1    4    1    1    1    1    1    1 \n 785  786  787  788  789  790  791  792  793  794  795  796  797  798  799  800 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 801  802  803  804  805  806  807  808  809  810  811  812  813  814  815  816 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 817  818  819  820  821  822  823  824  825  826  827  828  829  830  831  832 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 833  834  835  836  837  838  839  840  841  842  843  844  845  846  847  848 \n   1    1    1    1    1    1    1    2    1    1    1    1    1    1    1    1 \n 849  850  851  852  853  854  855  856  857  858  859  860  861  862  863  864 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 865  866  867  868  869  870  871  872  873  874  875  876  877  878  879  880 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    2 \n 881  882  883  884  885  886  887  888  889  890  891  892  893  894  895  896 \n   3    1    1    1    2    1    1    1    3    1    1    3    1    1    1    1 \n 897  898  899  900  901  902  903  904  905  906  907  908  909  910  911  912 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 913  914  915  916  917  918  919  920  921  922  923  924  925  926  927  928 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 929  930  931  932  933  934  935  936  937  938  939  940  941  942  943  944 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 945  946  947  948  949  950  951  952  953  954  955  956  957  958  959  960 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    2 \n 961  962  963  964  965  966  967  968  969  970  971  972  973  974  975  976 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 977  978  979  980  981  982  983  984  985  986  987  988  989  990  991  992 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 993  994  995  996  997  998  999 1000 1001 1002 1003 1004 1005 1006 1007 1008 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1009 1010 1011 1012 1013 1014 1015 1016 1017 1018 1019 1020 1021 1022 1023 1024 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1025 1026 1027 1028 1029 1030 1031 1032 1033 1034 1035 1036 1037 1038 1039 1040 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1041 1042 1043 1044 1045 1046 1047 1048 1049 1050 1051 1052 1053 1054 1055 1056 \n   1    1    1    1    1    1    1    1    1    2    2    1    1    1    1    1 \n1057 1058 1059 1060 1061 1062 1063 1064 1065 1066 1067 1068 1069 1070 1071 1072 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1073 1074 1075 1076 1077 1078 1079 1080 1081 1082 1083 1084 1085 1086 1087 1088 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1089 1090 1091 1092 1093 1094 1095 1096 1097 1098 1099 1100 1101 1102 1103 1104 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1105 1106 1107 1108 1109 1110 1111 1112 1113 1114 1115 1116 1117 1118 1119 1120 \n   1    1    1    1    1    2    1    1    1    1    1    1    1    1    1    1 \n1121 1122 1123 1124 1125 1126 1127 1128 1129 1130 1131 1132 1133 1134 1135 1136 \n   1    1    1    1    1    1    1    1    2    2    1    1    1    5    1    1 \n1137 1138 1139 1140 1141 1142 1143 1144 1145 1146 1147 1148 1149 1150 1151 1152 \n   1    1    1    1    1    1    1    1    1    2    1    1    1    1    1    1 \n1153 1154 1155 1156 1157 1158 1159 1160 1161 1162 1163 1164 1165 1166 1167 1168 \n   1    1    1    1    1    1    1    1    1    1    2    1    1    1    1    1 \n1169 1170 1171 1172 1173 1174 1175 1176 1177 1178 1179 1180 1181 1182 1183 1184 \n   1    9    1    2    2    1    1    1    2    1    1    1    1    1    1    1 \n1185 1186 1187 1188 1189 1190 1191 1192 1193 1194 1195 1196 1197 1198 1199 1200 \n   1    1    1    1    2    1    1    1    3    1    1    1    1    1    1    1 \n1201 1202 1203 1204 1205 1206 1207 1208 1209 1210 1211 1212 1213 1214 1215 1216 \n   9    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1217 1218 1219 1220 1221 1222 1223 1224 1225 1226 1227 1228 1229 1230 1231 1232 \n   1    1    1    2    1    1    1    1    1    1    1    1    1    1    1    1 \n1233 1234 1235 1236 1237 1238 1239 1240 1241 1242 1243 1244 1245 1246 1247 1248 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1249 1250 1251 1252 1253 1254 1255 1256 1257 1258 1259 1260 1261 1262 1263 1264 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1265 1266 1267 1268 1269 1270 1271 1272 1273 1274 1275 1276 1277 1278 1279 1280 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1281 1282 1283 1284 1285 1286 1287 1288 1289 1290 1291 1292 1293 1294 1295 1296 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    2 \n1297 1298 1299 1300 1301 1302 1303 1304 1305 1306 1307 1308 1309 1310 1311 1312 \n   1    1    1    2    1    2    1    1    1    2    2    2    1    1    1    1 \n1313 1314 1315 1316 1317 1318 1319 1320 1321 1322 1323 1324 1325 1326 1327 1328 \n   1    1    2    1    1    1    1    1    1    1    1    1    2    1    1    1 \n1329 1330 1331 1332 1333 1334 1335 1336 1337 1338 1339 1340 1341 1342 1343 1344 \n   1    1    1    1    3    1    1    1    1    1    1    1    1    1    1    1 \n1345 1346 1347 1348 1349 1350 1351 1352 1353 1354 1355 1356 1357 1358 1359 1360 \n   1    1    1    1    1    1    1    1    4    1    1    1    1    1    2    1 \n1361 1362 1363 1364 1365 1366 1367 1368 1369 1370 1371 1372 1373 1374 1375 1376 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1377 1378 1379 1380 1381 1382 1383 1384 1385 1386 1387 1388 1389 1390 1391 1392 \n   1    1    1    1    1    1    1    1    1    9    1    1    1    1    1    1 \n1393 1394 1395 1396 1397 1398 1399 1400 1401 1402 1403 1404 1405 1406 1407 1408 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1409 1410 1411 1412 1413 1414 1415 1416 1417 1418 1419 1420 1421 1422 1423 1424 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1425 1426 1427 1428 1429 1430 1431 1432 1433 1434 1435 1436 1437 1438 1439 1440 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    2    1 \n1441 1442 1443 1444 1445 1446 1447 1448 1449 1450 1451 1452 1453 1454 1455 1456 \n   1    2    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1457 1458 1459 1460 1461 1462 1463 1464 1465 1466 1467 1468 1469 1470 1471 1472 \n   1    1    1    1    1    1    1    1    1    1    2    1    1    1    1    1 \n1473 1474 1475 1476 1477 1478 1479 1480 1481 1482 1483 1484 1485 1486 1487 1488 \n   1    1    1    1    1    1    2    1    1    1    1    1    1    1    1    1 \n1489 1490 1491 1492 1493 1494 1495 1496 1497 1498 1499 1500 1501 1502 1503 1504 \n   1    1    1    1    1    1    1    1    1    1    5    1    1    1    1    1 \n1505 1506 1507 1508 1509 1510 1511 1512 1513 1514 1515 1516 1517 1518 1519 1520 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1521 1522 1523 1524 1525 1526 1527 1528 1529 1530 1531 1532 1533 1534 1535 1536 \n   1    1    1    1    1    2    1    1    1    1    2    1    1    1    1    3 \n1537 1538 1539 1540 1541 1542 1543 1544 1545 \n   1    1    1    1    1    1    2    1    1 \n\n\n\nsum(multiplicity(childcare_ppp) > 1)\n\n[1] 128\n\n\n\ntmap_mode('view')\n\n\ntm_shape(childcare) +\n  tm_dots(alpha=0.4, size=0.05)\n\n\n\n\n\n\n\ntmap_mode('plot')\n\n\nchildcare_ppp_jit <- rjitter(childcare_ppp, \n                             retry=TRUE, \n                             nsim=1, \n                             drop=TRUE)\n\n\nany(duplicated(childcare_ppp_jit))\n\n[1] FALSE"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex04/Hands-On_Ex04_2.html#creating-owin-object",
    "href": "Hands-On_Ex/Hands-On_Ex04/Hands-On_Ex04_2.html#creating-owin-object",
    "title": "Hands-On Exercise 4: 2nd Order Spatial Point Patterns Analysis Methods",
    "section": "Creating owin object",
    "text": "Creating owin object\n\nsg_owin <- as(sg_sp, \"owin\")\n\n\nplot(sg_owin)\n\n\n\n\n\nsummary(sg_owin)\n\nWindow: polygonal boundary\n60 separate polygons (no holes)\n            vertices        area relative.area\npolygon 1         38 1.56140e+04      2.09e-05\npolygon 2        735 4.69093e+06      6.27e-03\npolygon 3         49 1.66986e+04      2.23e-05\npolygon 4         76 3.12332e+05      4.17e-04\npolygon 5       5141 6.36179e+08      8.50e-01\npolygon 6         42 5.58317e+04      7.46e-05\npolygon 7         67 1.31354e+06      1.75e-03\npolygon 8         15 4.46420e+03      5.96e-06\npolygon 9         14 5.46674e+03      7.30e-06\npolygon 10        37 5.26194e+03      7.03e-06\npolygon 11        53 3.44003e+04      4.59e-05\npolygon 12        74 5.82234e+04      7.78e-05\npolygon 13        69 5.63134e+04      7.52e-05\npolygon 14       143 1.45139e+05      1.94e-04\npolygon 15       165 3.38736e+05      4.52e-04\npolygon 16       130 9.40465e+04      1.26e-04\npolygon 17        19 1.80977e+03      2.42e-06\npolygon 18        16 2.01046e+03      2.69e-06\npolygon 19        93 4.30642e+05      5.75e-04\npolygon 20        90 4.15092e+05      5.54e-04\npolygon 21       721 1.92795e+06      2.57e-03\npolygon 22       330 1.11896e+06      1.49e-03\npolygon 23       115 9.28394e+05      1.24e-03\npolygon 24        37 1.01705e+04      1.36e-05\npolygon 25        25 1.66227e+04      2.22e-05\npolygon 26        10 2.14507e+03      2.86e-06\npolygon 27       190 2.02489e+05      2.70e-04\npolygon 28       175 9.25904e+05      1.24e-03\npolygon 29      1993 9.99217e+06      1.33e-02\npolygon 30        38 2.42492e+04      3.24e-05\npolygon 31        24 6.35239e+03      8.48e-06\npolygon 32        53 6.35791e+05      8.49e-04\npolygon 33        41 1.60161e+04      2.14e-05\npolygon 34        22 2.54368e+03      3.40e-06\npolygon 35        30 1.08382e+04      1.45e-05\npolygon 36       327 2.16921e+06      2.90e-03\npolygon 37       111 6.62927e+05      8.85e-04\npolygon 38        90 1.15991e+05      1.55e-04\npolygon 39        98 6.26829e+04      8.37e-05\npolygon 40       415 3.25384e+06      4.35e-03\npolygon 41       222 1.51142e+06      2.02e-03\npolygon 42       107 6.33039e+05      8.45e-04\npolygon 43         7 2.48299e+03      3.32e-06\npolygon 44        17 3.28303e+04      4.38e-05\npolygon 45        26 8.34758e+03      1.11e-05\npolygon 46       177 4.67446e+05      6.24e-04\npolygon 47        16 3.19460e+03      4.27e-06\npolygon 48        15 4.87296e+03      6.51e-06\npolygon 49        66 1.61841e+04      2.16e-05\npolygon 50       149 5.63430e+06      7.53e-03\npolygon 51       609 2.62570e+07      3.51e-02\npolygon 52         8 7.82256e+03      1.04e-05\npolygon 53       976 2.33447e+07      3.12e-02\npolygon 54        55 8.25379e+04      1.10e-04\npolygon 55       976 2.33447e+07      3.12e-02\npolygon 56        61 3.33449e+05      4.45e-04\npolygon 57         6 1.68410e+04      2.25e-05\npolygon 58         4 9.45963e+03      1.26e-05\npolygon 59        46 6.99702e+05      9.35e-04\npolygon 60        13 7.00873e+04      9.36e-05\nenclosing rectangle: [2663.93, 56047.79] x [16357.98, 50244.03] units\n                     (53380 x 33890 units)\nWindow area = 748741000 square units\nFraction of frame area: 0.414"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex04/Hands-On_Ex04_2.html#combining-point-events-object-and-owin-object",
    "href": "Hands-On_Ex/Hands-On_Ex04/Hands-On_Ex04_2.html#combining-point-events-object-and-owin-object",
    "title": "Hands-On Exercise 4: 2nd Order Spatial Point Patterns Analysis Methods",
    "section": "Combining point events object and owin object",
    "text": "Combining point events object and owin object\n\nchildcareSG_ppp = childcare_ppp[sg_owin]\n\n\nsummary(childcareSG_ppp)\n\nPlanar point pattern:  1545 points\nAverage intensity 2.063463e-06 points per square unit\n\n*Pattern contains duplicated points*\n\nCoordinates are given to 3 decimal places\ni.e. rounded to the nearest multiple of 0.001 units\n\nWindow: polygonal boundary\n60 separate polygons (no holes)\n            vertices        area relative.area\npolygon 1         38 1.56140e+04      2.09e-05\npolygon 2        735 4.69093e+06      6.27e-03\npolygon 3         49 1.66986e+04      2.23e-05\npolygon 4         76 3.12332e+05      4.17e-04\npolygon 5       5141 6.36179e+08      8.50e-01\npolygon 6         42 5.58317e+04      7.46e-05\npolygon 7         67 1.31354e+06      1.75e-03\npolygon 8         15 4.46420e+03      5.96e-06\npolygon 9         14 5.46674e+03      7.30e-06\npolygon 10        37 5.26194e+03      7.03e-06\npolygon 11        53 3.44003e+04      4.59e-05\npolygon 12        74 5.82234e+04      7.78e-05\npolygon 13        69 5.63134e+04      7.52e-05\npolygon 14       143 1.45139e+05      1.94e-04\npolygon 15       165 3.38736e+05      4.52e-04\npolygon 16       130 9.40465e+04      1.26e-04\npolygon 17        19 1.80977e+03      2.42e-06\npolygon 18        16 2.01046e+03      2.69e-06\npolygon 19        93 4.30642e+05      5.75e-04\npolygon 20        90 4.15092e+05      5.54e-04\npolygon 21       721 1.92795e+06      2.57e-03\npolygon 22       330 1.11896e+06      1.49e-03\npolygon 23       115 9.28394e+05      1.24e-03\npolygon 24        37 1.01705e+04      1.36e-05\npolygon 25        25 1.66227e+04      2.22e-05\npolygon 26        10 2.14507e+03      2.86e-06\npolygon 27       190 2.02489e+05      2.70e-04\npolygon 28       175 9.25904e+05      1.24e-03\npolygon 29      1993 9.99217e+06      1.33e-02\npolygon 30        38 2.42492e+04      3.24e-05\npolygon 31        24 6.35239e+03      8.48e-06\npolygon 32        53 6.35791e+05      8.49e-04\npolygon 33        41 1.60161e+04      2.14e-05\npolygon 34        22 2.54368e+03      3.40e-06\npolygon 35        30 1.08382e+04      1.45e-05\npolygon 36       327 2.16921e+06      2.90e-03\npolygon 37       111 6.62927e+05      8.85e-04\npolygon 38        90 1.15991e+05      1.55e-04\npolygon 39        98 6.26829e+04      8.37e-05\npolygon 40       415 3.25384e+06      4.35e-03\npolygon 41       222 1.51142e+06      2.02e-03\npolygon 42       107 6.33039e+05      8.45e-04\npolygon 43         7 2.48299e+03      3.32e-06\npolygon 44        17 3.28303e+04      4.38e-05\npolygon 45        26 8.34758e+03      1.11e-05\npolygon 46       177 4.67446e+05      6.24e-04\npolygon 47        16 3.19460e+03      4.27e-06\npolygon 48        15 4.87296e+03      6.51e-06\npolygon 49        66 1.61841e+04      2.16e-05\npolygon 50       149 5.63430e+06      7.53e-03\npolygon 51       609 2.62570e+07      3.51e-02\npolygon 52         8 7.82256e+03      1.04e-05\npolygon 53       976 2.33447e+07      3.12e-02\npolygon 54        55 8.25379e+04      1.10e-04\npolygon 55       976 2.33447e+07      3.12e-02\npolygon 56        61 3.33449e+05      4.45e-04\npolygon 57         6 1.68410e+04      2.25e-05\npolygon 58         4 9.45963e+03      1.26e-05\npolygon 59        46 6.99702e+05      9.35e-04\npolygon 60        13 7.00873e+04      9.36e-05\nenclosing rectangle: [2663.93, 56047.79] x [16357.98, 50244.03] units\n                     (53380 x 33890 units)\nWindow area = 748741000 square units\nFraction of frame area: 0.414\n\n\n\nplot(childcareSG_ppp)\n\n\n\n\n\nExtracting study area\n\npg = mpsz[mpsz@data$PLN_AREA_N == \"PUNGGOL\",]\ntm = mpsz[mpsz@data$PLN_AREA_N == \"TAMPINES\",]\nck = mpsz[mpsz@data$PLN_AREA_N == \"CHOA CHU KANG\",]\njw = mpsz[mpsz@data$PLN_AREA_N == \"JURONG WEST\",]\n\n\npar(mfrow=c(2,2))\nplot(pg, main = \"Ponggol\")\nplot(tm, main = \"Tampines\")\nplot(ck, main = \"Choa Chu Kang\")\nplot(jw, main = \"Jurong West\")\n\n\n\n\n\n\nConverting the spatial point data frame into generic sp format\n\npg_sp = as(pg, \"SpatialPolygons\")\ntm_sp = as(tm, \"SpatialPolygons\")\nck_sp = as(ck, \"SpatialPolygons\")\njw_sp = as(jw, \"SpatialPolygons\")\n\n\n\nCreating owin object\n\npg_owin = as(pg_sp, \"owin\")\ntm_owin = as(tm_sp, \"owin\")\nck_owin = as(ck_sp, \"owin\")\njw_owin = as(jw_sp, \"owin\")\n\n\n\nCombining childcare points and the study area\n\nchildcare_pg_ppp = childcare_ppp_jit[pg_owin]\nchildcare_tm_ppp = childcare_ppp_jit[tm_owin]\nchildcare_ck_ppp = childcare_ppp_jit[ck_owin]\nchildcare_jw_ppp = childcare_ppp_jit[jw_owin]\n\n\nchildcare_pg_ppp.km = rescale(childcare_pg_ppp, 1000, \"km\")\nchildcare_tm_ppp.km = rescale(childcare_tm_ppp, 1000, \"km\")\nchildcare_ck_ppp.km = rescale(childcare_ck_ppp, 1000, \"km\")\nchildcare_jw_ppp.km = rescale(childcare_jw_ppp, 1000, \"km\")\n\n\npar(mfrow=c(2,2))\nplot(childcare_pg_ppp.km, main=\"Punggol\")\nplot(childcare_tm_ppp.km, main=\"Tampines\")\nplot(childcare_ck_ppp.km, main=\"Choa Chu Kang\")\nplot(childcare_jw_ppp.km, main=\"Jurong West\")"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex04/Hands-On_Ex04_2.html#analysing-spatial-point-process-using-g-function",
    "href": "Hands-On_Ex/Hands-On_Ex04/Hands-On_Ex04_2.html#analysing-spatial-point-process-using-g-function",
    "title": "Hands-On Exercise 4: 2nd Order Spatial Point Patterns Analysis Methods",
    "section": "Analysing Spatial Point Process Using G-Function",
    "text": "Analysing Spatial Point Process Using G-Function\n\nChoa Chu Kang planning area\n\nComputing G-function estimation\n\nG_CK = Gest(childcare_ck_ppp, correction = \"border\")\nplot(G_CK, xlim=c(0,500))\n\n\n\n\n\n\nPerforming Complete Spatial Randomness Test\n\nG_CK.csr <- envelope(childcare_ck_ppp, Gest, nsim = 999)\n\nGenerating 999 simulations of CSR  ...\n1, 2, 3, ......10.........20.........30.........40.........50.........60........\n.70.........80.........90.........100.........110.........120.........130......\n...140.........150.........160.........170.........180.........190.........200....\n.....210.........220.........230.........240.........250.........260.........270..\n.......280.........290.........300.........310.........320.........330.........340\n.........350.........360.........370.........380.........390.........400........\n.410.........420.........430.........440.........450.........460.........470......\n...480.........490.........500.........510.........520.........530.........540....\n.....550.........560.........570.........580.........590.........600.........610..\n.......620.........630.........640.........650.........660.........670.........680\n.........690.........700.........710.........720.........730.........740........\n.750.........760.........770.........780.........790.........800.........810......\n...820.........830.........840.........850.........860.........870.........880....\n.....890.........900.........910.........920.........930.........940.........950..\n.......960.........970.........980.........990........ 999.\n\nDone.\n\n\n\nplot(G_CK.csr)\n\n\n\n\n\n\n\nTampines Planning Area\n\nComputing G-function estimation\n\nG_tm = Gest(childcare_tm_ppp, correction = \"best\")\nplot(G_tm)\n\n\n\n\n\n\nPerforming Complete Spatial Randomness Test\n\nG_tm.csr <- envelope(childcare_tm_ppp, Gest, correction = \"all\", nsim = 999)\n\nGenerating 999 simulations of CSR  ...\n1, 2, 3, ......10.........20.........30.........40.........50.........60........\n.70.........80.........90.........100.........110.........120.........130......\n...140.........150.........160.........170.........180.........190.........200....\n.....210.........220.........230.........240.........250.........260.........270..\n.......280.........290.........300.........310.........320.........330.........340\n.........350.........360.........370.........380.........390.........400........\n.410.........420.........430.........440.........450.........460.........470......\n...480.........490.........500.........510.........520.........530.........540....\n.....550.........560.........570.........580.........590.........600.........610..\n.......620.........630.........640.........650.........660.........670.........680\n.........690.........700.........710.........720.........730.........740........\n.750.........760.........770.........780.........790.........800.........810......\n...820.........830.........840.........850.........860.........870.........880....\n.....890.........900.........910.........920.........930.........940.........950..\n.......960.........970.........980.........990........ 999.\n\nDone.\n\n\n\nplot(G_tm.csr)"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex04/Hands-On_Ex04_2.html#analysing-spatial-point-process-using-f-function",
    "href": "Hands-On_Ex/Hands-On_Ex04/Hands-On_Ex04_2.html#analysing-spatial-point-process-using-f-function",
    "title": "Hands-On Exercise 4: 2nd Order Spatial Point Patterns Analysis Methods",
    "section": "Analysing Spatial Point Process Using F-Function",
    "text": "Analysing Spatial Point Process Using F-Function\n\nChoa Chu Kang planning area\n\nComputing F-function estimation\n\nF_CK = Fest(childcare_ck_ppp)\nplot(F_CK)\n\n\n\n\n\n\nPerforming Complete Spatial Randomness Test\n\nF_CK.csr <- envelope(childcare_ck_ppp, Fest, nsim = 999)\n\nGenerating 999 simulations of CSR  ...\n1, 2, 3, ......10.........20.........30.........40.........50.........60........\n.70.........80.........90.........100.........110.........120.........130......\n...140.........150.........160.........170.........180.........190.........200....\n.....210.........220.........230.........240.........250.........260.........270..\n.......280.........290.........300.........310.........320.........330.........340\n.........350.........360.........370.........380.........390.........400........\n.410.........420.........430.........440.........450.........460.........470......\n...480.........490.........500.........510.........520.........530.........540....\n.....550.........560.........570.........580.........590.........600.........610..\n.......620.........630.........640.........650.........660.........670.........680\n.........690.........700.........710.........720.........730.........740........\n.750.........760.........770.........780.........790.........800.........810......\n...820.........830.........840.........850.........860.........870.........880....\n.....890.........900.........910.........920.........930.........940.........950..\n.......960.........970.........980.........990........ 999.\n\nDone.\n\n\n\nplot(F_CK.csr)\n\n\n\n\n\n\n\nTampines planning area\n\nComputing F-function estimation\n\nF_tm = Fest(childcare_tm_ppp, correction = \"best\")\nplot(F_tm)\n\n\n\n\n\n\nPerforming Complete Spatial Randomness Test\n\nF_tm.csr <- envelope(childcare_tm_ppp, Fest, correction = \"all\", nsim = 999)\n\nGenerating 999 simulations of CSR  ...\n1, 2, 3, ......10.........20.........30.........40.........50.........60........\n.70.........80.........90.........100.........110.........120.........130......\n...140.........150.........160.........170.........180.........190.........200....\n.....210.........220.........230.........240.........250.........260.........270..\n.......280.........290.........300.........310.........320.........330.........340\n.........350.........360.........370.........380.........390.........400........\n.410.........420.........430.........440.........450.........460.........470......\n...480.........490.........500.........510.........520.........530.........540....\n.....550.........560.........570.........580.........590.........600.........610..\n.......620.........630.........640.........650.........660.........670.........680\n.........690.........700.........710.........720.........730.........740........\n.750.........760.........770.........780.........790.........800.........810......\n...820.........830.........840.........850.........860.........870.........880....\n.....890.........900.........910.........920.........930.........940.........950..\n.......960.........970.........980.........990........ 999.\n\nDone.\n\n\n\nplot(F_tm.csr)"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex04/Hands-On_Ex04_2.html#analysing-spatial-point-process-using-k-function",
    "href": "Hands-On_Ex/Hands-On_Ex04/Hands-On_Ex04_2.html#analysing-spatial-point-process-using-k-function",
    "title": "Hands-On Exercise 4: 2nd Order Spatial Point Patterns Analysis Methods",
    "section": "Analysing Spatial Point Process Using K-Function",
    "text": "Analysing Spatial Point Process Using K-Function\n\nChoa Chu Kang planning area\n\nComputing K-function estimate\n\nK_ck = Kest(childcare_ck_ppp, correction = \"Ripley\")\nplot(K_ck, . -r ~ r, ylab= \"K(d)-r\", xlab = \"d(m)\")\n\n\n\n\n\n\nPerforming Complete Spatial Randomness Test\n\nK_ck.csr <- envelope(childcare_ck_ppp, Kest, nsim = 99, rank = 1, glocal=TRUE)\n\nGenerating 99 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40,\n41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,\n81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98,  99.\n\nDone.\n\n\n\nplot(K_ck.csr, . - r ~ r, xlab=\"d\", ylab=\"K(d)-r\")\n\n\n\n\n\n\n\nTampines planning area\n\nComputing K-function estimation\n\nK_tm = Kest(childcare_tm_ppp, correction = \"Ripley\")\nplot(K_tm, . -r ~ r, \n     ylab= \"K(d)-r\", xlab = \"d(m)\", \n     xlim=c(0,1000))\n\n\n\n\n\n\nPerforming Complete Spatial Randomness Test\n\nK_tm.csr <- envelope(childcare_tm_ppp, Kest, nsim = 99, rank = 1, glocal=TRUE)\n\nGenerating 99 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40,\n41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,\n81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98,  99.\n\nDone.\n\n\n\nplot(K_tm.csr, . - r ~ r, \n     xlab=\"d\", ylab=\"K(d)-r\", xlim=c(0,500))"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex04/Hands-On_Ex04_2.html#analysing-spatial-point-process-using-l-function",
    "href": "Hands-On_Ex/Hands-On_Ex04/Hands-On_Ex04_2.html#analysing-spatial-point-process-using-l-function",
    "title": "Hands-On Exercise 4: 2nd Order Spatial Point Patterns Analysis Methods",
    "section": "Analysing Spatial Point Process Using L-Function",
    "text": "Analysing Spatial Point Process Using L-Function\n\nChoa Chu Kang planning area\n\nComputing L-function estimation\n\nL_ck = Lest(childcare_ck_ppp, correction = \"Ripley\")\nplot(L_ck, . -r ~ r, \n     ylab= \"L(d)-r\", xlab = \"d(m)\")\n\n\n\n\n\n\nPerforming Complete Spatial Randomness Test\n\nL_ck.csr <- envelope(childcare_ck_ppp, Lest, nsim = 99, rank = 1, glocal=TRUE)\n\nGenerating 99 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40,\n41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,\n81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98,  99.\n\nDone.\n\n\n\nplot(L_ck.csr, . - r ~ r, xlab=\"d\", ylab=\"L(d)-r\")\n\n\n\n\n\n\n\nTampines planning area\n\nComputing L-function estimate\n\nL_tm = Lest(childcare_tm_ppp, correction = \"Ripley\")\nplot(L_tm, . -r ~ r, \n     ylab= \"L(d)-r\", xlab = \"d(m)\", \n     xlim=c(0,1000))\n\n\n\n\n\n\nPerforming Complete Spatial Randomness Test\n\nL_tm.csr <- envelope(childcare_tm_ppp, Lest, nsim = 99, rank = 1, glocal=TRUE)\n\nGenerating 99 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40,\n41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,\n81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98,  99.\n\nDone.\n\n\n\nplot(L_tm.csr, . - r ~ r, \n     xlab=\"d\", ylab=\"L(d)-r\", xlim=c(0,500))"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex06/Hands-On_Ex06.html",
    "href": "Hands-On_Ex/Hands-On_Ex06/Hands-On_Ex06.html",
    "title": "Hands-On Exercise 6: Advanced",
    "section": "",
    "text": "pacman::p_load(sf, spdep, tmap, tidyverse, knitr)"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex06/Hands-On_Ex06.html#import-shapefile-into-r-environment",
    "href": "Hands-On_Ex/Hands-On_Ex06/Hands-On_Ex06.html#import-shapefile-into-r-environment",
    "title": "Hands-On Exercise 6: Advanced",
    "section": "Import shapefile into r environment",
    "text": "Import shapefile into r environment\n\nhunan <- st_read(dsn = \"data/geospatial\", layer = \"Hunan\")\n\nReading layer `Hunan' from data source \n  `C:\\Users\\la935\\Desktop\\IS415 - GAA\\IS415 - GAA (New)\\Hands-On_Ex\\Hands-On_Ex06\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 88 features and 7 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 108.7831 ymin: 24.6342 xmax: 114.2544 ymax: 30.12812\nGeodetic CRS:  WGS 84"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex06/Hands-On_Ex06.html#import-csv-file-into-r-environment",
    "href": "Hands-On_Ex/Hands-On_Ex06/Hands-On_Ex06.html#import-csv-file-into-r-environment",
    "title": "Hands-On Exercise 6: Advanced",
    "section": "Import csv file into r environment",
    "text": "Import csv file into r environment\n\nhunan2012 <- read_csv(\"data/aspatial/Hunan_2012.csv\")"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex06/Hands-On_Ex06.html#performing-relational-join",
    "href": "Hands-On_Ex/Hands-On_Ex06/Hands-On_Ex06.html#performing-relational-join",
    "title": "Hands-On Exercise 6: Advanced",
    "section": "Performing Relational Join",
    "text": "Performing Relational Join\n\nhunan <- left_join(hunan, hunan2012) %>%\n  select(1:4, 7, 15)"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex06/Hands-On_Ex06.html#computing-queen-contiguity-based-neighbours",
    "href": "Hands-On_Ex/Hands-On_Ex06/Hands-On_Ex06.html#computing-queen-contiguity-based-neighbours",
    "title": "Hands-On Exercise 6: Advanced",
    "section": "Computing (QUEEN) contiguity based neighbours",
    "text": "Computing (QUEEN) contiguity based neighbours\n\nwm_q <- poly2nb(hunan, queen=TRUE)\nsummary(wm_q)\n\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 448 \nPercentage nonzero weights: 5.785124 \nAverage number of links: 5.090909 \nLink number distribution:\n\n 1  2  3  4  5  6  7  8  9 11 \n 2  2 12 16 24 14 11  4  2  1 \n2 least connected regions:\n30 65 with 1 link\n1 most connected region:\n85 with 11 links\n\n\n\nwm_q[[1]]\n\n[1]  2  3  4 57 85\n\n\n\nhunan$County[1]\n\n[1] \"Anxiang\"\n\n\n\nhunan$NAME_3[c(2, 3, 4, 57, 85)]\n\n[1] \"Hanshou\" \"Jinshi\"  \"Li\"      \"Nan\"     \"Taoyuan\"\n\n\n\nnb1 <- wm_q[[1]]\nnb1 <- hunan$GDPPC[nb1]\nnb1\n\n[1] 20981 34592 24473 21311 22879\n\n\n\nstr(wm_q)\n\nList of 88\n $ : int [1:5] 2 3 4 57 85\n $ : int [1:5] 1 57 58 78 85\n $ : int [1:4] 1 4 5 85\n $ : int [1:4] 1 3 5 6\n $ : int [1:4] 3 4 6 85\n $ : int [1:5] 4 5 69 75 85\n $ : int [1:4] 67 71 74 84\n $ : int [1:7] 9 46 47 56 78 80 86\n $ : int [1:6] 8 66 68 78 84 86\n $ : int [1:8] 16 17 19 20 22 70 72 73\n $ : int [1:3] 14 17 72\n $ : int [1:5] 13 60 61 63 83\n $ : int [1:4] 12 15 60 83\n $ : int [1:3] 11 15 17\n $ : int [1:4] 13 14 17 83\n $ : int [1:5] 10 17 22 72 83\n $ : int [1:7] 10 11 14 15 16 72 83\n $ : int [1:5] 20 22 23 77 83\n $ : int [1:6] 10 20 21 73 74 86\n $ : int [1:7] 10 18 19 21 22 23 82\n $ : int [1:5] 19 20 35 82 86\n $ : int [1:5] 10 16 18 20 83\n $ : int [1:7] 18 20 38 41 77 79 82\n $ : int [1:5] 25 28 31 32 54\n $ : int [1:5] 24 28 31 33 81\n $ : int [1:4] 27 33 42 81\n $ : int [1:3] 26 29 42\n $ : int [1:5] 24 25 33 49 54\n $ : int [1:3] 27 37 42\n $ : int 33\n $ : int [1:8] 24 25 32 36 39 40 56 81\n $ : int [1:8] 24 31 50 54 55 56 75 85\n $ : int [1:5] 25 26 28 30 81\n $ : int [1:3] 36 45 80\n $ : int [1:6] 21 41 47 80 82 86\n $ : int [1:6] 31 34 40 45 56 80\n $ : int [1:4] 29 42 43 44\n $ : int [1:4] 23 44 77 79\n $ : int [1:5] 31 40 42 43 81\n $ : int [1:6] 31 36 39 43 45 79\n $ : int [1:6] 23 35 45 79 80 82\n $ : int [1:7] 26 27 29 37 39 43 81\n $ : int [1:6] 37 39 40 42 44 79\n $ : int [1:4] 37 38 43 79\n $ : int [1:6] 34 36 40 41 79 80\n $ : int [1:3] 8 47 86\n $ : int [1:5] 8 35 46 80 86\n $ : int [1:5] 50 51 52 53 55\n $ : int [1:4] 28 51 52 54\n $ : int [1:5] 32 48 52 54 55\n $ : int [1:3] 48 49 52\n $ : int [1:5] 48 49 50 51 54\n $ : int [1:3] 48 55 75\n $ : int [1:6] 24 28 32 49 50 52\n $ : int [1:5] 32 48 50 53 75\n $ : int [1:7] 8 31 32 36 78 80 85\n $ : int [1:6] 1 2 58 64 76 85\n $ : int [1:5] 2 57 68 76 78\n $ : int [1:4] 60 61 87 88\n $ : int [1:4] 12 13 59 61\n $ : int [1:7] 12 59 60 62 63 77 87\n $ : int [1:3] 61 77 87\n $ : int [1:4] 12 61 77 83\n $ : int [1:2] 57 76\n $ : int 76\n $ : int [1:5] 9 67 68 76 84\n $ : int [1:4] 7 66 76 84\n $ : int [1:5] 9 58 66 76 78\n $ : int [1:3] 6 75 85\n $ : int [1:3] 10 72 73\n $ : int [1:3] 7 73 74\n $ : int [1:5] 10 11 16 17 70\n $ : int [1:5] 10 19 70 71 74\n $ : int [1:6] 7 19 71 73 84 86\n $ : int [1:6] 6 32 53 55 69 85\n $ : int [1:7] 57 58 64 65 66 67 68\n $ : int [1:7] 18 23 38 61 62 63 83\n $ : int [1:7] 2 8 9 56 58 68 85\n $ : int [1:7] 23 38 40 41 43 44 45\n $ : int [1:8] 8 34 35 36 41 45 47 56\n $ : int [1:6] 25 26 31 33 39 42\n $ : int [1:5] 20 21 23 35 41\n $ : int [1:9] 12 13 15 16 17 18 22 63 77\n $ : int [1:6] 7 9 66 67 74 86\n $ : int [1:11] 1 2 3 5 6 32 56 57 69 75 ...\n $ : int [1:9] 8 9 19 21 35 46 47 74 84\n $ : int [1:4] 59 61 62 88\n $ : int [1:2] 59 87\n - attr(*, \"class\")= chr \"nb\"\n - attr(*, \"region.id\")= chr [1:88] \"1\" \"2\" \"3\" \"4\" ...\n - attr(*, \"call\")= language poly2nb(pl = hunan, queen = TRUE)\n - attr(*, \"type\")= chr \"queen\"\n - attr(*, \"sym\")= logi TRUE"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex06/Hands-On_Ex06.html#creating-rook-contiguity-based-neighbours",
    "href": "Hands-On_Ex/Hands-On_Ex06/Hands-On_Ex06.html#creating-rook-contiguity-based-neighbours",
    "title": "Hands-On Exercise 6: Advanced",
    "section": "Creating (ROOK) contiguity based neighbours",
    "text": "Creating (ROOK) contiguity based neighbours\n\nwm_r <- poly2nb(hunan, queen=FALSE)\nsummary(wm_r)\n\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 440 \nPercentage nonzero weights: 5.681818 \nAverage number of links: 5 \nLink number distribution:\n\n 1  2  3  4  5  6  7  8  9 10 \n 2  2 12 20 21 14 11  3  2  1 \n2 least connected regions:\n30 65 with 1 link\n1 most connected region:\n85 with 10 links"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex06/Hands-On_Ex06.html#visualising-contiguity-weights",
    "href": "Hands-On_Ex/Hands-On_Ex06/Hands-On_Ex06.html#visualising-contiguity-weights",
    "title": "Hands-On Exercise 6: Advanced",
    "section": "Visualising contiguity weights",
    "text": "Visualising contiguity weights\n\nlongitude <- map_dbl(hunan$geometry, ~st_centroid(.x)[[1]])\n\n\nlatitude <- map_dbl(hunan$geometry, ~st_centroid(.x)[[2]])\n\n\ncoords <- cbind(longitude, latitude)\n\n\nhead(coords)\n\n     longitude latitude\n[1,]  112.1531 29.44362\n[2,]  112.0372 28.86489\n[3,]  111.8917 29.47107\n[4,]  111.7031 29.74499\n[5,]  111.6138 29.49258\n[6,]  111.0341 29.79863\n\n\n\nPlotting Queen contiguity based neighbours map\n\nplot(hunan$geometry, border=\"lightgrey\")\nplot(wm_q, coords, pch = 19, cex = 0.6, add = TRUE, col= \"red\")\n\n\n\n\n\n\nPlotting Rook contiguity based neighbours map\n\nplot(hunan$geometry, border=\"lightgrey\")\nplot(wm_r, coords, pch = 19, cex = 0.6, add = TRUE, col = \"red\")\n\n\n\n\n\n\nPlotting both Queen and Rook contiguity based neighbours maps\n\npar(mfrow=c(1,2))\nplot(hunan$geometry, border=\"lightgrey\")\nplot(wm_q, coords, pch = 19, cex = 0.6, add = TRUE, col= \"red\", main=\"Queen Contiguity\")\nplot(hunan$geometry, border=\"lightgrey\")\nplot(wm_r, coords, pch = 19, cex = 0.6, add = TRUE, col = \"red\", main=\"Rook Contiguity\")"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex06/Hands-On_Ex06.html#determine-the-cut-off-distance",
    "href": "Hands-On_Ex/Hands-On_Ex06/Hands-On_Ex06.html#determine-the-cut-off-distance",
    "title": "Hands-On Exercise 6: Advanced",
    "section": "Determine the cut-off distance",
    "text": "Determine the cut-off distance\n\n#coords <- coordinates(hunan)\nk1 <- knn2nb(knearneigh(coords))\nk1dists <- unlist(nbdists(k1, coords, longlat = TRUE))\nsummary(k1dists)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  24.79   32.57   38.01   39.07   44.52   61.79"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex06/Hands-On_Ex06.html#computing-fixed-distance-weight-matrix",
    "href": "Hands-On_Ex/Hands-On_Ex06/Hands-On_Ex06.html#computing-fixed-distance-weight-matrix",
    "title": "Hands-On Exercise 6: Advanced",
    "section": "Computing fixed distance weight matrix",
    "text": "Computing fixed distance weight matrix\n\nwm_d62 <- dnearneigh(coords, 0, 62, longlat = TRUE)\nwm_d62\n\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 324 \nPercentage nonzero weights: 4.183884 \nAverage number of links: 3.681818 \n\n\n\nstr(wm_d62)\n\nList of 88\n $ : int [1:5] 3 4 5 57 64\n $ : int [1:4] 57 58 78 85\n $ : int [1:4] 1 4 5 57\n $ : int [1:3] 1 3 5\n $ : int [1:4] 1 3 4 85\n $ : int 69\n $ : int [1:2] 67 84\n $ : int [1:4] 9 46 47 78\n $ : int [1:4] 8 46 68 84\n $ : int [1:4] 16 22 70 72\n $ : int [1:3] 14 17 72\n $ : int [1:5] 13 60 61 63 83\n $ : int [1:4] 12 15 60 83\n $ : int [1:2] 11 17\n $ : int 13\n $ : int [1:4] 10 17 22 83\n $ : int [1:3] 11 14 16\n $ : int [1:3] 20 22 63\n $ : int [1:5] 20 21 73 74 82\n $ : int [1:5] 18 19 21 22 82\n $ : int [1:6] 19 20 35 74 82 86\n $ : int [1:4] 10 16 18 20\n $ : int [1:3] 41 77 82\n $ : int [1:4] 25 28 31 54\n $ : int [1:4] 24 28 33 81\n $ : int [1:4] 27 33 42 81\n $ : int [1:2] 26 29\n $ : int [1:6] 24 25 33 49 52 54\n $ : int [1:2] 27 37\n $ : int 33\n $ : int [1:2] 24 36\n $ : int 50\n $ : int [1:5] 25 26 28 30 81\n $ : int [1:3] 36 45 80\n $ : int [1:6] 21 41 46 47 80 82\n $ : int [1:5] 31 34 45 56 80\n $ : int [1:2] 29 42\n $ : int [1:3] 44 77 79\n $ : int [1:4] 40 42 43 81\n $ : int [1:3] 39 45 79\n $ : int [1:5] 23 35 45 79 82\n $ : int [1:5] 26 37 39 43 81\n $ : int [1:3] 39 42 44\n $ : int [1:2] 38 43\n $ : int [1:6] 34 36 40 41 79 80\n $ : int [1:5] 8 9 35 47 86\n $ : int [1:5] 8 35 46 80 86\n $ : int [1:5] 50 51 52 53 55\n $ : int [1:4] 28 51 52 54\n $ : int [1:6] 32 48 51 52 54 55\n $ : int [1:4] 48 49 50 52\n $ : int [1:6] 28 48 49 50 51 54\n $ : int [1:2] 48 55\n $ : int [1:5] 24 28 49 50 52\n $ : int [1:4] 48 50 53 75\n $ : int 36\n $ : int [1:5] 1 2 3 58 64\n $ : int [1:5] 2 57 64 66 68\n $ : int [1:3] 60 87 88\n $ : int [1:4] 12 13 59 61\n $ : int [1:5] 12 60 62 63 87\n $ : int [1:4] 61 63 77 87\n $ : int [1:5] 12 18 61 62 83\n $ : int [1:4] 1 57 58 76\n $ : int 76\n $ : int [1:5] 58 67 68 76 84\n $ : int [1:2] 7 66\n $ : int [1:4] 9 58 66 84\n $ : int [1:2] 6 75\n $ : int [1:3] 10 72 73\n $ : int [1:2] 73 74\n $ : int [1:3] 10 11 70\n $ : int [1:4] 19 70 71 74\n $ : int [1:5] 19 21 71 73 86\n $ : int [1:2] 55 69\n $ : int [1:3] 64 65 66\n $ : int [1:3] 23 38 62\n $ : int [1:2] 2 8\n $ : int [1:4] 38 40 41 45\n $ : int [1:5] 34 35 36 45 47\n $ : int [1:5] 25 26 33 39 42\n $ : int [1:6] 19 20 21 23 35 41\n $ : int [1:4] 12 13 16 63\n $ : int [1:4] 7 9 66 68\n $ : int [1:2] 2 5\n $ : int [1:4] 21 46 47 74\n $ : int [1:4] 59 61 62 88\n $ : int [1:2] 59 87\n - attr(*, \"class\")= chr \"nb\"\n - attr(*, \"region.id\")= chr [1:88] \"1\" \"2\" \"3\" \"4\" ...\n - attr(*, \"call\")= language dnearneigh(x = coords, d1 = 0, d2 = 62, longlat = TRUE)\n - attr(*, \"dnn\")= num [1:2] 0 62\n - attr(*, \"bounds\")= chr [1:2] \"GE\" \"LE\"\n - attr(*, \"nbtype\")= chr \"distance\"\n - attr(*, \"sym\")= logi TRUE\n\n\n\ntable(hunan$County, card(wm_d62))\n\n               \n                1 2 3 4 5 6\n  Anhua         1 0 0 0 0 0\n  Anren         0 0 0 1 0 0\n  Anxiang       0 0 0 0 1 0\n  Baojing       0 0 0 0 1 0\n  Chaling       0 0 1 0 0 0\n  Changning     0 0 1 0 0 0\n  Changsha      0 0 0 1 0 0\n  Chengbu       0 1 0 0 0 0\n  Chenxi        0 0 0 1 0 0\n  Cili          0 1 0 0 0 0\n  Dao           0 0 0 1 0 0\n  Dongan        0 0 1 0 0 0\n  Dongkou       0 0 0 1 0 0\n  Fenghuang     0 0 0 1 0 0\n  Guidong       0 0 1 0 0 0\n  Guiyang       0 0 0 1 0 0\n  Guzhang       0 0 0 0 0 1\n  Hanshou       0 0 0 1 0 0\n  Hengdong      0 0 0 0 1 0\n  Hengnan       0 0 0 0 1 0\n  Hengshan      0 0 0 0 0 1\n  Hengyang      0 0 0 0 0 1\n  Hongjiang     0 0 0 0 1 0\n  Huarong       0 0 0 1 0 0\n  Huayuan       0 0 0 1 0 0\n  Huitong       0 0 0 1 0 0\n  Jiahe         0 0 0 0 1 0\n  Jianghua      0 0 1 0 0 0\n  Jiangyong     0 1 0 0 0 0\n  Jingzhou      0 1 0 0 0 0\n  Jinshi        0 0 0 1 0 0\n  Jishou        0 0 0 0 0 1\n  Lanshan       0 0 0 1 0 0\n  Leiyang       0 0 0 1 0 0\n  Lengshuijiang 0 0 1 0 0 0\n  Li            0 0 1 0 0 0\n  Lianyuan      0 0 0 0 1 0\n  Liling        0 1 0 0 0 0\n  Linli         0 0 0 1 0 0\n  Linwu         0 0 0 1 0 0\n  Linxiang      1 0 0 0 0 0\n  Liuyang       0 1 0 0 0 0\n  Longhui       0 0 1 0 0 0\n  Longshan      0 1 0 0 0 0\n  Luxi          0 0 0 0 1 0\n  Mayang        0 0 0 0 0 1\n  Miluo         0 0 0 0 1 0\n  Nan           0 0 0 0 1 0\n  Ningxiang     0 0 0 1 0 0\n  Ningyuan      0 0 0 0 1 0\n  Pingjiang     0 1 0 0 0 0\n  Qidong        0 0 1 0 0 0\n  Qiyang        0 0 1 0 0 0\n  Rucheng       0 1 0 0 0 0\n  Sangzhi       0 1 0 0 0 0\n  Shaodong      0 0 0 0 1 0\n  Shaoshan      0 0 0 0 1 0\n  Shaoyang      0 0 0 1 0 0\n  Shimen        1 0 0 0 0 0\n  Shuangfeng    0 0 0 0 0 1\n  Shuangpai     0 0 0 1 0 0\n  Suining       0 0 0 0 1 0\n  Taojiang      0 1 0 0 0 0\n  Taoyuan       0 1 0 0 0 0\n  Tongdao       0 1 0 0 0 0\n  Wangcheng     0 0 0 1 0 0\n  Wugang        0 0 1 0 0 0\n  Xiangtan      0 0 0 1 0 0\n  Xiangxiang    0 0 0 0 1 0\n  Xiangyin      0 0 0 1 0 0\n  Xinhua        0 0 0 0 1 0\n  Xinhuang      1 0 0 0 0 0\n  Xinning       0 1 0 0 0 0\n  Xinshao       0 0 0 0 0 1\n  Xintian       0 0 0 0 1 0\n  Xupu          0 1 0 0 0 0\n  Yanling       0 0 1 0 0 0\n  Yizhang       1 0 0 0 0 0\n  Yongshun      0 0 0 1 0 0\n  Yongxing      0 0 0 1 0 0\n  You           0 0 0 1 0 0\n  Yuanjiang     0 0 0 0 1 0\n  Yuanling      1 0 0 0 0 0\n  Yueyang       0 0 1 0 0 0\n  Zhijiang      0 0 0 0 1 0\n  Zhongfang     0 0 0 1 0 0\n  Zhuzhou       0 0 0 0 1 0\n  Zixing        0 0 1 0 0 0\n\n\n\nn_comp <- n.comp.nb(wm_d62)\nn_comp$nc\n\n[1] 1\n\n\n\ntable(n_comp$comp.id)\n\n\n 1 \n88 \n\n\n\nPlotting fixed distance weight matrix\n\nplot(hunan$geometry, border=\"lightgrey\")\nplot(wm_d62, coords, add=TRUE)\nplot(k1, coords, add=TRUE, col=\"red\", length=0.08)\n\n\n\n\n\npar(mfrow=c(1,2))\nplot(hunan$geometry, border=\"lightgrey\")\nplot(k1, coords, add=TRUE, col=\"red\", length=0.08, main=\"1st nearest neighbours\")\nplot(hunan$geometry, border=\"lightgrey\")\nplot(wm_d62, coords, add=TRUE, pch = 19, cex = 0.6, main=\"Distance link\")"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex06/Hands-On_Ex06.html#computing-adaptive-distance-weight-matrix",
    "href": "Hands-On_Ex/Hands-On_Ex06/Hands-On_Ex06.html#computing-adaptive-distance-weight-matrix",
    "title": "Hands-On Exercise 6: Advanced",
    "section": "Computing adaptive distance weight matrix",
    "text": "Computing adaptive distance weight matrix\n\nknn6 <- knn2nb(knearneigh(coords, k=6))\nknn6\n\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 528 \nPercentage nonzero weights: 6.818182 \nAverage number of links: 6 \nNon-symmetric neighbours list\n\n\n\nstr(knn6)\n\nList of 88\n $ : int [1:6] 2 3 4 5 57 64\n $ : int [1:6] 1 3 57 58 78 85\n $ : int [1:6] 1 2 4 5 57 85\n $ : int [1:6] 1 3 5 6 69 85\n $ : int [1:6] 1 3 4 6 69 85\n $ : int [1:6] 3 4 5 69 75 85\n $ : int [1:6] 9 66 67 71 74 84\n $ : int [1:6] 9 46 47 78 80 86\n $ : int [1:6] 8 46 66 68 84 86\n $ : int [1:6] 16 19 22 70 72 73\n $ : int [1:6] 10 14 16 17 70 72\n $ : int [1:6] 13 15 60 61 63 83\n $ : int [1:6] 12 15 60 61 63 83\n $ : int [1:6] 11 15 16 17 72 83\n $ : int [1:6] 12 13 14 17 60 83\n $ : int [1:6] 10 11 17 22 72 83\n $ : int [1:6] 10 11 14 16 72 83\n $ : int [1:6] 20 22 23 63 77 83\n $ : int [1:6] 10 20 21 73 74 82\n $ : int [1:6] 18 19 21 22 23 82\n $ : int [1:6] 19 20 35 74 82 86\n $ : int [1:6] 10 16 18 19 20 83\n $ : int [1:6] 18 20 41 77 79 82\n $ : int [1:6] 25 28 31 52 54 81\n $ : int [1:6] 24 28 31 33 54 81\n $ : int [1:6] 25 27 29 33 42 81\n $ : int [1:6] 26 29 30 37 42 81\n $ : int [1:6] 24 25 33 49 52 54\n $ : int [1:6] 26 27 37 42 43 81\n $ : int [1:6] 26 27 28 33 49 81\n $ : int [1:6] 24 25 36 39 40 54\n $ : int [1:6] 24 31 50 54 55 56\n $ : int [1:6] 25 26 28 30 49 81\n $ : int [1:6] 36 40 41 45 56 80\n $ : int [1:6] 21 41 46 47 80 82\n $ : int [1:6] 31 34 40 45 56 80\n $ : int [1:6] 26 27 29 42 43 44\n $ : int [1:6] 23 43 44 62 77 79\n $ : int [1:6] 25 40 42 43 44 81\n $ : int [1:6] 31 36 39 43 45 79\n $ : int [1:6] 23 35 45 79 80 82\n $ : int [1:6] 26 27 37 39 43 81\n $ : int [1:6] 37 39 40 42 44 79\n $ : int [1:6] 37 38 39 42 43 79\n $ : int [1:6] 34 36 40 41 79 80\n $ : int [1:6] 8 9 35 47 78 86\n $ : int [1:6] 8 21 35 46 80 86\n $ : int [1:6] 49 50 51 52 53 55\n $ : int [1:6] 28 33 48 51 52 54\n $ : int [1:6] 32 48 51 52 54 55\n $ : int [1:6] 28 48 49 50 52 54\n $ : int [1:6] 28 48 49 50 51 54\n $ : int [1:6] 48 50 51 52 55 75\n $ : int [1:6] 24 28 49 50 51 52\n $ : int [1:6] 32 48 50 52 53 75\n $ : int [1:6] 32 34 36 78 80 85\n $ : int [1:6] 1 2 3 58 64 68\n $ : int [1:6] 2 57 64 66 68 78\n $ : int [1:6] 12 13 60 61 87 88\n $ : int [1:6] 12 13 59 61 63 87\n $ : int [1:6] 12 13 60 62 63 87\n $ : int [1:6] 12 38 61 63 77 87\n $ : int [1:6] 12 18 60 61 62 83\n $ : int [1:6] 1 3 57 58 68 76\n $ : int [1:6] 58 64 66 67 68 76\n $ : int [1:6] 9 58 67 68 76 84\n $ : int [1:6] 7 65 66 68 76 84\n $ : int [1:6] 9 57 58 66 78 84\n $ : int [1:6] 4 5 6 32 75 85\n $ : int [1:6] 10 16 19 22 72 73\n $ : int [1:6] 7 19 73 74 84 86\n $ : int [1:6] 10 11 14 16 17 70\n $ : int [1:6] 10 19 21 70 71 74\n $ : int [1:6] 19 21 71 73 84 86\n $ : int [1:6] 6 32 50 53 55 69\n $ : int [1:6] 58 64 65 66 67 68\n $ : int [1:6] 18 23 38 61 62 63\n $ : int [1:6] 2 8 9 46 58 68\n $ : int [1:6] 38 40 41 43 44 45\n $ : int [1:6] 34 35 36 41 45 47\n $ : int [1:6] 25 26 28 33 39 42\n $ : int [1:6] 19 20 21 23 35 41\n $ : int [1:6] 12 13 15 16 22 63\n $ : int [1:6] 7 9 66 68 71 74\n $ : int [1:6] 2 3 4 5 56 69\n $ : int [1:6] 8 9 21 46 47 74\n $ : int [1:6] 59 60 61 62 63 88\n $ : int [1:6] 59 60 61 62 63 87\n - attr(*, \"region.id\")= chr [1:88] \"1\" \"2\" \"3\" \"4\" ...\n - attr(*, \"call\")= language knearneigh(x = coords, k = 6)\n - attr(*, \"sym\")= logi FALSE\n - attr(*, \"type\")= chr \"knn\"\n - attr(*, \"knn-k\")= num 6\n - attr(*, \"class\")= chr \"nb\"\n\n\n\nPlotting distance based neighbours\n\nplot(hunan$geometry, border=\"lightgrey\")\nplot(knn6, coords, pch = 19, cex = 0.6, add = TRUE, col = \"red\")"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex06/Hands-On_Ex06.html#row-standardised-weights-matrix",
    "href": "Hands-On_Ex/Hands-On_Ex06/Hands-On_Ex06.html#row-standardised-weights-matrix",
    "title": "Hands-On Exercise 6: Advanced",
    "section": "Row-standardised weights matrix",
    "text": "Row-standardised weights matrix\n\nrswm_q <- nb2listw(wm_q, style=\"W\", zero.policy = TRUE)\nrswm_q\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 448 \nPercentage nonzero weights: 5.785124 \nAverage number of links: 5.090909 \n\nWeights style: W \nWeights constants summary:\n   n   nn S0       S1       S2\nW 88 7744 88 37.86334 365.9147\n\n\n\nrswm_q$weights[10]\n\n[[1]]\n[1] 0.125 0.125 0.125 0.125 0.125 0.125 0.125 0.125\n\n\n\nrswm_ids <- nb2listw(wm_q, glist=ids, style=\"B\", zero.policy=TRUE)\nrswm_ids\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 448 \nPercentage nonzero weights: 5.785124 \nAverage number of links: 5.090909 \n\nWeights style: B \nWeights constants summary:\n   n   nn       S0        S1     S2\nB 88 7744 8.786867 0.3776535 3.8137\n\n\n\nrswm_ids$weights[1]\n\n[[1]]\n[1] 0.01535405 0.03916350 0.01820896 0.02807922 0.01145113\n\n\n\nsummary(unlist(rswm_ids$weights))\n\n    Min.  1st Qu.   Median     Mean  3rd Qu.     Max. \n0.008218 0.015088 0.018739 0.019614 0.022823 0.040338"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex06/Hands-On_Ex06.html#spatial-lag-with-row-standardised-weights",
    "href": "Hands-On_Ex/Hands-On_Ex06/Hands-On_Ex06.html#spatial-lag-with-row-standardised-weights",
    "title": "Hands-On Exercise 6: Advanced",
    "section": "Spatial lag with row-standardised weights",
    "text": "Spatial lag with row-standardised weights\n\nGDPPC.lag <- lag.listw(rswm_q, hunan$GDPPC)\nGDPPC.lag\n\n [1] 24847.20 22724.80 24143.25 27737.50 27270.25 21248.80 43747.00 33582.71\n [9] 45651.17 32027.62 32671.00 20810.00 25711.50 30672.33 33457.75 31689.20\n[17] 20269.00 23901.60 25126.17 21903.43 22718.60 25918.80 20307.00 20023.80\n[25] 16576.80 18667.00 14394.67 19848.80 15516.33 20518.00 17572.00 15200.12\n[33] 18413.80 14419.33 24094.50 22019.83 12923.50 14756.00 13869.80 12296.67\n[41] 15775.17 14382.86 11566.33 13199.50 23412.00 39541.00 36186.60 16559.60\n[49] 20772.50 19471.20 19827.33 15466.80 12925.67 18577.17 14943.00 24913.00\n[57] 25093.00 24428.80 17003.00 21143.75 20435.00 17131.33 24569.75 23835.50\n[65] 26360.00 47383.40 55157.75 37058.00 21546.67 23348.67 42323.67 28938.60\n[73] 25880.80 47345.67 18711.33 29087.29 20748.29 35933.71 15439.71 29787.50\n[81] 18145.00 21617.00 29203.89 41363.67 22259.09 44939.56 16902.00 16930.00\n\n\n\nnb1 <- wm_q[[1]]\nnb1 <- hunan$GDPPC[nb1]\nnb1\n\n[1] 20981 34592 24473 21311 22879\n\n\n\nlag.list <- list(hunan$NAME_3, lag.listw(rswm_q, hunan$GDPPC))\nlag.res <- as.data.frame(lag.list)\ncolnames(lag.res) <- c(\"NAME_3\", \"lag GDPPC\")\nhunan <- left_join(hunan,lag.res)\n\n\nhead(hunan)\n\nSimple feature collection with 6 features and 7 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 110.4922 ymin: 28.61762 xmax: 112.3013 ymax: 30.12812\nGeodetic CRS:  WGS 84\n   NAME_2  ID_3  NAME_3   ENGTYPE_3  County GDPPC lag GDPPC\n1 Changde 21098 Anxiang      County Anxiang 23667  24847.20\n2 Changde 21100 Hanshou      County Hanshou 20981  22724.80\n3 Changde 21101  Jinshi County City  Jinshi 34592  24143.25\n4 Changde 21102      Li      County      Li 24473  27737.50\n5 Changde 21103   Linli      County   Linli 25554  27270.25\n6 Changde 21104  Shimen      County  Shimen 27137  21248.80\n                        geometry\n1 POLYGON ((112.0625 29.75523...\n2 POLYGON ((112.2288 29.11684...\n3 POLYGON ((111.8927 29.6013,...\n4 POLYGON ((111.3731 29.94649...\n5 POLYGON ((111.6324 29.76288...\n6 POLYGON ((110.8825 30.11675...\n\n\n\ngdppc <- qtm(hunan, \"GDPPC\")\nlag_gdppc <- qtm(hunan, \"lag GDPPC\")\ntmap_arrange(gdppc, lag_gdppc, asp=1, ncol=2)"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex06/Hands-On_Ex06.html#spatial-lag-as-a-sum-of-neighboring-values",
    "href": "Hands-On_Ex/Hands-On_Ex06/Hands-On_Ex06.html#spatial-lag-as-a-sum-of-neighboring-values",
    "title": "Hands-On Exercise 6: Advanced",
    "section": "Spatial lag as a sum of neighboring values",
    "text": "Spatial lag as a sum of neighboring values\n\nb_weights <- lapply(wm_q, function(x) 0*x + 1)\nb_weights2 <- nb2listw(wm_q, \n                       glist = b_weights, \n                       style = \"B\")\nb_weights2\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 448 \nPercentage nonzero weights: 5.785124 \nAverage number of links: 5.090909 \n\nWeights style: B \nWeights constants summary:\n   n   nn  S0  S1    S2\nB 88 7744 448 896 10224\n\n\n\nlag_sum <- list(hunan$NAME_3, lag.listw(b_weights2, hunan$GDPPC))\nlag.res <- as.data.frame(lag_sum)\ncolnames(lag.res) <- c(\"NAME_3\", \"lag_sum GDPPC\")\n\n\nlag_sum\n\n[[1]]\n [1] \"Anxiang\"       \"Hanshou\"       \"Jinshi\"        \"Li\"           \n [5] \"Linli\"         \"Shimen\"        \"Liuyang\"       \"Ningxiang\"    \n [9] \"Wangcheng\"     \"Anren\"         \"Guidong\"       \"Jiahe\"        \n[13] \"Linwu\"         \"Rucheng\"       \"Yizhang\"       \"Yongxing\"     \n[17] \"Zixing\"        \"Changning\"     \"Hengdong\"      \"Hengnan\"      \n[21] \"Hengshan\"      \"Leiyang\"       \"Qidong\"        \"Chenxi\"       \n[25] \"Zhongfang\"     \"Huitong\"       \"Jingzhou\"      \"Mayang\"       \n[29] \"Tongdao\"       \"Xinhuang\"      \"Xupu\"          \"Yuanling\"     \n[33] \"Zhijiang\"      \"Lengshuijiang\" \"Shuangfeng\"    \"Xinhua\"       \n[37] \"Chengbu\"       \"Dongan\"        \"Dongkou\"       \"Longhui\"      \n[41] \"Shaodong\"      \"Suining\"       \"Wugang\"        \"Xinning\"      \n[45] \"Xinshao\"       \"Shaoshan\"      \"Xiangxiang\"    \"Baojing\"      \n[49] \"Fenghuang\"     \"Guzhang\"       \"Huayuan\"       \"Jishou\"       \n[53] \"Longshan\"      \"Luxi\"          \"Yongshun\"      \"Anhua\"        \n[57] \"Nan\"           \"Yuanjiang\"     \"Jianghua\"      \"Lanshan\"      \n[61] \"Ningyuan\"      \"Shuangpai\"     \"Xintian\"       \"Huarong\"      \n[65] \"Linxiang\"      \"Miluo\"         \"Pingjiang\"     \"Xiangyin\"     \n[69] \"Cili\"          \"Chaling\"       \"Liling\"        \"Yanling\"      \n[73] \"You\"           \"Zhuzhou\"       \"Sangzhi\"       \"Yueyang\"      \n[77] \"Qiyang\"        \"Taojiang\"      \"Shaoyang\"      \"Lianyuan\"     \n[81] \"Hongjiang\"     \"Hengyang\"      \"Guiyang\"       \"Changsha\"     \n[85] \"Taoyuan\"       \"Xiangtan\"      \"Dao\"           \"Jiangyong\"    \n\n[[2]]\n [1] 124236 113624  96573 110950 109081 106244 174988 235079 273907 256221\n[11]  98013 104050 102846  92017 133831 158446 141883 119508 150757 153324\n[21] 113593 129594 142149 100119  82884  74668  43184  99244  46549  20518\n[31] 140576 121601  92069  43258 144567 132119  51694  59024  69349  73780\n[41]  94651 100680  69398  52798 140472 118623 180933  82798  83090  97356\n[51]  59482  77334  38777 111463  74715 174391 150558 122144  68012  84575\n[61] 143045  51394  98279  47671  26360 236917 220631 185290  64640  70046\n[71] 126971 144693 129404 284074 112268 203611 145238 251536 108078 238300\n[81] 108870 108085 262835 248182 244850 404456  67608  33860\n\n\n\nhunan <- left_join(hunan, lag.res)\n\n\ngdppc <- qtm(hunan, \"GDPPC\")\nlag_sum_gdppc <- qtm(hunan, \"lag_sum GDPPC\")\ntmap_arrange(gdppc, lag_sum_gdppc, asp=1, ncol=2)"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex06/Hands-On_Ex06.html#spatial-window-average",
    "href": "Hands-On_Ex/Hands-On_Ex06/Hands-On_Ex06.html#spatial-window-average",
    "title": "Hands-On Exercise 6: Advanced",
    "section": "Spatial window average",
    "text": "Spatial window average\n\nwm_qs <- include.self(wm_q)\n\n\nwm_qs[[1]]\n\n[1]  1  2  3  4 57 85\n\n\n\nwm_qs <- nb2listw(wm_qs)\nwm_qs\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 536 \nPercentage nonzero weights: 6.921488 \nAverage number of links: 6.090909 \n\nWeights style: W \nWeights constants summary:\n   n   nn S0       S1       S2\nW 88 7744 88 30.90265 357.5308\n\n\n\nlag_w_avg_gpdpc <- lag.listw(wm_qs, \n                             hunan$GDPPC)\nlag_w_avg_gpdpc\n\n [1] 24650.50 22434.17 26233.00 27084.60 26927.00 22230.17 47621.20 37160.12\n [9] 49224.71 29886.89 26627.50 22690.17 25366.40 25825.75 30329.00 32682.83\n[17] 25948.62 23987.67 25463.14 21904.38 23127.50 25949.83 20018.75 19524.17\n[25] 18955.00 17800.40 15883.00 18831.33 14832.50 17965.00 17159.89 16199.44\n[33] 18764.50 26878.75 23188.86 20788.14 12365.20 15985.00 13764.83 11907.43\n[41] 17128.14 14593.62 11644.29 12706.00 21712.29 43548.25 35049.00 16226.83\n[49] 19294.40 18156.00 19954.75 18145.17 12132.75 18419.29 14050.83 23619.75\n[57] 24552.71 24733.67 16762.60 20932.60 19467.75 18334.00 22541.00 26028.00\n[65] 29128.50 46569.00 47576.60 36545.50 20838.50 22531.00 42115.50 27619.00\n[73] 27611.33 44523.29 18127.43 28746.38 20734.50 33880.62 14716.38 28516.22\n[81] 18086.14 21244.50 29568.80 48119.71 22310.75 43151.60 17133.40 17009.33\n\n\n\nlag.list.wm_qs <- list(hunan$NAME_3, lag.listw(wm_qs, hunan$GDPPC))\nlag_wm_qs.res <- as.data.frame(lag.list.wm_qs)\ncolnames(lag_wm_qs.res) <- c(\"NAME_3\", \"lag_window_avg GDPPC\")\n\n\nhunan <- left_join(hunan, lag_wm_qs.res)\n\n\nhunan %>%\n  select(\"County\", \"lag GDPPC\", \"lag_window_avg GDPPC\") %>%\n  kable()\n\n\n\n\n\n\n\n\n\n\nCounty\nlag GDPPC\nlag_window_avg GDPPC\ngeometry\n\n\n\n\nAnxiang\n24847.20\n24650.50\nPOLYGON ((112.0625 29.75523…\n\n\nHanshou\n22724.80\n22434.17\nPOLYGON ((112.2288 29.11684…\n\n\nJinshi\n24143.25\n26233.00\nPOLYGON ((111.8927 29.6013,…\n\n\nLi\n27737.50\n27084.60\nPOLYGON ((111.3731 29.94649…\n\n\nLinli\n27270.25\n26927.00\nPOLYGON ((111.6324 29.76288…\n\n\nShimen\n21248.80\n22230.17\nPOLYGON ((110.8825 30.11675…\n\n\nLiuyang\n43747.00\n47621.20\nPOLYGON ((113.9905 28.5682,…\n\n\nNingxiang\n33582.71\n37160.12\nPOLYGON ((112.7181 28.38299…\n\n\nWangcheng\n45651.17\n49224.71\nPOLYGON ((112.7914 28.52688…\n\n\nAnren\n32027.62\n29886.89\nPOLYGON ((113.1757 26.82734…\n\n\nGuidong\n32671.00\n26627.50\nPOLYGON ((114.1799 26.20117…\n\n\nJiahe\n20810.00\n22690.17\nPOLYGON ((112.4425 25.74358…\n\n\nLinwu\n25711.50\n25366.40\nPOLYGON ((112.5914 25.55143…\n\n\nRucheng\n30672.33\n25825.75\nPOLYGON ((113.6759 25.87578…\n\n\nYizhang\n33457.75\n30329.00\nPOLYGON ((113.2621 25.68394…\n\n\nYongxing\n31689.20\n32682.83\nPOLYGON ((113.3169 26.41843…\n\n\nZixing\n20269.00\n25948.62\nPOLYGON ((113.7311 26.16259…\n\n\nChangning\n23901.60\n23987.67\nPOLYGON ((112.6144 26.60198…\n\n\nHengdong\n25126.17\n25463.14\nPOLYGON ((113.1056 27.21007…\n\n\nHengnan\n21903.43\n21904.38\nPOLYGON ((112.7599 26.98149…\n\n\nHengshan\n22718.60\n23127.50\nPOLYGON ((112.607 27.4689, …\n\n\nLeiyang\n25918.80\n25949.83\nPOLYGON ((112.9996 26.69276…\n\n\nQidong\n20307.00\n20018.75\nPOLYGON ((111.7818 27.0383,…\n\n\nChenxi\n20023.80\n19524.17\nPOLYGON ((110.2624 28.21778…\n\n\nZhongfang\n16576.80\n18955.00\nPOLYGON ((109.9431 27.72858…\n\n\nHuitong\n18667.00\n17800.40\nPOLYGON ((109.9419 27.10512…\n\n\nJingzhou\n14394.67\n15883.00\nPOLYGON ((109.8186 26.75842…\n\n\nMayang\n19848.80\n18831.33\nPOLYGON ((109.795 27.98008,…\n\n\nTongdao\n15516.33\n14832.50\nPOLYGON ((109.9294 26.46561…\n\n\nXinhuang\n20518.00\n17965.00\nPOLYGON ((109.227 27.43733,…\n\n\nXupu\n17572.00\n17159.89\nPOLYGON ((110.7189 28.30485…\n\n\nYuanling\n15200.12\n16199.44\nPOLYGON ((110.9652 28.99895…\n\n\nZhijiang\n18413.80\n18764.50\nPOLYGON ((109.8818 27.60661…\n\n\nLengshuijiang\n14419.33\n26878.75\nPOLYGON ((111.5307 27.81472…\n\n\nShuangfeng\n24094.50\n23188.86\nPOLYGON ((112.263 27.70421,…\n\n\nXinhua\n22019.83\n20788.14\nPOLYGON ((111.3345 28.19642…\n\n\nChengbu\n12923.50\n12365.20\nPOLYGON ((110.4455 26.69317…\n\n\nDongan\n14756.00\n15985.00\nPOLYGON ((111.4531 26.86812…\n\n\nDongkou\n13869.80\n13764.83\nPOLYGON ((110.6622 27.37305…\n\n\nLonghui\n12296.67\n11907.43\nPOLYGON ((110.985 27.65983,…\n\n\nShaodong\n15775.17\n17128.14\nPOLYGON ((111.9054 27.40254…\n\n\nSuining\n14382.86\n14593.62\nPOLYGON ((110.389 27.10006,…\n\n\nWugang\n11566.33\n11644.29\nPOLYGON ((110.9878 27.03345…\n\n\nXinning\n13199.50\n12706.00\nPOLYGON ((111.0736 26.84627…\n\n\nXinshao\n23412.00\n21712.29\nPOLYGON ((111.6013 27.58275…\n\n\nShaoshan\n39541.00\n43548.25\nPOLYGON ((112.5391 27.97742…\n\n\nXiangxiang\n36186.60\n35049.00\nPOLYGON ((112.4549 28.05783…\n\n\nBaojing\n16559.60\n16226.83\nPOLYGON ((109.7015 28.82844…\n\n\nFenghuang\n20772.50\n19294.40\nPOLYGON ((109.5239 28.19206…\n\n\nGuzhang\n19471.20\n18156.00\nPOLYGON ((109.8968 28.74034…\n\n\nHuayuan\n19827.33\n19954.75\nPOLYGON ((109.5647 28.61712…\n\n\nJishou\n15466.80\n18145.17\nPOLYGON ((109.8375 28.4696,…\n\n\nLongshan\n12925.67\n12132.75\nPOLYGON ((109.6337 29.62521…\n\n\nLuxi\n18577.17\n18419.29\nPOLYGON ((110.1067 28.41835…\n\n\nYongshun\n14943.00\n14050.83\nPOLYGON ((110.0003 29.29499…\n\n\nAnhua\n24913.00\n23619.75\nPOLYGON ((111.6034 28.63716…\n\n\nNan\n25093.00\n24552.71\nPOLYGON ((112.3232 29.46074…\n\n\nYuanjiang\n24428.80\n24733.67\nPOLYGON ((112.4391 29.1791,…\n\n\nJianghua\n17003.00\n16762.60\nPOLYGON ((111.6461 25.29661…\n\n\nLanshan\n21143.75\n20932.60\nPOLYGON ((112.2286 25.61123…\n\n\nNingyuan\n20435.00\n19467.75\nPOLYGON ((112.0715 26.09892…\n\n\nShuangpai\n17131.33\n18334.00\nPOLYGON ((111.8864 26.11957…\n\n\nXintian\n24569.75\n22541.00\nPOLYGON ((112.2578 26.0796,…\n\n\nHuarong\n23835.50\n26028.00\nPOLYGON ((112.9242 29.69134…\n\n\nLinxiang\n26360.00\n29128.50\nPOLYGON ((113.5502 29.67418…\n\n\nMiluo\n47383.40\n46569.00\nPOLYGON ((112.9902 29.02139…\n\n\nPingjiang\n55157.75\n47576.60\nPOLYGON ((113.8436 29.06152…\n\n\nXiangyin\n37058.00\n36545.50\nPOLYGON ((112.9173 28.98264…\n\n\nCili\n21546.67\n20838.50\nPOLYGON ((110.8822 29.69017…\n\n\nChaling\n23348.67\n22531.00\nPOLYGON ((113.7666 27.10573…\n\n\nLiling\n42323.67\n42115.50\nPOLYGON ((113.5673 27.94346…\n\n\nYanling\n28938.60\n27619.00\nPOLYGON ((113.9292 26.6154,…\n\n\nYou\n25880.80\n27611.33\nPOLYGON ((113.5879 27.41324…\n\n\nZhuzhou\n47345.67\n44523.29\nPOLYGON ((113.2493 28.02411…\n\n\nSangzhi\n18711.33\n18127.43\nPOLYGON ((110.556 29.40543,…\n\n\nYueyang\n29087.29\n28746.38\nPOLYGON ((113.343 29.61064,…\n\n\nQiyang\n20748.29\n20734.50\nPOLYGON ((111.5563 26.81318…\n\n\nTaojiang\n35933.71\n33880.62\nPOLYGON ((112.0508 28.67265…\n\n\nShaoyang\n15439.71\n14716.38\nPOLYGON ((111.5013 27.30207…\n\n\nLianyuan\n29787.50\n28516.22\nPOLYGON ((111.6789 28.02946…\n\n\nHongjiang\n18145.00\n18086.14\nPOLYGON ((110.1441 27.47513…\n\n\nHengyang\n21617.00\n21244.50\nPOLYGON ((112.7144 26.98613…\n\n\nGuiyang\n29203.89\n29568.80\nPOLYGON ((113.0811 26.04963…\n\n\nChangsha\n41363.67\n48119.71\nPOLYGON ((112.9421 28.03722…\n\n\nTaoyuan\n22259.09\n22310.75\nPOLYGON ((112.0612 29.32855…\n\n\nXiangtan\n44939.56\n43151.60\nPOLYGON ((113.0426 27.8942,…\n\n\nDao\n16902.00\n17133.40\nPOLYGON ((111.498 25.81679,…\n\n\nJiangyong\n16930.00\n17009.33\nPOLYGON ((111.3659 25.39472…\n\n\n\n\n\n\nw_avg_gdppc <- qtm(hunan, \"lag_window_avg GDPPC\")\ntmap_arrange(lag_gdppc, w_avg_gdppc, asp=1, ncol=2)"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex06/Hands-On_Ex06.html#spatial-window-sum",
    "href": "Hands-On_Ex/Hands-On_Ex06/Hands-On_Ex06.html#spatial-window-sum",
    "title": "Hands-On Exercise 6: Advanced",
    "section": "Spatial window sum",
    "text": "Spatial window sum\n\nwm_qs <- include.self(wm_q)\nwm_qs\n\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 536 \nPercentage nonzero weights: 6.921488 \nAverage number of links: 6.090909 \n\n\n\nb_weights <- lapply(wm_qs, function(x) 0*x + 1)\nb_weights[1]\n\n[[1]]\n[1] 1 1 1 1 1 1\n\n\n\nb_weights2 <- nb2listw(wm_qs, \n                       glist = b_weights, \n                       style = \"B\")\nb_weights2\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 536 \nPercentage nonzero weights: 6.921488 \nAverage number of links: 6.090909 \n\nWeights style: B \nWeights constants summary:\n   n   nn  S0   S1    S2\nB 88 7744 536 1072 14160\n\n\n\nw_sum_gdppc <- list(hunan$NAME_3, lag.listw(b_weights2, hunan$GDPPC))\nw_sum_gdppc\n\n[[1]]\n [1] \"Anxiang\"       \"Hanshou\"       \"Jinshi\"        \"Li\"           \n [5] \"Linli\"         \"Shimen\"        \"Liuyang\"       \"Ningxiang\"    \n [9] \"Wangcheng\"     \"Anren\"         \"Guidong\"       \"Jiahe\"        \n[13] \"Linwu\"         \"Rucheng\"       \"Yizhang\"       \"Yongxing\"     \n[17] \"Zixing\"        \"Changning\"     \"Hengdong\"      \"Hengnan\"      \n[21] \"Hengshan\"      \"Leiyang\"       \"Qidong\"        \"Chenxi\"       \n[25] \"Zhongfang\"     \"Huitong\"       \"Jingzhou\"      \"Mayang\"       \n[29] \"Tongdao\"       \"Xinhuang\"      \"Xupu\"          \"Yuanling\"     \n[33] \"Zhijiang\"      \"Lengshuijiang\" \"Shuangfeng\"    \"Xinhua\"       \n[37] \"Chengbu\"       \"Dongan\"        \"Dongkou\"       \"Longhui\"      \n[41] \"Shaodong\"      \"Suining\"       \"Wugang\"        \"Xinning\"      \n[45] \"Xinshao\"       \"Shaoshan\"      \"Xiangxiang\"    \"Baojing\"      \n[49] \"Fenghuang\"     \"Guzhang\"       \"Huayuan\"       \"Jishou\"       \n[53] \"Longshan\"      \"Luxi\"          \"Yongshun\"      \"Anhua\"        \n[57] \"Nan\"           \"Yuanjiang\"     \"Jianghua\"      \"Lanshan\"      \n[61] \"Ningyuan\"      \"Shuangpai\"     \"Xintian\"       \"Huarong\"      \n[65] \"Linxiang\"      \"Miluo\"         \"Pingjiang\"     \"Xiangyin\"     \n[69] \"Cili\"          \"Chaling\"       \"Liling\"        \"Yanling\"      \n[73] \"You\"           \"Zhuzhou\"       \"Sangzhi\"       \"Yueyang\"      \n[77] \"Qiyang\"        \"Taojiang\"      \"Shaoyang\"      \"Lianyuan\"     \n[81] \"Hongjiang\"     \"Hengyang\"      \"Guiyang\"       \"Changsha\"     \n[85] \"Taoyuan\"       \"Xiangtan\"      \"Dao\"           \"Jiangyong\"    \n\n[[2]]\n [1] 147903 134605 131165 135423 134635 133381 238106 297281 344573 268982\n[11] 106510 136141 126832 103303 151645 196097 207589 143926 178242 175235\n[21] 138765 155699 160150 117145 113730  89002  63532 112988  59330  35930\n[31] 154439 145795 112587 107515 162322 145517  61826  79925  82589  83352\n[41] 119897 116749  81510  63530 151986 174193 210294  97361  96472 108936\n[51]  79819 108871  48531 128935  84305 188958 171869 148402  83813 104663\n[61] 155742  73336 112705  78084  58257 279414 237883 219273  83354  90124\n[71] 168462 165714 165668 311663 126892 229971 165876 271045 117731 256646\n[81] 126603 127467 295688 336838 267729 431516  85667  51028\n\n\n\nw_sum_gdppc.res <- as.data.frame(w_sum_gdppc)\ncolnames(w_sum_gdppc.res) <- c(\"NAME_3\", \"w_sum GDPPC\")\n\n\nhunan <- left_join(hunan, w_sum_gdppc.res)\n\n\nhunan %>%\n  select(\"County\", \"lag_sum GDPPC\", \"w_sum GDPPC\") %>%\n  kable()\n\n\n\n\n\n\n\n\n\n\nCounty\nlag_sum GDPPC\nw_sum GDPPC\ngeometry\n\n\n\n\nAnxiang\n124236\n147903\nPOLYGON ((112.0625 29.75523…\n\n\nHanshou\n113624\n134605\nPOLYGON ((112.2288 29.11684…\n\n\nJinshi\n96573\n131165\nPOLYGON ((111.8927 29.6013,…\n\n\nLi\n110950\n135423\nPOLYGON ((111.3731 29.94649…\n\n\nLinli\n109081\n134635\nPOLYGON ((111.6324 29.76288…\n\n\nShimen\n106244\n133381\nPOLYGON ((110.8825 30.11675…\n\n\nLiuyang\n174988\n238106\nPOLYGON ((113.9905 28.5682,…\n\n\nNingxiang\n235079\n297281\nPOLYGON ((112.7181 28.38299…\n\n\nWangcheng\n273907\n344573\nPOLYGON ((112.7914 28.52688…\n\n\nAnren\n256221\n268982\nPOLYGON ((113.1757 26.82734…\n\n\nGuidong\n98013\n106510\nPOLYGON ((114.1799 26.20117…\n\n\nJiahe\n104050\n136141\nPOLYGON ((112.4425 25.74358…\n\n\nLinwu\n102846\n126832\nPOLYGON ((112.5914 25.55143…\n\n\nRucheng\n92017\n103303\nPOLYGON ((113.6759 25.87578…\n\n\nYizhang\n133831\n151645\nPOLYGON ((113.2621 25.68394…\n\n\nYongxing\n158446\n196097\nPOLYGON ((113.3169 26.41843…\n\n\nZixing\n141883\n207589\nPOLYGON ((113.7311 26.16259…\n\n\nChangning\n119508\n143926\nPOLYGON ((112.6144 26.60198…\n\n\nHengdong\n150757\n178242\nPOLYGON ((113.1056 27.21007…\n\n\nHengnan\n153324\n175235\nPOLYGON ((112.7599 26.98149…\n\n\nHengshan\n113593\n138765\nPOLYGON ((112.607 27.4689, …\n\n\nLeiyang\n129594\n155699\nPOLYGON ((112.9996 26.69276…\n\n\nQidong\n142149\n160150\nPOLYGON ((111.7818 27.0383,…\n\n\nChenxi\n100119\n117145\nPOLYGON ((110.2624 28.21778…\n\n\nZhongfang\n82884\n113730\nPOLYGON ((109.9431 27.72858…\n\n\nHuitong\n74668\n89002\nPOLYGON ((109.9419 27.10512…\n\n\nJingzhou\n43184\n63532\nPOLYGON ((109.8186 26.75842…\n\n\nMayang\n99244\n112988\nPOLYGON ((109.795 27.98008,…\n\n\nTongdao\n46549\n59330\nPOLYGON ((109.9294 26.46561…\n\n\nXinhuang\n20518\n35930\nPOLYGON ((109.227 27.43733,…\n\n\nXupu\n140576\n154439\nPOLYGON ((110.7189 28.30485…\n\n\nYuanling\n121601\n145795\nPOLYGON ((110.9652 28.99895…\n\n\nZhijiang\n92069\n112587\nPOLYGON ((109.8818 27.60661…\n\n\nLengshuijiang\n43258\n107515\nPOLYGON ((111.5307 27.81472…\n\n\nShuangfeng\n144567\n162322\nPOLYGON ((112.263 27.70421,…\n\n\nXinhua\n132119\n145517\nPOLYGON ((111.3345 28.19642…\n\n\nChengbu\n51694\n61826\nPOLYGON ((110.4455 26.69317…\n\n\nDongan\n59024\n79925\nPOLYGON ((111.4531 26.86812…\n\n\nDongkou\n69349\n82589\nPOLYGON ((110.6622 27.37305…\n\n\nLonghui\n73780\n83352\nPOLYGON ((110.985 27.65983,…\n\n\nShaodong\n94651\n119897\nPOLYGON ((111.9054 27.40254…\n\n\nSuining\n100680\n116749\nPOLYGON ((110.389 27.10006,…\n\n\nWugang\n69398\n81510\nPOLYGON ((110.9878 27.03345…\n\n\nXinning\n52798\n63530\nPOLYGON ((111.0736 26.84627…\n\n\nXinshao\n140472\n151986\nPOLYGON ((111.6013 27.58275…\n\n\nShaoshan\n118623\n174193\nPOLYGON ((112.5391 27.97742…\n\n\nXiangxiang\n180933\n210294\nPOLYGON ((112.4549 28.05783…\n\n\nBaojing\n82798\n97361\nPOLYGON ((109.7015 28.82844…\n\n\nFenghuang\n83090\n96472\nPOLYGON ((109.5239 28.19206…\n\n\nGuzhang\n97356\n108936\nPOLYGON ((109.8968 28.74034…\n\n\nHuayuan\n59482\n79819\nPOLYGON ((109.5647 28.61712…\n\n\nJishou\n77334\n108871\nPOLYGON ((109.8375 28.4696,…\n\n\nLongshan\n38777\n48531\nPOLYGON ((109.6337 29.62521…\n\n\nLuxi\n111463\n128935\nPOLYGON ((110.1067 28.41835…\n\n\nYongshun\n74715\n84305\nPOLYGON ((110.0003 29.29499…\n\n\nAnhua\n174391\n188958\nPOLYGON ((111.6034 28.63716…\n\n\nNan\n150558\n171869\nPOLYGON ((112.3232 29.46074…\n\n\nYuanjiang\n122144\n148402\nPOLYGON ((112.4391 29.1791,…\n\n\nJianghua\n68012\n83813\nPOLYGON ((111.6461 25.29661…\n\n\nLanshan\n84575\n104663\nPOLYGON ((112.2286 25.61123…\n\n\nNingyuan\n143045\n155742\nPOLYGON ((112.0715 26.09892…\n\n\nShuangpai\n51394\n73336\nPOLYGON ((111.8864 26.11957…\n\n\nXintian\n98279\n112705\nPOLYGON ((112.2578 26.0796,…\n\n\nHuarong\n47671\n78084\nPOLYGON ((112.9242 29.69134…\n\n\nLinxiang\n26360\n58257\nPOLYGON ((113.5502 29.67418…\n\n\nMiluo\n236917\n279414\nPOLYGON ((112.9902 29.02139…\n\n\nPingjiang\n220631\n237883\nPOLYGON ((113.8436 29.06152…\n\n\nXiangyin\n185290\n219273\nPOLYGON ((112.9173 28.98264…\n\n\nCili\n64640\n83354\nPOLYGON ((110.8822 29.69017…\n\n\nChaling\n70046\n90124\nPOLYGON ((113.7666 27.10573…\n\n\nLiling\n126971\n168462\nPOLYGON ((113.5673 27.94346…\n\n\nYanling\n144693\n165714\nPOLYGON ((113.9292 26.6154,…\n\n\nYou\n129404\n165668\nPOLYGON ((113.5879 27.41324…\n\n\nZhuzhou\n284074\n311663\nPOLYGON ((113.2493 28.02411…\n\n\nSangzhi\n112268\n126892\nPOLYGON ((110.556 29.40543,…\n\n\nYueyang\n203611\n229971\nPOLYGON ((113.343 29.61064,…\n\n\nQiyang\n145238\n165876\nPOLYGON ((111.5563 26.81318…\n\n\nTaojiang\n251536\n271045\nPOLYGON ((112.0508 28.67265…\n\n\nShaoyang\n108078\n117731\nPOLYGON ((111.5013 27.30207…\n\n\nLianyuan\n238300\n256646\nPOLYGON ((111.6789 28.02946…\n\n\nHongjiang\n108870\n126603\nPOLYGON ((110.1441 27.47513…\n\n\nHengyang\n108085\n127467\nPOLYGON ((112.7144 26.98613…\n\n\nGuiyang\n262835\n295688\nPOLYGON ((113.0811 26.04963…\n\n\nChangsha\n248182\n336838\nPOLYGON ((112.9421 28.03722…\n\n\nTaoyuan\n244850\n267729\nPOLYGON ((112.0612 29.32855…\n\n\nXiangtan\n404456\n431516\nPOLYGON ((113.0426 27.8942,…\n\n\nDao\n67608\n85667\nPOLYGON ((111.498 25.81679,…\n\n\nJiangyong\n33860\n51028\nPOLYGON ((111.3659 25.39472…\n\n\n\n\n\n\nw_sum_gdppc <- qtm(hunan, \"w_sum GDPPC\")\ntmap_arrange(lag_sum_gdppc, w_sum_gdppc, asp=1, ncol=2)"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex07/Hands-On_Ex07.html",
    "href": "Hands-On_Ex/Hands-On_Ex07/Hands-On_Ex07.html",
    "title": "Hands-On Exercise 7 (Part 1): Global Measures of Spatial Autocorrelation",
    "section": "",
    "text": "pacman::p_load(sf, spdep, tmap, tidyverse)\n\n\n\n\n\n\n\nhunan <- st_read(dsn = \"data/geospatial\", \n                 layer = \"Hunan\")\n\nReading layer `Hunan' from data source \n  `C:\\Users\\la935\\Desktop\\IS415 - GAA\\IS415 - GAA (New)\\Hands-On_Ex\\Hands-On_Ex07\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 88 features and 7 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 108.7831 ymin: 24.6342 xmax: 114.2544 ymax: 30.12812\nGeodetic CRS:  WGS 84\n\n\n\n\n\n\nhunan2012 <- read_csv(\"data/aspatial/Hunan_2012.csv\")\n\n\n\n\n\nhunan <- left_join(hunan,hunan2012) %>%\n  select(1:4, 7, 15)\n\n\n\n\n\nequal <- tm_shape(hunan) +\n  tm_fill(\"GDPPC\",\n          n = 5,\n          style = \"equal\") +\n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"Equal interval classification\")\n\nquantile <- tm_shape(hunan) +\n  tm_fill(\"GDPPC\",\n          n = 5,\n          style = \"quantile\") +\n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"Equal quantile classification\")\n\ntmap_arrange(equal, \n             quantile, \n             asp=1, \n             ncol=2)"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex07/Hands-On_Ex07.html#computing-contiguity-spatial-weights",
    "href": "Hands-On_Ex/Hands-On_Ex07/Hands-On_Ex07.html#computing-contiguity-spatial-weights",
    "title": "Hands-On Exercise 7 (Part 1): Global Measures of Spatial Autocorrelation",
    "section": "Computing Contiguity Spatial Weights",
    "text": "Computing Contiguity Spatial Weights\n\nwm_q <- poly2nb(hunan, \n                queen=TRUE)\nsummary(wm_q)\n\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 448 \nPercentage nonzero weights: 5.785124 \nAverage number of links: 5.090909 \nLink number distribution:\n\n 1  2  3  4  5  6  7  8  9 11 \n 2  2 12 16 24 14 11  4  2  1 \n2 least connected regions:\n30 65 with 1 link\n1 most connected region:\n85 with 11 links"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex07/Hands-On_Ex07.html#row-standardised-weights-matrix",
    "href": "Hands-On_Ex/Hands-On_Ex07/Hands-On_Ex07.html#row-standardised-weights-matrix",
    "title": "Hands-On Exercise 7 (Part 1): Global Measures of Spatial Autocorrelation",
    "section": "Row-standardised weights matrix",
    "text": "Row-standardised weights matrix\n\nrswm_q <- nb2listw(wm_q, \n                   style=\"W\", \n                   zero.policy = TRUE)\nrswm_q\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 448 \nPercentage nonzero weights: 5.785124 \nAverage number of links: 5.090909 \n\nWeights style: W \nWeights constants summary:\n   n   nn S0       S1       S2\nW 88 7744 88 37.86334 365.9147"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex07/Hands-On_Ex07.html#global-spatial-autocorrelation-morans-i",
    "href": "Hands-On_Ex/Hands-On_Ex07/Hands-On_Ex07.html#global-spatial-autocorrelation-morans-i",
    "title": "Hands-On Exercise 7 (Part 1): Global Measures of Spatial Autocorrelation",
    "section": "Global Spatial Autocorrelation: Moran’s I",
    "text": "Global Spatial Autocorrelation: Moran’s I\n\nmoran.test(hunan$GDPPC, \n           listw=rswm_q, \n           zero.policy = TRUE, \n           na.action=na.omit)\n\n\n    Moran I test under randomisation\n\ndata:  hunan$GDPPC  \nweights: rswm_q    \n\nMoran I statistic standard deviate = 4.7351, p-value = 1.095e-06\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n      0.300749970      -0.011494253       0.004348351 \n\n\n\nComputing Monte Carlo Moran’s I\n\nset.seed(1234)\nbperm= moran.mc(hunan$GDPPC, \n                listw=rswm_q, \n                nsim=999, \n                zero.policy = TRUE, \n                na.action=na.omit)\nbperm\n\n\n    Monte-Carlo simulation of Moran I\n\ndata:  hunan$GDPPC \nweights: rswm_q  \nnumber of simulations + 1: 1000 \n\nstatistic = 0.30075, observed rank = 1000, p-value = 0.001\nalternative hypothesis: greater\n\n\n\n\nVisualising Monte Carlo Moran’s I\n\nmean(bperm$res[1:999])\n\n[1] -0.01504572\n\n\n\nvar(bperm$res[1:999])\n\n[1] 0.004371574\n\n\n\nsummary(bperm$res[1:999])\n\n    Min.  1st Qu.   Median     Mean  3rd Qu.     Max. \n-0.18339 -0.06168 -0.02125 -0.01505  0.02611  0.27593 \n\n\n\nhist(bperm$res, \n     freq=TRUE, \n     breaks=20, \n     xlab=\"Simulated Moran's I\")\nabline(v=0, \n       col=\"red\")"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex07/Hands-On_Ex07.html#global-spatial-autocorrelation-gearys",
    "href": "Hands-On_Ex/Hands-On_Ex07/Hands-On_Ex07.html#global-spatial-autocorrelation-gearys",
    "title": "Hands-On Exercise 7 (Part 1): Global Measures of Spatial Autocorrelation",
    "section": "Global Spatial Autocorrelation: Geary’s",
    "text": "Global Spatial Autocorrelation: Geary’s\n\nGeary’s C test\n\ngeary.test(hunan$GDPPC, listw=rswm_q)\n\n\n    Geary C test under randomisation\n\ndata:  hunan$GDPPC \nweights: rswm_q \n\nGeary C statistic standard deviate = 3.6108, p-value = 0.0001526\nalternative hypothesis: Expectation greater than statistic\nsample estimates:\nGeary C statistic       Expectation          Variance \n        0.6907223         1.0000000         0.0073364 \n\n\n\n\nComputing Monte Carlo Geary’s C\n\nset.seed(1234)\nbperm=geary.mc(hunan$GDPPC, \n               listw=rswm_q, \n               nsim=999)\nbperm\n\n\n    Monte-Carlo simulation of Geary C\n\ndata:  hunan$GDPPC \nweights: rswm_q \nnumber of simulations + 1: 1000 \n\nstatistic = 0.69072, observed rank = 1, p-value = 0.001\nalternative hypothesis: greater\n\n\n\n\nVisualising the Monte Carlo Geary’s C\n\nmean(bperm$res[1:999])\n\n[1] 1.004402\n\n\n\nvar(bperm$res[1:999])\n\n[1] 0.007436493\n\n\n\nsummary(bperm$res[1:999])\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n 0.7142  0.9502  1.0052  1.0044  1.0595  1.2722 \n\n\n\nhist(bperm$res, freq=TRUE, breaks=20, xlab=\"Simulated Geary c\")\nabline(v=1, col=\"red\")"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex07/Hands-On_Ex07.html#compute-morans-i-correlogram",
    "href": "Hands-On_Ex/Hands-On_Ex07/Hands-On_Ex07.html#compute-morans-i-correlogram",
    "title": "Hands-On Exercise 7 (Part 1): Global Measures of Spatial Autocorrelation",
    "section": "Compute Moran’s I correlogram",
    "text": "Compute Moran’s I correlogram\n\nMI_corr <- sp.correlogram(wm_q, \n                          hunan$GDPPC, \n                          order=6, \n                          method=\"I\", \n                          style=\"W\")\nplot(MI_corr)\n\n\n\n\n\nprint(MI_corr)\n\nSpatial correlogram for hunan$GDPPC \nmethod: Moran's I\n         estimate expectation   variance standard deviate Pr(I) two sided    \n1 (88)  0.3007500  -0.0114943  0.0043484           4.7351       2.189e-06 ***\n2 (88)  0.2060084  -0.0114943  0.0020962           4.7505       2.029e-06 ***\n3 (88)  0.0668273  -0.0114943  0.0014602           2.0496        0.040400 *  \n4 (88)  0.0299470  -0.0114943  0.0011717           1.2107        0.226015    \n5 (88) -0.1530471  -0.0114943  0.0012440          -4.0134       5.984e-05 ***\n6 (88) -0.1187070  -0.0114943  0.0016791          -2.6164        0.008886 ** \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex07/Hands-On_Ex07.html#compute-gearys-c-correlogram-and-plot",
    "href": "Hands-On_Ex/Hands-On_Ex07/Hands-On_Ex07.html#compute-gearys-c-correlogram-and-plot",
    "title": "Hands-On Exercise 7 (Part 1): Global Measures of Spatial Autocorrelation",
    "section": "Compute Geary’s C correlogram and plot",
    "text": "Compute Geary’s C correlogram and plot\n\nGC_corr <- sp.correlogram(wm_q, \n                          hunan$GDPPC, \n                          order=6, \n                          method=\"C\", \n                          style=\"W\")\nplot(GC_corr)\n\n\n\n\n\nprint(GC_corr)\n\nSpatial correlogram for hunan$GDPPC \nmethod: Geary's C\n        estimate expectation  variance standard deviate Pr(I) two sided    \n1 (88) 0.6907223   1.0000000 0.0073364          -3.6108       0.0003052 ***\n2 (88) 0.7630197   1.0000000 0.0049126          -3.3811       0.0007220 ***\n3 (88) 0.9397299   1.0000000 0.0049005          -0.8610       0.3892612    \n4 (88) 1.0098462   1.0000000 0.0039631           0.1564       0.8757128    \n5 (88) 1.2008204   1.0000000 0.0035568           3.3673       0.0007592 ***\n6 (88) 1.0773386   1.0000000 0.0058042           1.0151       0.3100407    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex07/Hands-On_Ex07_2.html",
    "href": "Hands-On_Ex/Hands-On_Ex07/Hands-On_Ex07_2.html",
    "title": "Hands-On Exercise 7 (Part 2): Global Measures of Spatial Autocorrelation",
    "section": "",
    "text": "pacman::p_load(sf, spdep, tmap, tidyverse)\n\n\n\n\n\n\n\nhunan <- st_read(dsn = \"data/geospatial\", \n                 layer = \"Hunan\")\n\nReading layer `Hunan' from data source \n  `C:\\Users\\la935\\Desktop\\IS415 - GAA\\IS415 - GAA (New)\\Hands-On_Ex\\Hands-On_Ex07\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 88 features and 7 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 108.7831 ymin: 24.6342 xmax: 114.2544 ymax: 30.12812\nGeodetic CRS:  WGS 84\n\n\n\n\n\n\nhunan2012 <- read_csv(\"data/aspatial/Hunan_2012.csv\")\n\n\n\n\n\nhunan <- left_join(hunan,hunan2012) %>%\n  select(1:4, 7, 15)\n\n\n\n\n\nequal <- tm_shape(hunan) +\n  tm_fill(\"GDPPC\",\n          n = 5,\n          style = \"equal\") +\n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"Equal interval classification\")\n\nquantile <- tm_shape(hunan) +\n  tm_fill(\"GDPPC\",\n          n = 5,\n          style = \"quantile\") +\n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"Equal quantile classification\")\n\ntmap_arrange(equal, \n             quantile, \n             asp=1, \n             ncol=2)"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex07/Hands-On_Ex07_2.html#computing-contiguity-spatial-weights",
    "href": "Hands-On_Ex/Hands-On_Ex07/Hands-On_Ex07_2.html#computing-contiguity-spatial-weights",
    "title": "Hands-On Exercise 7 (Part 2): Global Measures of Spatial Autocorrelation",
    "section": "Computing Contiguity Spatial Weights",
    "text": "Computing Contiguity Spatial Weights\n\nwm_q <- poly2nb(hunan, \n                queen=TRUE)\nsummary(wm_q)\n\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 448 \nPercentage nonzero weights: 5.785124 \nAverage number of links: 5.090909 \nLink number distribution:\n\n 1  2  3  4  5  6  7  8  9 11 \n 2  2 12 16 24 14 11  4  2  1 \n2 least connected regions:\n30 65 with 1 link\n1 most connected region:\n85 with 11 links"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex07/Hands-On_Ex07_2.html#row-standardised-weights-matrix",
    "href": "Hands-On_Ex/Hands-On_Ex07/Hands-On_Ex07_2.html#row-standardised-weights-matrix",
    "title": "Hands-On Exercise 7 (Part 2): Global Measures of Spatial Autocorrelation",
    "section": "Row-standardised weights matrix",
    "text": "Row-standardised weights matrix\n\nrswm_q <- nb2listw(wm_q, \n                   style=\"W\", \n                   zero.policy = TRUE)\nrswm_q\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 448 \nPercentage nonzero weights: 5.785124 \nAverage number of links: 5.090909 \n\nWeights style: W \nWeights constants summary:\n   n   nn S0       S1       S2\nW 88 7744 88 37.86334 365.9147"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex07/Hands-On_Ex07_2.html#global-spatial-autocorrelation-morans-i",
    "href": "Hands-On_Ex/Hands-On_Ex07/Hands-On_Ex07_2.html#global-spatial-autocorrelation-morans-i",
    "title": "Hands-On Exercise 7 (Part 2): Global Measures of Spatial Autocorrelation",
    "section": "Global Spatial Autocorrelation: Moran’s I",
    "text": "Global Spatial Autocorrelation: Moran’s I\n\nmoran.test(hunan$GDPPC, \n           listw=rswm_q, \n           zero.policy = TRUE, \n           na.action=na.omit)\n\n\n    Moran I test under randomisation\n\ndata:  hunan$GDPPC  \nweights: rswm_q    \n\nMoran I statistic standard deviate = 4.7351, p-value = 1.095e-06\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n      0.300749970      -0.011494253       0.004348351 \n\n\n\nComputing Monte Carlo Moran’s I\n\nset.seed(1234)\nbperm= moran.mc(hunan$GDPPC, \n                listw=rswm_q, \n                nsim=999, \n                zero.policy = TRUE, \n                na.action=na.omit)\nbperm\n\n\n    Monte-Carlo simulation of Moran I\n\ndata:  hunan$GDPPC \nweights: rswm_q  \nnumber of simulations + 1: 1000 \n\nstatistic = 0.30075, observed rank = 1000, p-value = 0.001\nalternative hypothesis: greater\n\n\n\n\nVisualising Monte Carlo Moran’s I\n\nmean(bperm$res[1:999])\n\n[1] -0.01504572\n\n\n\nvar(bperm$res[1:999])\n\n[1] 0.004371574\n\n\n\nsummary(bperm$res[1:999])\n\n    Min.  1st Qu.   Median     Mean  3rd Qu.     Max. \n-0.18339 -0.06168 -0.02125 -0.01505  0.02611  0.27593 \n\n\n\nhist(bperm$res, \n     freq=TRUE, \n     breaks=20, \n     xlab=\"Simulated Moran's I\")\nabline(v=0, \n       col=\"red\")"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex07/Hands-On_Ex07_2.html#global-spatial-autocorrelation-gearys",
    "href": "Hands-On_Ex/Hands-On_Ex07/Hands-On_Ex07_2.html#global-spatial-autocorrelation-gearys",
    "title": "Hands-On Exercise 7 (Part 2): Global Measures of Spatial Autocorrelation",
    "section": "Global Spatial Autocorrelation: Geary’s",
    "text": "Global Spatial Autocorrelation: Geary’s\n\nGeary’s C test\n\ngeary.test(hunan$GDPPC, listw=rswm_q)\n\n\n    Geary C test under randomisation\n\ndata:  hunan$GDPPC \nweights: rswm_q \n\nGeary C statistic standard deviate = 3.6108, p-value = 0.0001526\nalternative hypothesis: Expectation greater than statistic\nsample estimates:\nGeary C statistic       Expectation          Variance \n        0.6907223         1.0000000         0.0073364 \n\n\n\n\nComputing Monte Carlo Geary’s C\n\nset.seed(1234)\nbperm=geary.mc(hunan$GDPPC, \n               listw=rswm_q, \n               nsim=999)\nbperm\n\n\n    Monte-Carlo simulation of Geary C\n\ndata:  hunan$GDPPC \nweights: rswm_q \nnumber of simulations + 1: 1000 \n\nstatistic = 0.69072, observed rank = 1, p-value = 0.001\nalternative hypothesis: greater\n\n\n\n\nVisualising the Monte Carlo Geary’s C\n\nmean(bperm$res[1:999])\n\n[1] 1.004402\n\n\n\nvar(bperm$res[1:999])\n\n[1] 0.007436493\n\n\n\nsummary(bperm$res[1:999])\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n 0.7142  0.9502  1.0052  1.0044  1.0595  1.2722 \n\n\n\nhist(bperm$res, freq=TRUE, breaks=20, xlab=\"Simulated Geary c\")\nabline(v=1, col=\"red\")"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex07/Hands-On_Ex07_2.html#compute-morans-i-correlogram",
    "href": "Hands-On_Ex/Hands-On_Ex07/Hands-On_Ex07_2.html#compute-morans-i-correlogram",
    "title": "Hands-On Exercise 7 (Part 2): Global Measures of Spatial Autocorrelation",
    "section": "Compute Moran’s I correlogram",
    "text": "Compute Moran’s I correlogram\n\nMI_corr <- sp.correlogram(wm_q, \n                          hunan$GDPPC, \n                          order=6, \n                          method=\"I\", \n                          style=\"W\")\nplot(MI_corr)\n\n\n\n\n\nprint(MI_corr)\n\nSpatial correlogram for hunan$GDPPC \nmethod: Moran's I\n         estimate expectation   variance standard deviate Pr(I) two sided    \n1 (88)  0.3007500  -0.0114943  0.0043484           4.7351       2.189e-06 ***\n2 (88)  0.2060084  -0.0114943  0.0020962           4.7505       2.029e-06 ***\n3 (88)  0.0668273  -0.0114943  0.0014602           2.0496        0.040400 *  \n4 (88)  0.0299470  -0.0114943  0.0011717           1.2107        0.226015    \n5 (88) -0.1530471  -0.0114943  0.0012440          -4.0134       5.984e-05 ***\n6 (88) -0.1187070  -0.0114943  0.0016791          -2.6164        0.008886 ** \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex07/Hands-On_Ex07_2.html#compute-gearys-c-correlogram-and-plot",
    "href": "Hands-On_Ex/Hands-On_Ex07/Hands-On_Ex07_2.html#compute-gearys-c-correlogram-and-plot",
    "title": "Hands-On Exercise 7 (Part 2): Global Measures of Spatial Autocorrelation",
    "section": "Compute Geary’s C correlogram and plot",
    "text": "Compute Geary’s C correlogram and plot\n\nGC_corr <- sp.correlogram(wm_q, \n                          hunan$GDPPC, \n                          order=6, \n                          method=\"C\", \n                          style=\"W\")\nplot(GC_corr)\n\n\n\n\n\nprint(GC_corr)\n\nSpatial correlogram for hunan$GDPPC \nmethod: Geary's C\n        estimate expectation  variance standard deviate Pr(I) two sided    \n1 (88) 0.6907223   1.0000000 0.0073364          -3.6108       0.0003052 ***\n2 (88) 0.7630197   1.0000000 0.0049126          -3.3811       0.0007220 ***\n3 (88) 0.9397299   1.0000000 0.0049005          -0.8610       0.3892612    \n4 (88) 1.0098462   1.0000000 0.0039631           0.1564       0.8757128    \n5 (88) 1.2008204   1.0000000 0.0035568           3.3673       0.0007592 ***\n6 (88) 1.0773386   1.0000000 0.0058042           1.0151       0.3100407    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex07/Hands-On_Ex07_2.html#computing-local-morans-i",
    "href": "Hands-On_Ex/Hands-On_Ex07/Hands-On_Ex07_2.html#computing-local-morans-i",
    "title": "Hands-On Exercise 7 (Part 2): Global Measures of Spatial Autocorrelation",
    "section": "Computing local Moran’s I",
    "text": "Computing local Moran’s I\n\nfips <- order(hunan$County)\nlocalMI <- localmoran(hunan$GDPPC, rswm_q)\nhead(localMI)\n\n            Ii          E.Ii       Var.Ii        Z.Ii Pr(z != E(Ii))\n1 -0.001468468 -2.815006e-05 4.723841e-04 -0.06626904      0.9471636\n2  0.025878173 -6.061953e-04 1.016664e-02  0.26266425      0.7928094\n3 -0.011987646 -5.366648e-03 1.133362e-01 -0.01966705      0.9843090\n4  0.001022468 -2.404783e-07 5.105969e-06  0.45259801      0.6508382\n5  0.014814881 -6.829362e-05 1.449949e-03  0.39085814      0.6959021\n6 -0.038793829 -3.860263e-04 6.475559e-03 -0.47728835      0.6331568\n\n\n\nprintCoefmat(data.frame(\n  localMI[fips,], \n  row.names=hunan$County[fips]),\n  check.names=FALSE)\n\n                       Ii        E.Ii      Var.Ii        Z.Ii Pr.z....E.Ii..\nAnhua         -2.2493e-02 -5.0048e-03  5.8235e-02 -7.2467e-02         0.9422\nAnren         -3.9932e-01 -7.0111e-03  7.0348e-02 -1.4791e+00         0.1391\nAnxiang       -1.4685e-03 -2.8150e-05  4.7238e-04 -6.6269e-02         0.9472\nBaojing        3.4737e-01 -5.0089e-03  8.3636e-02  1.2185e+00         0.2230\nChaling        2.0559e-02 -9.6812e-04  2.7711e-02  1.2932e-01         0.8971\nChangning     -2.9868e-05 -9.0010e-09  1.5105e-07 -7.6828e-02         0.9388\nChangsha       4.9022e+00 -2.1348e-01  2.3194e+00  3.3590e+00         0.0008\nChengbu        7.3725e-01 -1.0534e-02  2.2132e-01  1.5895e+00         0.1119\nChenxi         1.4544e-01 -2.8156e-03  4.7116e-02  6.8299e-01         0.4946\nCili           7.3176e-02 -1.6747e-03  4.7902e-02  3.4200e-01         0.7324\nDao            2.1420e-01 -2.0824e-03  4.4123e-02  1.0297e+00         0.3032\nDongan         1.5210e-01 -6.3485e-04  1.3471e-02  1.3159e+00         0.1882\nDongkou        5.2918e-01 -6.4461e-03  1.0748e-01  1.6338e+00         0.1023\nFenghuang      1.8013e-01 -6.2832e-03  1.3257e-01  5.1198e-01         0.6087\nGuidong       -5.9160e-01 -1.3086e-02  3.7003e-01 -9.5104e-01         0.3416\nGuiyang        1.8240e-01 -3.6908e-03  3.2610e-02  1.0305e+00         0.3028\nGuzhang        2.8466e-01 -8.5054e-03  1.4152e-01  7.7931e-01         0.4358\nHanshou        2.5878e-02 -6.0620e-04  1.0167e-02  2.6266e-01         0.7928\nHengdong       9.9964e-03 -4.9063e-04  6.7742e-03  1.2742e-01         0.8986\nHengnan        2.8064e-02 -3.2160e-04  3.7597e-03  4.6294e-01         0.6434\nHengshan      -5.8201e-03 -3.0437e-05  5.1076e-04 -2.5618e-01         0.7978\nHengyang       6.2997e-02 -1.3046e-03  2.1865e-02  4.3486e-01         0.6637\nHongjiang      1.8790e-01 -2.3019e-03  3.1725e-02  1.0678e+00         0.2856\nHuarong       -1.5389e-02 -1.8667e-03  8.1030e-02 -4.7503e-02         0.9621\nHuayuan        8.3772e-02 -8.5569e-04  2.4495e-02  5.4072e-01         0.5887\nHuitong        2.5997e-01 -5.2447e-03  1.1077e-01  7.9685e-01         0.4255\nJiahe         -1.2431e-01 -3.0550e-03  5.1111e-02 -5.3633e-01         0.5917\nJianghua       2.8651e-01 -3.8280e-03  8.0968e-02  1.0204e+00         0.3076\nJiangyong      2.4337e-01 -2.7082e-03  1.1746e-01  7.1800e-01         0.4728\nJingzhou       1.8270e-01 -8.5106e-04  2.4363e-02  1.1759e+00         0.2396\nJinshi        -1.1988e-02 -5.3666e-03  1.1334e-01 -1.9667e-02         0.9843\nJishou        -2.8680e-01 -2.6305e-03  4.4028e-02 -1.3543e+00         0.1756\nLanshan        6.3334e-02 -9.6365e-04  2.0441e-02  4.4972e-01         0.6529\nLeiyang        1.1581e-02 -1.4948e-04  2.5082e-03  2.3422e-01         0.8148\nLengshuijiang -1.7903e+00 -8.2129e-02  2.1598e+00 -1.1623e+00         0.2451\nLi             1.0225e-03 -2.4048e-07  5.1060e-06  4.5260e-01         0.6508\nLianyuan      -1.4672e-01 -1.8983e-03  1.9145e-02 -1.0467e+00         0.2952\nLiling         1.3774e+00 -1.5097e-02  4.2601e-01  2.1335e+00         0.0329\nLinli          1.4815e-02 -6.8294e-05  1.4499e-03  3.9086e-01         0.6959\nLinwu         -2.4621e-03 -9.0703e-06  1.9258e-04 -1.7676e-01         0.8597\nLinxiang       6.5904e-02 -2.9028e-03  2.5470e-01  1.3634e-01         0.8916\nLiuyang        3.3688e+00 -7.7502e-02  1.5180e+00  2.7972e+00         0.0052\nLonghui        8.0801e-01 -1.1377e-02  1.5538e-01  2.0787e+00         0.0376\nLongshan       7.5663e-01 -1.1100e-02  3.1449e-01  1.3690e+00         0.1710\nLuxi           1.8177e-01 -2.4855e-03  3.4249e-02  9.9561e-01         0.3194\nMayang         2.1852e-01 -5.8773e-03  9.8049e-02  7.1663e-01         0.4736\nMiluo          1.8704e+00 -1.6927e-02  2.7925e-01  3.5715e+00         0.0004\nNan           -9.5789e-03 -4.9497e-04  6.8341e-03 -1.0988e-01         0.9125\nNingxiang      1.5607e+00 -7.3878e-02  8.0012e-01  1.8274e+00         0.0676\nNingyuan       2.0910e-01 -7.0884e-03  8.2306e-02  7.5356e-01         0.4511\nPingjiang     -9.8964e-01 -2.6457e-03  5.6027e-02 -4.1698e+00         0.0000\nQidong         1.1806e-01 -2.1207e-03  2.4747e-02  7.6396e-01         0.4449\nQiyang         6.1966e-02 -7.3374e-04  8.5743e-03  6.7712e-01         0.4983\nRucheng       -3.6992e-01 -8.8999e-03  2.5272e-01 -7.1814e-01         0.4727\nSangzhi        2.5053e-01 -4.9470e-03  6.8000e-02  9.7972e-01         0.3272\nShaodong      -3.2659e-02 -3.6592e-05  5.0546e-04 -1.4510e+00         0.1468\nShaoshan       2.1223e+00 -5.0227e-02  1.3668e+00  1.8583e+00         0.0631\nShaoyang       5.9499e-01 -1.1253e-02  1.3012e-01  1.6807e+00         0.0928\nShimen        -3.8794e-02 -3.8603e-04  6.4756e-03 -4.7729e-01         0.6332\nShuangfeng     9.2835e-03 -2.2867e-03  3.1516e-02  6.5174e-02         0.9480\nShuangpai      8.0591e-02 -3.1366e-04  8.9838e-03  8.5358e-01         0.3933\nSuining        3.7585e-01 -3.5933e-03  4.1870e-02  1.8544e+00         0.0637\nTaojiang      -2.5394e-01 -1.2395e-03  1.4477e-02 -2.1002e+00         0.0357\nTaoyuan        1.4729e-02 -1.2039e-04  8.5103e-04  5.0903e-01         0.6107\nTongdao        4.6482e-01 -6.9870e-03  1.9879e-01  1.0582e+00         0.2900\nWangcheng      4.4220e+00 -1.1067e-01  1.3596e+00  3.8873e+00         0.0001\nWugang         7.1003e-01 -7.8144e-03  1.0710e-01  2.1935e+00         0.0283\nXiangtan       2.4530e-01 -3.6457e-04  3.2319e-03  4.3213e+00         0.0000\nXiangxiang     2.6271e-01 -1.2703e-03  2.1290e-02  1.8092e+00         0.0704\nXiangyin       5.4525e-01 -4.7442e-03  7.9236e-02  1.9539e+00         0.0507\nXinhua         1.1810e-01 -6.2649e-03  8.6001e-02  4.2409e-01         0.6715\nXinhuang       1.5725e-01 -4.1820e-03  3.6648e-01  2.6667e-01         0.7897\nXinning        6.8928e-01 -9.6674e-03  2.0328e-01  1.5502e+00         0.1211\nXinshao        5.7578e-02 -8.5932e-03  1.1769e-01  1.9289e-01         0.8470\nXintian       -7.4050e-03 -5.1493e-03  1.0877e-01 -6.8395e-03         0.9945\nXupu           3.2406e-01 -5.7468e-03  5.7735e-02  1.3726e+00         0.1699\nYanling       -6.9021e-02 -5.9211e-04  9.9306e-03 -6.8667e-01         0.4923\nYizhang       -2.6844e-01 -2.2463e-03  4.7588e-02 -1.2202e+00         0.2224\nYongshun       6.3064e-01 -1.1350e-02  1.8830e-01  1.4795e+00         0.1390\nYongxing       4.3411e-01 -9.0735e-03  1.5088e-01  1.1409e+00         0.2539\nYou            7.8750e-02 -7.2728e-03  1.2116e-01  2.4714e-01         0.8048\nYuanjiang      2.0004e-04 -1.7760e-04  2.9798e-03  6.9181e-03         0.9945\nYuanling       8.7298e-03 -2.2981e-06  2.3221e-05  1.8121e+00         0.0700\nYueyang        4.1189e-02 -1.9768e-04  2.3113e-03  8.6085e-01         0.3893\nZhijiang       1.0476e-01 -7.8123e-04  1.3100e-02  9.2214e-01         0.3565\nZhongfang     -2.2685e-01 -2.1455e-03  3.5927e-02 -1.1855e+00         0.2358\nZhuzhou        3.2864e-01 -5.2432e-04  7.2391e-03  3.8688e+00         0.0001\nZixing        -7.6849e-01 -8.8210e-02  9.4057e-01 -7.0144e-01         0.4830\n\n\n\nMapping the local Moran’s I\n\nhunan.localMI <- cbind(hunan,localMI) %>%\n  rename(Pr.Ii = Pr.z....E.Ii..)\n\n\n\nMapping local Moran’s I values\n\ntm_shape(hunan.localMI) +\n  tm_fill(col = \"Ii\", \n          style = \"pretty\",\n          palette = \"RdBu\",\n          title = \"local moran statistics\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\nMapping local Moran’s I p-values\n\ntm_shape(hunan.localMI) +\n  tm_fill(col = \"Pr.Ii\", \n          breaks=c(-Inf, 0.001, 0.01, 0.05, 0.1, Inf),\n          palette=\"-Blues\", \n          title = \"local Moran's I p-values\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\nMapping both local Moran’s I values and p-values\n\nlocalMI.map <- tm_shape(hunan.localMI) +\n  tm_fill(col = \"Ii\", \n          style = \"pretty\", \n          title = \"local moran statistics\") +\n  tm_borders(alpha = 0.5)\n\npvalue.map <- tm_shape(hunan.localMI) +\n  tm_fill(col = \"Pr.Ii\", \n          breaks=c(-Inf, 0.001, 0.01, 0.05, 0.1, Inf),\n          palette=\"-Blues\", \n          title = \"local Moran's I p-values\") +\n  tm_borders(alpha = 0.5)\n\ntmap_arrange(localMI.map, pvalue.map, asp=1, ncol=2)"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex07/Hands-On_Ex07_2.html#plotting-moran-scatterplot",
    "href": "Hands-On_Ex/Hands-On_Ex07/Hands-On_Ex07_2.html#plotting-moran-scatterplot",
    "title": "Hands-On Exercise 7 (Part 2): Global Measures of Spatial Autocorrelation",
    "section": "Plotting Moran scatterplot",
    "text": "Plotting Moran scatterplot\n\nnci <- moran.plot(hunan$GDPPC, rswm_q,\n                  labels=as.character(hunan$County), \n                  xlab=\"GDPPC 2012\", \n                  ylab=\"Spatially Lag GDPPC 2012\")"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex07/Hands-On_Ex07_2.html#plotting-moran-scatterplot-with-standardised-variable",
    "href": "Hands-On_Ex/Hands-On_Ex07/Hands-On_Ex07_2.html#plotting-moran-scatterplot-with-standardised-variable",
    "title": "Hands-On Exercise 7 (Part 2): Global Measures of Spatial Autocorrelation",
    "section": "Plotting Moran scatterplot with standardised variable",
    "text": "Plotting Moran scatterplot with standardised variable\n\nhunan$Z.GDPPC <- scale(hunan$GDPPC) %>% \n  as.vector \n\n\nnci2 <- moran.plot(hunan$Z.GDPPC, rswm_q,\n                   labels=as.character(hunan$County),\n                   xlab=\"z-GDPPC 2012\", \n                   ylab=\"Spatially Lag z-GDPPC 2012\")"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex07/Hands-On_Ex07_2.html#preparing-lisa-map-classes",
    "href": "Hands-On_Ex/Hands-On_Ex07/Hands-On_Ex07_2.html#preparing-lisa-map-classes",
    "title": "Hands-On Exercise 7 (Part 2): Global Measures of Spatial Autocorrelation",
    "section": "Preparing LISA map classes",
    "text": "Preparing LISA map classes\n\nquadrant <- vector(mode=\"numeric\",length=nrow(localMI))\n\n\nhunan$lag_GDPPC <- lag.listw(rswm_q, hunan$GDPPC)\nDV <- hunan$lag_GDPPC - mean(hunan$lag_GDPPC)     \n\n\nLM_I <- localMI[,1] - mean(localMI[,1])    \n\n\nsignif <- 0.05       \n\n\nquadrant[DV <0 & LM_I>0] <- 1\nquadrant[DV >0 & LM_I<0] <- 2\nquadrant[DV <0 & LM_I<0] <- 3  \nquadrant[DV >0 & LM_I>0] <- 4      \n\n\nquadrant[localMI[,5]>signif] <- 0\n\n\nquadrant <- vector(mode=\"numeric\",length=nrow(localMI))\nhunan$lag_GDPPC <- lag.listw(rswm_q, hunan$GDPPC)\nDV <- hunan$lag_GDPPC - mean(hunan$lag_GDPPC)     \nLM_I <- localMI[,1]   \nsignif <- 0.05       \nquadrant[DV <0 & LM_I>0] <- 1\nquadrant[DV >0 & LM_I<0] <- 2\nquadrant[DV <0 & LM_I<0] <- 3  \nquadrant[DV >0 & LM_I>0] <- 4    \nquadrant[localMI[,5]>signif] <- 0"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex07/Hands-On_Ex07_2.html#plotting-lisa-map",
    "href": "Hands-On_Ex/Hands-On_Ex07/Hands-On_Ex07_2.html#plotting-lisa-map",
    "title": "Hands-On Exercise 7 (Part 2): Global Measures of Spatial Autocorrelation",
    "section": "Plotting LISA map",
    "text": "Plotting LISA map\n\nhunan.localMI$quadrant <- quadrant\ncolors <- c(\"#ffffff\", \"#2c7bb6\", \"#abd9e9\", \"#fdae61\", \"#d7191c\")\nclusters <- c(\"insignificant\", \"low-low\", \"low-high\", \"high-low\", \"high-high\")\n\ntm_shape(hunan.localMI) +\n  tm_fill(col = \"quadrant\", \n          style = \"cat\", \n          palette = colors[c(sort(unique(quadrant)))+1], \n          labels = clusters[c(sort(unique(quadrant)))+1],\n          popup.vars = c(\"\")) +\n  tm_view(set.zoom.limits = c(11,17)) +\n  tm_borders(alpha=0.5)\n\n\n\n\n\ngdppc <- qtm(hunan, \"GDPPC\")\n\nhunan.localMI$quadrant <- quadrant\ncolors <- c(\"#ffffff\", \"#2c7bb6\", \"#abd9e9\", \"#fdae61\", \"#d7191c\")\nclusters <- c(\"insignificant\", \"low-low\", \"low-high\", \"high-low\", \"high-high\")\n\nLISAmap <- tm_shape(hunan.localMI) +\n  tm_fill(col = \"quadrant\", \n          style = \"cat\", \n          palette = colors[c(sort(unique(quadrant)))+1], \n          labels = clusters[c(sort(unique(quadrant)))+1],\n          popup.vars = c(\"\")) +\n  tm_view(set.zoom.limits = c(11,17)) +\n  tm_borders(alpha=0.5)\n\ntmap_arrange(gdppc, LISAmap, \n             asp=1, ncol=2)"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex07/Hands-On_Ex07_2.html#getis-and-ords-g-statistics",
    "href": "Hands-On_Ex/Hands-On_Ex07/Hands-On_Ex07_2.html#getis-and-ords-g-statistics",
    "title": "Hands-On Exercise 7 (Part 2): Global Measures of Spatial Autocorrelation",
    "section": "Getis and Ord’s G-Statistics",
    "text": "Getis and Ord’s G-Statistics\nThe analysis consists of three steps:\n\nDeriving spatial weight matrix\nComputing Gi statistics\nMapping Gi statistics"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex07/Hands-On_Ex07_2.html#deriving-distance-based-weight-matrix",
    "href": "Hands-On_Ex/Hands-On_Ex07/Hands-On_Ex07_2.html#deriving-distance-based-weight-matrix",
    "title": "Hands-On Exercise 7 (Part 2): Global Measures of Spatial Autocorrelation",
    "section": "Deriving distance-based weight matrix",
    "text": "Deriving distance-based weight matrix\n\nDeriving the centroid\n\nlongitude <- map_dbl(hunan$geometry, ~st_centroid(.x)[[1]])\n\n\nlatitude <- map_dbl(hunan$geometry, ~st_centroid(.x)[[2]])\n\n\ncoords <- cbind(longitude, latitude)\n\n\n\nDetermine the cut-off distance\n\n#coords <- coordinates(hunan)\nk1 <- knn2nb(knearneigh(coords))\nk1dists <- unlist(nbdists(k1, coords, longlat = TRUE))\nsummary(k1dists)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  24.79   32.57   38.01   39.07   44.52   61.79 \n\n\n\n\nComputing fixed distance weight matrix\n\nwm_d62 <- dnearneigh(coords, 0, 62, longlat = TRUE)\nwm_d62\n\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 324 \nPercentage nonzero weights: 4.183884 \nAverage number of links: 3.681818 \n\n\n\nwm62_lw <- nb2listw(wm_d62, style = 'B')\nsummary(wm62_lw)\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 324 \nPercentage nonzero weights: 4.183884 \nAverage number of links: 3.681818 \nLink number distribution:\n\n 1  2  3  4  5  6 \n 6 15 14 26 20  7 \n6 least connected regions:\n6 15 30 32 56 65 with 1 link\n7 most connected regions:\n21 28 35 45 50 52 82 with 6 links\n\nWeights style: B \nWeights constants summary:\n   n   nn  S0  S1   S2\nB 88 7744 324 648 5440"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex07/Hands-On_Ex07_2.html#computing-adaptive-distance-weight-matrix",
    "href": "Hands-On_Ex/Hands-On_Ex07/Hands-On_Ex07_2.html#computing-adaptive-distance-weight-matrix",
    "title": "Hands-On Exercise 7 (Part 2): Global Measures of Spatial Autocorrelation",
    "section": "Computing adaptive distance weight matrix",
    "text": "Computing adaptive distance weight matrix\n\nknn <- knn2nb(knearneigh(coords, k=8))\nknn\n\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 704 \nPercentage nonzero weights: 9.090909 \nAverage number of links: 8 \nNon-symmetric neighbours list\n\n\n\nknn_lw <- nb2listw(knn, style = 'B')\nsummary(knn_lw)\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 704 \nPercentage nonzero weights: 9.090909 \nAverage number of links: 8 \nNon-symmetric neighbours list\nLink number distribution:\n\n 8 \n88 \n88 least connected regions:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 with 8 links\n88 most connected regions:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 with 8 links\n\nWeights style: B \nWeights constants summary:\n   n   nn  S0   S1    S2\nB 88 7744 704 1300 23014"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex07/Hands-On_Ex07_2.html#gi-statistics-using-fixed-distance",
    "href": "Hands-On_Ex/Hands-On_Ex07/Hands-On_Ex07_2.html#gi-statistics-using-fixed-distance",
    "title": "Hands-On Exercise 7 (Part 2): Global Measures of Spatial Autocorrelation",
    "section": "Gi statistics using fixed distance",
    "text": "Gi statistics using fixed distance\n\nfips <- order(hunan$County)\ngi.fixed <- localG(hunan$GDPPC, wm62_lw)\ngi.fixed\n\n [1]  0.436075843 -0.265505650 -0.073033665  0.413017033  0.273070579\n [6] -0.377510776  2.863898821  2.794350420  5.216125401  0.228236603\n[11]  0.951035346 -0.536334231  0.176761556  1.195564020 -0.033020610\n[16]  1.378081093 -0.585756761 -0.419680565  0.258805141  0.012056111\n[21] -0.145716531 -0.027158687 -0.318615290 -0.748946051 -0.961700582\n[26] -0.796851342 -1.033949773 -0.460979158 -0.885240161 -0.266671512\n[31] -0.886168613 -0.855476971 -0.922143185 -1.162328599  0.735582222\n[36] -0.003358489 -0.967459309 -1.259299080 -1.452256513 -1.540671121\n[41] -1.395011407 -1.681505286 -1.314110709 -0.767944457 -0.192889342\n[46]  2.720804542  1.809191360 -1.218469473 -0.511984469 -0.834546363\n[51] -0.908179070 -1.541081516 -1.192199867 -1.075080164 -1.631075961\n[56] -0.743472246  0.418842387  0.832943753 -0.710289083 -0.449718820\n[61] -0.493238743 -1.083386776  0.042979051  0.008596093  0.136337469\n[66]  2.203411744  2.690329952  4.453703219 -0.340842743 -0.129318589\n[71]  0.737806634 -1.246912658  0.666667559  1.088613505 -0.985792573\n[76]  1.233609606 -0.487196415  1.626174042 -1.060416797  0.425361422\n[81] -0.837897118 -0.314565243  0.371456331  4.424392623 -0.109566928\n[86]  1.364597995 -1.029658605 -0.718000620\nattr(,\"cluster\")\n [1] Low  Low  High High High High High High High Low  Low  High Low  Low  Low \n[16] High High High High Low  High High Low  Low  High Low  Low  Low  Low  Low \n[31] Low  Low  Low  High Low  Low  Low  Low  Low  Low  High Low  Low  Low  Low \n[46] High High Low  Low  Low  Low  High Low  Low  Low  Low  Low  High Low  Low \n[61] Low  Low  Low  High High High Low  High Low  Low  High Low  High High Low \n[76] High Low  Low  Low  Low  Low  Low  High High Low  High Low  Low \nLevels: Low High\nattr(,\"gstari\")\n[1] FALSE\nattr(,\"call\")\nlocalG(x = hunan$GDPPC, listw = wm62_lw)\nattr(,\"class\")\n[1] \"localG\"\n\n\n\nhunan.gi <- cbind(hunan, as.matrix(gi.fixed)) %>%\n  rename(gstat_fixed = as.matrix.gi.fixed.)"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex07/Hands-On_Ex07_2.html#mapping-gi-values-with-fixed-distance-weights",
    "href": "Hands-On_Ex/Hands-On_Ex07/Hands-On_Ex07_2.html#mapping-gi-values-with-fixed-distance-weights",
    "title": "Hands-On Exercise 7 (Part 2): Global Measures of Spatial Autocorrelation",
    "section": "Mapping Gi values with fixed distance weights",
    "text": "Mapping Gi values with fixed distance weights\n\ngdppc <- qtm(hunan, \"GDPPC\")\n\nGimap <-tm_shape(hunan.gi) +\n  tm_fill(col = \"gstat_fixed\", \n          style = \"pretty\",\n          palette=\"-RdBu\",\n          title = \"local Gi\") +\n  tm_borders(alpha = 0.5)\n\ntmap_arrange(gdppc, Gimap, asp=1, ncol=2)"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex07/Hands-On_Ex07_2.html#gi-statistics-using-adaptive-distance",
    "href": "Hands-On_Ex/Hands-On_Ex07/Hands-On_Ex07_2.html#gi-statistics-using-adaptive-distance",
    "title": "Hands-On Exercise 7 (Part 2): Global Measures of Spatial Autocorrelation",
    "section": "Gi statistics using adaptive distance",
    "text": "Gi statistics using adaptive distance\n\nfips <- order(hunan$County)\ngi.adaptive <- localG(hunan$GDPPC, knn_lw)\nhunan.gi <- cbind(hunan, as.matrix(gi.adaptive)) %>%\n  rename(gstat_adaptive = as.matrix.gi.adaptive.)"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex07/Hands-On_Ex07_2.html#mapping-gi-values-with-adaptive-distance-weights",
    "href": "Hands-On_Ex/Hands-On_Ex07/Hands-On_Ex07_2.html#mapping-gi-values-with-adaptive-distance-weights",
    "title": "Hands-On Exercise 7 (Part 2): Global Measures of Spatial Autocorrelation",
    "section": "Mapping Gi values with adaptive distance weights",
    "text": "Mapping Gi values with adaptive distance weights\n\ngdppc<- qtm(hunan, \"GDPPC\")\n\nGimap <- tm_shape(hunan.gi) + \n  tm_fill(col = \"gstat_adaptive\", \n          style = \"pretty\", \n          palette=\"-RdBu\", \n          title = \"local Gi\") + \n  tm_borders(alpha = 0.5)\n\ntmap_arrange(gdppc, \n             Gimap, \n             asp=1, \n             ncol=2)"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex08/Hands-On_Ex08.html",
    "href": "Hands-On_Ex/Hands-On_Ex08/Hands-On_Ex08.html",
    "title": "Hands-On Exercise 8: Calibrating Hedonic Pricing Model for Private Highrise Property with GWR Method",
    "section": "",
    "text": "pacman::p_load(olsrr, ggpubr, sf, spdep, GWmodel, tmap, tidyverse, gtsummary, readr, dplyr, tidyselect)\n\n\n\n\n\n\n\nmpsz = st_read(dsn = \"data/geospatial\", layer = \"MP14_SUBZONE_WEB_PL\")\n\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `C:\\Users\\la935\\Desktop\\IS415 - GAA\\IS415 - GAA (New)\\Hands-On_Ex\\Hands-On_Ex08\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n\n\n\nmpsz_svy21 <- st_transform(mpsz, 3414)\n\n\nst_crs(mpsz_svy21)\n\nCoordinate Reference System:\n  User input: EPSG:3414 \n  wkt:\nPROJCRS[\"SVY21 / Singapore TM\",\n    BASEGEOGCRS[\"SVY21\",\n        DATUM[\"SVY21\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4757]],\n    CONVERSION[\"Singapore Transverse Mercator\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"northing (N)\",north,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"easting (E)\",east,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Cadastre, engineering survey, topographic mapping.\"],\n        AREA[\"Singapore - onshore and offshore.\"],\n        BBOX[1.13,103.59,1.47,104.07]],\n    ID[\"EPSG\",3414]]\n\n\n\nst_bbox(mpsz_svy21) #view extent\n\n     xmin      ymin      xmax      ymax \n 2667.538 15748.721 56396.440 50256.334 \n\n\n\n\n\n\ncondo_resale = read_csv(\"data/aspatial/Condo_resale_2015.csv\")\n\n\nglimpse(condo_resale)\n\nRows: 1,436\nColumns: 23\n$ LATITUDE             <dbl> 1.287145, 1.328698, 1.313727, 1.308563, 1.321437,…\n$ LONGITUDE            <dbl> 103.7802, 103.8123, 103.7971, 103.8247, 103.9505,…\n$ POSTCODE             <dbl> 118635, 288420, 267833, 258380, 467169, 466472, 3…\n$ SELLING_PRICE        <dbl> 3000000, 3880000, 3325000, 4250000, 1400000, 1320…\n$ AREA_SQM             <dbl> 309, 290, 248, 127, 145, 139, 218, 141, 165, 168,…\n$ AGE                  <dbl> 30, 32, 33, 7, 28, 22, 24, 24, 27, 31, 17, 22, 6,…\n$ PROX_CBD             <dbl> 7.941259, 6.609797, 6.898000, 4.038861, 11.783402…\n$ PROX_CHILDCARE       <dbl> 0.16597932, 0.28027246, 0.42922669, 0.39473543, 0…\n$ PROX_ELDERLYCARE     <dbl> 2.5198118, 1.9333338, 0.5021395, 1.9910316, 1.121…\n$ PROX_URA_GROWTH_AREA <dbl> 6.618741, 7.505109, 6.463887, 4.906512, 6.410632,…\n$ PROX_HAWKER_MARKET   <dbl> 1.76542207, 0.54507614, 0.37789301, 1.68259969, 0…\n$ PROX_KINDERGARTEN    <dbl> 0.05835552, 0.61592412, 0.14120309, 0.38200076, 0…\n$ PROX_MRT             <dbl> 0.5607188, 0.6584461, 0.3053433, 0.6910183, 0.528…\n$ PROX_PARK            <dbl> 1.1710446, 0.1992269, 0.2779886, 0.9832843, 0.116…\n$ PROX_PRIMARY_SCH     <dbl> 1.6340256, 0.9747834, 1.4715016, 1.4546324, 0.709…\n$ PROX_TOP_PRIMARY_SCH <dbl> 3.3273195, 0.9747834, 1.4715016, 2.3006394, 0.709…\n$ PROX_SHOPPING_MALL   <dbl> 2.2102717, 2.9374279, 1.2256850, 0.3525671, 1.307…\n$ PROX_SUPERMARKET     <dbl> 0.9103958, 0.5900617, 0.4135583, 0.4162219, 0.581…\n$ PROX_BUS_STOP        <dbl> 0.10336166, 0.28673408, 0.28504777, 0.29872340, 0…\n$ NO_Of_UNITS          <dbl> 18, 20, 27, 30, 30, 31, 32, 32, 32, 32, 34, 34, 3…\n$ FAMILY_FRIENDLY      <dbl> 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0…\n$ FREEHOLD             <dbl> 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1…\n$ LEASEHOLD_99YR       <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n\n\n\nhead(condo_resale$LONGITUDE) #see the data in XCOORD column\n\n[1] 103.7802 103.8123 103.7971 103.8247 103.9505 103.9386\n\n\n\nhead(condo_resale$LATITUDE) #see the data in YCOORD column\n\n[1] 1.287145 1.328698 1.313727 1.308563 1.321437 1.314198\n\n\n\nsummary(condo_resale)\n\n    LATITUDE       LONGITUDE        POSTCODE      SELLING_PRICE     \n Min.   :1.240   Min.   :103.7   Min.   : 18965   Min.   :  540000  \n 1st Qu.:1.309   1st Qu.:103.8   1st Qu.:259849   1st Qu.: 1100000  \n Median :1.328   Median :103.8   Median :469298   Median : 1383222  \n Mean   :1.334   Mean   :103.8   Mean   :440439   Mean   : 1751211  \n 3rd Qu.:1.357   3rd Qu.:103.9   3rd Qu.:589486   3rd Qu.: 1950000  \n Max.   :1.454   Max.   :104.0   Max.   :828833   Max.   :18000000  \n    AREA_SQM          AGE           PROX_CBD       PROX_CHILDCARE    \n Min.   : 34.0   Min.   : 0.00   Min.   : 0.3869   Min.   :0.004927  \n 1st Qu.:103.0   1st Qu.: 5.00   1st Qu.: 5.5574   1st Qu.:0.174481  \n Median :121.0   Median :11.00   Median : 9.3567   Median :0.258135  \n Mean   :136.5   Mean   :12.14   Mean   : 9.3254   Mean   :0.326313  \n 3rd Qu.:156.0   3rd Qu.:18.00   3rd Qu.:12.6661   3rd Qu.:0.368293  \n Max.   :619.0   Max.   :37.00   Max.   :19.1804   Max.   :3.465726  \n PROX_ELDERLYCARE  PROX_URA_GROWTH_AREA PROX_HAWKER_MARKET PROX_KINDERGARTEN \n Min.   :0.05451   Min.   :0.2145       Min.   :0.05182    Min.   :0.004927  \n 1st Qu.:0.61254   1st Qu.:3.1643       1st Qu.:0.55245    1st Qu.:0.276345  \n Median :0.94179   Median :4.6186       Median :0.90842    Median :0.413385  \n Mean   :1.05351   Mean   :4.5981       Mean   :1.27987    Mean   :0.458903  \n 3rd Qu.:1.35122   3rd Qu.:5.7550       3rd Qu.:1.68578    3rd Qu.:0.578474  \n Max.   :3.94916   Max.   :9.1554       Max.   :5.37435    Max.   :2.229045  \n    PROX_MRT         PROX_PARK       PROX_PRIMARY_SCH  PROX_TOP_PRIMARY_SCH\n Min.   :0.05278   Min.   :0.02906   Min.   :0.07711   Min.   :0.07711     \n 1st Qu.:0.34646   1st Qu.:0.26211   1st Qu.:0.44024   1st Qu.:1.34451     \n Median :0.57430   Median :0.39926   Median :0.63505   Median :1.88213     \n Mean   :0.67316   Mean   :0.49802   Mean   :0.75471   Mean   :2.27347     \n 3rd Qu.:0.84844   3rd Qu.:0.65592   3rd Qu.:0.95104   3rd Qu.:2.90954     \n Max.   :3.48037   Max.   :2.16105   Max.   :3.92899   Max.   :6.74819     \n PROX_SHOPPING_MALL PROX_SUPERMARKET PROX_BUS_STOP       NO_Of_UNITS    \n Min.   :0.0000     Min.   :0.0000   Min.   :0.001595   Min.   :  18.0  \n 1st Qu.:0.5258     1st Qu.:0.3695   1st Qu.:0.098356   1st Qu.: 188.8  \n Median :0.9357     Median :0.5687   Median :0.151710   Median : 360.0  \n Mean   :1.0455     Mean   :0.6141   Mean   :0.193974   Mean   : 409.2  \n 3rd Qu.:1.3994     3rd Qu.:0.7862   3rd Qu.:0.220466   3rd Qu.: 590.0  \n Max.   :3.4774     Max.   :2.2441   Max.   :2.476639   Max.   :1703.0  \n FAMILY_FRIENDLY     FREEHOLD      LEASEHOLD_99YR  \n Min.   :0.0000   Min.   :0.0000   Min.   :0.0000  \n 1st Qu.:0.0000   1st Qu.:0.0000   1st Qu.:0.0000  \n Median :0.0000   Median :0.0000   Median :0.0000  \n Mean   :0.4868   Mean   :0.4227   Mean   :0.4882  \n 3rd Qu.:1.0000   3rd Qu.:1.0000   3rd Qu.:1.0000  \n Max.   :1.0000   Max.   :1.0000   Max.   :1.0000  \n\n\n\n\n\n\ncondo_resale.sf <- st_as_sf(condo_resale,\n                            coords = c(\"LONGITUDE\", \"LATITUDE\"),\n                            crs=4326) %>%\n  st_transform(crs=3414)\n\n\nhead(condo_resale.sf)\n\nSimple feature collection with 6 features and 21 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 22085.12 ymin: 29951.54 xmax: 41042.56 ymax: 34546.2\nProjected CRS: SVY21 / Singapore TM\n# A tibble: 6 × 22\n  POSTCODE SELLI…¹ AREA_…²   AGE PROX_…³ PROX_…⁴ PROX_…⁵ PROX_…⁶ PROX_…⁷ PROX_…⁸\n     <dbl>   <dbl>   <dbl> <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>\n1   118635 3000000     309    30    7.94   0.166   2.52     6.62   1.77   0.0584\n2   288420 3880000     290    32    6.61   0.280   1.93     7.51   0.545  0.616 \n3   267833 3325000     248    33    6.90   0.429   0.502    6.46   0.378  0.141 \n4   258380 4250000     127     7    4.04   0.395   1.99     4.91   1.68   0.382 \n5   467169 1400000     145    28   11.8    0.119   1.12     6.41   0.565  0.461 \n6   466472 1320000     139    22   10.3    0.125   0.789    5.09   0.781  0.0994\n# … with 12 more variables: PROX_MRT <dbl>, PROX_PARK <dbl>,\n#   PROX_PRIMARY_SCH <dbl>, PROX_TOP_PRIMARY_SCH <dbl>,\n#   PROX_SHOPPING_MALL <dbl>, PROX_SUPERMARKET <dbl>, PROX_BUS_STOP <dbl>,\n#   NO_Of_UNITS <dbl>, FAMILY_FRIENDLY <dbl>, FREEHOLD <dbl>,\n#   LEASEHOLD_99YR <dbl>, geometry <POINT [m]>, and abbreviated variable names\n#   ¹​SELLING_PRICE, ²​AREA_SQM, ³​PROX_CBD, ⁴​PROX_CHILDCARE, ⁵​PROX_ELDERLYCARE,\n#   ⁶​PROX_URA_GROWTH_AREA, ⁷​PROX_HAWKER_MARKET, ⁸​PROX_KINDERGARTEN"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex08/Hands-On_Ex08.html#eda-using-statistical-graphics",
    "href": "Hands-On_Ex/Hands-On_Ex08/Hands-On_Ex08.html#eda-using-statistical-graphics",
    "title": "Hands-On Exercise 8: Calibrating Hedonic Pricing Model for Private Highrise Property with GWR Method",
    "section": "EDA Using Statistical Graphics",
    "text": "EDA Using Statistical Graphics\n\nggplot(data=condo_resale.sf, aes(x=`SELLING_PRICE`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\n\n\n\n\ncondo_resale.sf <- condo_resale.sf %>%\n  mutate(`LOG_SELLING_PRICE` = log(SELLING_PRICE))\n\n\nggplot(data=condo_resale.sf, aes(x=`LOG_SELLING_PRICE`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex08/Hands-On_Ex08.html#multiple-histogram-plots-distribution-of-variables",
    "href": "Hands-On_Ex/Hands-On_Ex08/Hands-On_Ex08.html#multiple-histogram-plots-distribution-of-variables",
    "title": "Hands-On Exercise 8: Calibrating Hedonic Pricing Model for Private Highrise Property with GWR Method",
    "section": "Multiple Histogram Plots Distribution of Variables",
    "text": "Multiple Histogram Plots Distribution of Variables\n\nAREA_SQM <- ggplot(data=condo_resale.sf, aes(x= `AREA_SQM`)) + \n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nAGE <- ggplot(data=condo_resale.sf, aes(x= `AGE`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nPROX_CBD <- ggplot(data=condo_resale.sf, aes(x= `PROX_CBD`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nPROX_CHILDCARE <- ggplot(data=condo_resale.sf, aes(x= `PROX_CHILDCARE`)) + \n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nPROX_ELDERLYCARE <- ggplot(data=condo_resale.sf, aes(x= `PROX_ELDERLYCARE`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nPROX_URA_GROWTH_AREA <- ggplot(data=condo_resale.sf, \n                               aes(x= `PROX_URA_GROWTH_AREA`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nPROX_HAWKER_MARKET <- ggplot(data=condo_resale.sf, aes(x= `PROX_HAWKER_MARKET`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nPROX_KINDERGARTEN <- ggplot(data=condo_resale.sf, aes(x= `PROX_KINDERGARTEN`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nPROX_MRT <- ggplot(data=condo_resale.sf, aes(x= `PROX_MRT`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nPROX_PARK <- ggplot(data=condo_resale.sf, aes(x= `PROX_PARK`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nPROX_PRIMARY_SCH <- ggplot(data=condo_resale.sf, aes(x= `PROX_PRIMARY_SCH`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nPROX_TOP_PRIMARY_SCH <- ggplot(data=condo_resale.sf, \n                               aes(x= `PROX_TOP_PRIMARY_SCH`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nggpubr::ggarrange(AREA_SQM, AGE, PROX_CBD, PROX_CHILDCARE, PROX_ELDERLYCARE, \n          PROX_URA_GROWTH_AREA, PROX_HAWKER_MARKET, PROX_KINDERGARTEN, PROX_MRT,\n          PROX_PARK, PROX_PRIMARY_SCH, PROX_TOP_PRIMARY_SCH,  \n          ncol = 3, nrow = 4)"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex08/Hands-On_Ex08.html#drawing-statistical-point-map",
    "href": "Hands-On_Ex/Hands-On_Ex08/Hands-On_Ex08.html#drawing-statistical-point-map",
    "title": "Hands-On Exercise 8: Calibrating Hedonic Pricing Model for Private Highrise Property with GWR Method",
    "section": "Drawing Statistical Point Map",
    "text": "Drawing Statistical Point Map\n\ntmap_mode(\"view\")\n\n\ntmap_options(check.and.fix = TRUE)\ntm_shape(mpsz_svy21)+\n  tm_polygons() +\ntm_shape(condo_resale.sf) +  \n  tm_dots(col = \"SELLING_PRICE\",\n          alpha = 0.6,\n          style=\"quantile\") +\n  tm_view(set.zoom.limits = c(11,14))\n\n\n\n\n\n\n\ntmap_mode(\"plot\")"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex08/Hands-On_Ex08.html#simple-linear-regression-method",
    "href": "Hands-On_Ex/Hands-On_Ex08/Hands-On_Ex08.html#simple-linear-regression-method",
    "title": "Hands-On Exercise 8: Calibrating Hedonic Pricing Model for Private Highrise Property with GWR Method",
    "section": "Simple Linear Regression Method",
    "text": "Simple Linear Regression Method\n\ncondo.slr <- lm(formula=SELLING_PRICE ~ AREA_SQM, data = condo_resale.sf)\n\n\nsummary(condo.slr)\n\n\nCall:\nlm(formula = SELLING_PRICE ~ AREA_SQM, data = condo_resale.sf)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-3695815  -391764   -87517   258900 13503875 \n\nCoefficients:\n             Estimate Std. Error t value Pr(>|t|)    \n(Intercept) -258121.1    63517.2  -4.064 5.09e-05 ***\nAREA_SQM      14719.0      428.1  34.381  < 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 942700 on 1434 degrees of freedom\nMultiple R-squared:  0.4518,    Adjusted R-squared:  0.4515 \nF-statistic:  1182 on 1 and 1434 DF,  p-value: < 2.2e-16\n\n\n\nggplot(data=condo_resale.sf,  \n       aes(x=`AREA_SQM`, y=`SELLING_PRICE`)) +\n  geom_point() +\n  geom_smooth(method = lm)"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex08/Hands-On_Ex08.html#multiple-linear-regression-method",
    "href": "Hands-On_Ex/Hands-On_Ex08/Hands-On_Ex08.html#multiple-linear-regression-method",
    "title": "Hands-On Exercise 8: Calibrating Hedonic Pricing Model for Private Highrise Property with GWR Method",
    "section": "Multiple Linear Regression Method",
    "text": "Multiple Linear Regression Method\n\ncorrplot::corrplot(cor(condo_resale[, 5:23]), diag = FALSE, order = \"AOE\",\n                   t1.pos = \"td\", t1.cex = 0.5, method = \"number\", type = \"upper\")\n\n\n\n\n\ncondo.mlr <- lm(formula = SELLING_PRICE ~ AREA_SQM + AGE    + \n                  PROX_CBD + PROX_CHILDCARE + PROX_ELDERLYCARE +\n                  PROX_URA_GROWTH_AREA + PROX_HAWKER_MARKET + PROX_KINDERGARTEN + \n                  PROX_MRT  + PROX_PARK + PROX_PRIMARY_SCH + \n                  PROX_TOP_PRIMARY_SCH + PROX_SHOPPING_MALL + PROX_SUPERMARKET + \n                  PROX_BUS_STOP + NO_Of_UNITS + FAMILY_FRIENDLY + FREEHOLD, \n                data=condo_resale.sf)\nsummary(condo.mlr)\n\n\nCall:\nlm(formula = SELLING_PRICE ~ AREA_SQM + AGE + PROX_CBD + PROX_CHILDCARE + \n    PROX_ELDERLYCARE + PROX_URA_GROWTH_AREA + PROX_HAWKER_MARKET + \n    PROX_KINDERGARTEN + PROX_MRT + PROX_PARK + PROX_PRIMARY_SCH + \n    PROX_TOP_PRIMARY_SCH + PROX_SHOPPING_MALL + PROX_SUPERMARKET + \n    PROX_BUS_STOP + NO_Of_UNITS + FAMILY_FRIENDLY + FREEHOLD, \n    data = condo_resale.sf)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-3475964  -293923   -23069   241043 12260381 \n\nCoefficients:\n                       Estimate Std. Error t value Pr(>|t|)    \n(Intercept)           481728.40  121441.01   3.967 7.65e-05 ***\nAREA_SQM               12708.32     369.59  34.385  < 2e-16 ***\nAGE                   -24440.82    2763.16  -8.845  < 2e-16 ***\nPROX_CBD              -78669.78    6768.97 -11.622  < 2e-16 ***\nPROX_CHILDCARE       -351617.91  109467.25  -3.212  0.00135 ** \nPROX_ELDERLYCARE      171029.42   42110.51   4.061 5.14e-05 ***\nPROX_URA_GROWTH_AREA   38474.53   12523.57   3.072  0.00217 ** \nPROX_HAWKER_MARKET     23746.10   29299.76   0.810  0.41782    \nPROX_KINDERGARTEN     147468.99   82668.87   1.784  0.07466 .  \nPROX_MRT             -314599.68   57947.44  -5.429 6.66e-08 ***\nPROX_PARK             563280.50   66551.68   8.464  < 2e-16 ***\nPROX_PRIMARY_SCH      180186.08   65237.95   2.762  0.00582 ** \nPROX_TOP_PRIMARY_SCH    2280.04   20410.43   0.112  0.91107    \nPROX_SHOPPING_MALL   -206604.06   42840.60  -4.823 1.57e-06 ***\nPROX_SUPERMARKET      -44991.80   77082.64  -0.584  0.55953    \nPROX_BUS_STOP         683121.35  138353.28   4.938 8.85e-07 ***\nNO_Of_UNITS             -231.18      89.03  -2.597  0.00951 ** \nFAMILY_FRIENDLY       140340.77   47020.55   2.985  0.00289 ** \nFREEHOLD              359913.01   49220.22   7.312 4.38e-13 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 755800 on 1417 degrees of freedom\nMultiple R-squared:  0.6518,    Adjusted R-squared:  0.6474 \nF-statistic: 147.4 on 18 and 1417 DF,  p-value: < 2.2e-16\n\n\n\ncondo.mlr1 <- lm(formula = SELLING_PRICE ~ AREA_SQM + AGE + \n                   PROX_CBD + PROX_CHILDCARE + PROX_ELDERLYCARE +\n                   PROX_URA_GROWTH_AREA + PROX_MRT  + PROX_PARK + \n                   PROX_PRIMARY_SCH + PROX_SHOPPING_MALL    + PROX_BUS_STOP + \n                   NO_Of_UNITS + FAMILY_FRIENDLY + FREEHOLD,\n                 data=condo_resale.sf)\nols_regress(condo.mlr1)\n\n                             Model Summary                               \n------------------------------------------------------------------------\nR                       0.807       RMSE                     755957.289 \nR-Squared               0.651       Coef. Var                    43.168 \nAdj. R-Squared          0.647       MSE                571471422208.591 \nPred R-Squared          0.638       MAE                      414819.628 \n------------------------------------------------------------------------\n RMSE: Root Mean Square Error \n MSE: Mean Square Error \n MAE: Mean Absolute Error \n\n                                     ANOVA                                       \n--------------------------------------------------------------------------------\n                    Sum of                                                      \n                   Squares          DF         Mean Square       F         Sig. \n--------------------------------------------------------------------------------\nRegression    1.512586e+15          14        1.080418e+14    189.059    0.0000 \nResidual      8.120609e+14        1421    571471422208.591                      \nTotal         2.324647e+15        1435                                          \n--------------------------------------------------------------------------------\n\n                                               Parameter Estimates                                                \n-----------------------------------------------------------------------------------------------------------------\n               model           Beta    Std. Error    Std. Beta       t        Sig           lower          upper \n-----------------------------------------------------------------------------------------------------------------\n         (Intercept)     527633.222    108183.223                   4.877    0.000     315417.244     739849.200 \n            AREA_SQM      12777.523       367.479        0.584     34.771    0.000      12056.663      13498.382 \n                 AGE     -24687.739      2754.845       -0.167     -8.962    0.000     -30091.739     -19283.740 \n            PROX_CBD     -77131.323      5763.125       -0.263    -13.384    0.000     -88436.469     -65826.176 \n      PROX_CHILDCARE    -318472.751    107959.512       -0.084     -2.950    0.003    -530249.889    -106695.613 \n    PROX_ELDERLYCARE     185575.623     39901.864        0.090      4.651    0.000     107302.737     263848.510 \nPROX_URA_GROWTH_AREA      39163.254     11754.829        0.060      3.332    0.001      16104.571      62221.936 \n            PROX_MRT    -294745.107     56916.367       -0.112     -5.179    0.000    -406394.234    -183095.980 \n           PROX_PARK     570504.807     65507.029        0.150      8.709    0.000     442003.938     699005.677 \n    PROX_PRIMARY_SCH     159856.136     60234.599        0.062      2.654    0.008      41697.849     278014.424 \n  PROX_SHOPPING_MALL    -220947.251     36561.832       -0.115     -6.043    0.000    -292668.213    -149226.288 \n       PROX_BUS_STOP     682482.221    134513.243        0.134      5.074    0.000     418616.359     946348.082 \n         NO_Of_UNITS       -245.480        87.947       -0.053     -2.791    0.005       -418.000        -72.961 \n     FAMILY_FRIENDLY     146307.576     46893.021        0.057      3.120    0.002      54320.593     238294.560 \n            FREEHOLD     350599.812     48506.485        0.136      7.228    0.000     255447.802     445751.821 \n-----------------------------------------------------------------------------------------------------------------\n\n\n\ntbl_regression(condo.mlr1, intercept = TRUE)\n\n\n\n\n\n  \n  \n    \n      Characteristic\n      Beta\n      95% CI1\n      p-value\n    \n  \n  \n    (Intercept)\n527,633\n315,417, 739,849\n<0.001\n    AREA_SQM\n12,778\n12,057, 13,498\n<0.001\n    AGE\n-24,688\n-30,092, -19,284\n<0.001\n    PROX_CBD\n-77,131\n-88,436, -65,826\n<0.001\n    PROX_CHILDCARE\n-318,473\n-530,250, -106,696\n0.003\n    PROX_ELDERLYCARE\n185,576\n107,303, 263,849\n<0.001\n    PROX_URA_GROWTH_AREA\n39,163\n16,105, 62,222\n<0.001\n    PROX_MRT\n-294,745\n-406,394, -183,096\n<0.001\n    PROX_PARK\n570,505\n442,004, 699,006\n<0.001\n    PROX_PRIMARY_SCH\n159,856\n41,698, 278,014\n0.008\n    PROX_SHOPPING_MALL\n-220,947\n-292,668, -149,226\n<0.001\n    PROX_BUS_STOP\n682,482\n418,616, 946,348\n<0.001\n    NO_Of_UNITS\n-245\n-418, -73\n0.005\n    FAMILY_FRIENDLY\n146,308\n54,321, 238,295\n0.002\n    FREEHOLD\n350,600\n255,448, 445,752\n<0.001\n  \n  \n  \n    \n      1 CI = Confidence Interval\n    \n  \n\n\n\n\n\ntbl_regression(condo.mlr1, \n               intercept = TRUE) %>% \n  add_glance_source_note(\n    label = list(sigma ~ \"\\U03C3\"),\n    include = c(r.squared, adj.r.squared, \n                AIC, statistic,\n                p.value, sigma))\n\n\n\n\n\n  \n  \n    \n      Characteristic\n      Beta\n      95% CI1\n      p-value\n    \n  \n  \n    (Intercept)\n527,633\n315,417, 739,849\n<0.001\n    AREA_SQM\n12,778\n12,057, 13,498\n<0.001\n    AGE\n-24,688\n-30,092, -19,284\n<0.001\n    PROX_CBD\n-77,131\n-88,436, -65,826\n<0.001\n    PROX_CHILDCARE\n-318,473\n-530,250, -106,696\n0.003\n    PROX_ELDERLYCARE\n185,576\n107,303, 263,849\n<0.001\n    PROX_URA_GROWTH_AREA\n39,163\n16,105, 62,222\n<0.001\n    PROX_MRT\n-294,745\n-406,394, -183,096\n<0.001\n    PROX_PARK\n570,505\n442,004, 699,006\n<0.001\n    PROX_PRIMARY_SCH\n159,856\n41,698, 278,014\n0.008\n    PROX_SHOPPING_MALL\n-220,947\n-292,668, -149,226\n<0.001\n    PROX_BUS_STOP\n682,482\n418,616, 946,348\n<0.001\n    NO_Of_UNITS\n-245\n-418, -73\n0.005\n    FAMILY_FRIENDLY\n146,308\n54,321, 238,295\n0.002\n    FREEHOLD\n350,600\n255,448, 445,752\n<0.001\n  \n  \n    \n      R² = 0.651; Adjusted R² = 0.647; AIC = 42,967; Statistic = 189; p-value = <0.001; σ = 755,957\n    \n  \n  \n    \n      1 CI = Confidence Interval\n    \n  \n\n\n\n\n\nols_vif_tol(condo.mlr1)\n\n              Variables Tolerance      VIF\n1              AREA_SQM 0.8728554 1.145665\n2                   AGE 0.7071275 1.414172\n3              PROX_CBD 0.6356147 1.573280\n4        PROX_CHILDCARE 0.3066019 3.261559\n5      PROX_ELDERLYCARE 0.6598479 1.515501\n6  PROX_URA_GROWTH_AREA 0.7510311 1.331503\n7              PROX_MRT 0.5236090 1.909822\n8             PROX_PARK 0.8279261 1.207837\n9      PROX_PRIMARY_SCH 0.4524628 2.210126\n10   PROX_SHOPPING_MALL 0.6738795 1.483945\n11        PROX_BUS_STOP 0.3514118 2.845664\n12          NO_Of_UNITS 0.6901036 1.449058\n13      FAMILY_FRIENDLY 0.7244157 1.380423\n14             FREEHOLD 0.6931163 1.442759\n\n\n\nols_plot_resid_fit(condo.mlr1)\n\n\n\n\n\nols_plot_resid_hist(condo.mlr1)\n\n\n\n\n\nols_test_normality(condo.mlr1)\n\n-----------------------------------------------\n       Test             Statistic       pvalue  \n-----------------------------------------------\nShapiro-Wilk              0.6856         0.0000 \nKolmogorov-Smirnov        0.1366         0.0000 \nCramer-von Mises         121.0768        0.0000 \nAnderson-Darling         67.9551         0.0000 \n-----------------------------------------------\n\n\n\nmlr.output <- as.data.frame(condo.mlr1$residuals)\n\n\ncondo_resale.res.sf <- cbind(condo_resale.sf, \n                        condo.mlr1$residuals) %>%\nrename(`MLR_RES` = `condo.mlr1.residuals`)\n\n\ncondo_resale.sp <- as_Spatial(condo_resale.res.sf)\ncondo_resale.sp\n\nclass       : SpatialPointsDataFrame \nfeatures    : 1436 \nextent      : 14940.85, 43352.45, 24765.67, 48382.81  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \nvariables   : 23\nnames       : POSTCODE, SELLING_PRICE, AREA_SQM, AGE,    PROX_CBD, PROX_CHILDCARE, PROX_ELDERLYCARE, PROX_URA_GROWTH_AREA, PROX_HAWKER_MARKET, PROX_KINDERGARTEN,    PROX_MRT,   PROX_PARK, PROX_PRIMARY_SCH, PROX_TOP_PRIMARY_SCH, PROX_SHOPPING_MALL, ... \nmin values  :    18965,        540000,       34,   0, 0.386916393,    0.004927023,      0.054508623,          0.214539508,        0.051817113,       0.004927023, 0.052779424, 0.029064164,      0.077106132,          0.077106132,                  0, ... \nmax values  :   828833,       1.8e+07,      619,  37, 19.18042832,     3.46572633,      3.949157205,           9.15540001,        5.374348075,       2.229045366,  3.48037319,  2.16104919,      3.928989144,          6.748192062,        3.477433767, ... \n\n\n\ntmap_mode(\"view\")\ntm_shape(mpsz_svy21)+\n  tmap_options(check.and.fix = TRUE) +\n  tm_polygons(alpha = 0.4) +\ntm_shape(condo_resale.res.sf) +  \n  tm_dots(col = \"MLR_RES\",\n          alpha = 0.6,\n          style=\"quantile\") +\n  tm_view(set.zoom.limits = c(11,14))\n\n\n\n\n\n\n\nnb <- dnearneigh(coordinates(condo_resale.sp), 0, 1500, longlat = FALSE)\nsummary(nb)\n\nNeighbour list object:\nNumber of regions: 1436 \nNumber of nonzero links: 66266 \nPercentage nonzero weights: 3.213526 \nAverage number of links: 46.14624 \nLink number distribution:\n\n  1   3   5   7   9  10  11  12  13  14  15  16  17  18  19  20  21  22  23  24 \n  3   3   9   4   3  15  10  19  17  45  19   5  14  29  19   6  35  45  18  47 \n 25  26  27  28  29  30  31  32  33  34  35  36  37  38  39  40  41  42  43  44 \n 16  43  22  26  21  11   9  23  22  13  16  25  21  37  16  18   8  21   4  12 \n 45  46  47  48  49  50  51  52  53  54  55  56  57  58  59  60  61  62  63  64 \n  8  36  18  14  14  43  11  12   8  13  12  13   4   5   6  12  11  20  29  33 \n 65  66  67  68  69  70  71  72  73  74  75  76  77  78  79  80  81  82  83  84 \n 15  20  10  14  15  15  11  16  12  10   8  19  12  14   9   8   4  13  11   6 \n 85  86  87  88  89  90  91  92  93  94  95  96  97  98  99 100 101 102 103 104 \n  4   9   4   4   4   6   2  16   9   4   5   9   3   9   4   2   1   2   1   1 \n105 106 107 108 109 110 112 116 125 \n  1   5   9   2   1   3   1   1   1 \n3 least connected regions:\n193 194 277 with 1 link\n1 most connected region:\n285 with 125 links\n\n\n\nnb_lw <- nb2listw(nb, style = 'W')\nsummary(nb_lw)\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 1436 \nNumber of nonzero links: 66266 \nPercentage nonzero weights: 3.213526 \nAverage number of links: 46.14624 \nLink number distribution:\n\n  1   3   5   7   9  10  11  12  13  14  15  16  17  18  19  20  21  22  23  24 \n  3   3   9   4   3  15  10  19  17  45  19   5  14  29  19   6  35  45  18  47 \n 25  26  27  28  29  30  31  32  33  34  35  36  37  38  39  40  41  42  43  44 \n 16  43  22  26  21  11   9  23  22  13  16  25  21  37  16  18   8  21   4  12 \n 45  46  47  48  49  50  51  52  53  54  55  56  57  58  59  60  61  62  63  64 \n  8  36  18  14  14  43  11  12   8  13  12  13   4   5   6  12  11  20  29  33 \n 65  66  67  68  69  70  71  72  73  74  75  76  77  78  79  80  81  82  83  84 \n 15  20  10  14  15  15  11  16  12  10   8  19  12  14   9   8   4  13  11   6 \n 85  86  87  88  89  90  91  92  93  94  95  96  97  98  99 100 101 102 103 104 \n  4   9   4   4   4   6   2  16   9   4   5   9   3   9   4   2   1   2   1   1 \n105 106 107 108 109 110 112 116 125 \n  1   5   9   2   1   3   1   1   1 \n3 least connected regions:\n193 194 277 with 1 link\n1 most connected region:\n285 with 125 links\n\nWeights style: W \nWeights constants summary:\n     n      nn   S0       S1       S2\nW 1436 2062096 1436 94.81916 5798.341\n\n\n\nlm.morantest(condo.mlr1, nb_lw)\n\n\n    Global Moran I for regression residuals\n\ndata:  \nmodel: lm(formula = SELLING_PRICE ~ AREA_SQM + AGE + PROX_CBD +\nPROX_CHILDCARE + PROX_ELDERLYCARE + PROX_URA_GROWTH_AREA + PROX_MRT +\nPROX_PARK + PROX_PRIMARY_SCH + PROX_SHOPPING_MALL + PROX_BUS_STOP +\nNO_Of_UNITS + FAMILY_FRIENDLY + FREEHOLD, data = condo_resale.sf)\nweights: nb_lw\n\nMoran I statistic standard deviate = 24.366, p-value < 2.2e-16\nalternative hypothesis: greater\nsample estimates:\nObserved Moran I      Expectation         Variance \n    1.438876e-01    -5.487594e-03     3.758259e-05"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex08/Hands-On_Ex08.html#building-fixed-bandwidth-gwr-model",
    "href": "Hands-On_Ex/Hands-On_Ex08/Hands-On_Ex08.html#building-fixed-bandwidth-gwr-model",
    "title": "Hands-On Exercise 8: Calibrating Hedonic Pricing Model for Private Highrise Property with GWR Method",
    "section": "Building Fixed Bandwidth GWR Model",
    "text": "Building Fixed Bandwidth GWR Model\n\nbw.fixed <- bw.gwr(formula = SELLING_PRICE ~ AREA_SQM + AGE + PROX_CBD + \n                     PROX_CHILDCARE + PROX_ELDERLYCARE  + PROX_URA_GROWTH_AREA + \n                     PROX_MRT   + PROX_PARK + PROX_PRIMARY_SCH + \n                     PROX_SHOPPING_MALL + PROX_BUS_STOP + NO_Of_UNITS + \n                     FAMILY_FRIENDLY + FREEHOLD, \n                   data=condo_resale.sp, \n                   approach=\"CV\", \n                   kernel=\"gaussian\", \n                   adaptive=FALSE, \n                   longlat=FALSE)\n\nFixed bandwidth: 17660.96 CV score: 8.259118e+14 \nFixed bandwidth: 10917.26 CV score: 7.970454e+14 \nFixed bandwidth: 6749.419 CV score: 7.273273e+14 \nFixed bandwidth: 4173.553 CV score: 6.300006e+14 \nFixed bandwidth: 2581.58 CV score: 5.404958e+14 \nFixed bandwidth: 1597.687 CV score: 4.857515e+14 \nFixed bandwidth: 989.6077 CV score: 4.722431e+14 \nFixed bandwidth: 613.7939 CV score: 1.378294e+16 \nFixed bandwidth: 1221.873 CV score: 4.778717e+14 \nFixed bandwidth: 846.0596 CV score: 4.791629e+14 \nFixed bandwidth: 1078.325 CV score: 4.751406e+14 \nFixed bandwidth: 934.7772 CV score: 4.72518e+14 \nFixed bandwidth: 1023.495 CV score: 4.730305e+14 \nFixed bandwidth: 968.6643 CV score: 4.721317e+14 \nFixed bandwidth: 955.7206 CV score: 4.722072e+14 \nFixed bandwidth: 976.6639 CV score: 4.721387e+14 \nFixed bandwidth: 963.7202 CV score: 4.721484e+14 \nFixed bandwidth: 971.7199 CV score: 4.721293e+14 \nFixed bandwidth: 973.6083 CV score: 4.721309e+14 \nFixed bandwidth: 970.5527 CV score: 4.721295e+14 \nFixed bandwidth: 972.4412 CV score: 4.721296e+14 \nFixed bandwidth: 971.2741 CV score: 4.721292e+14 \nFixed bandwidth: 970.9985 CV score: 4.721293e+14 \nFixed bandwidth: 971.4443 CV score: 4.721292e+14 \nFixed bandwidth: 971.5496 CV score: 4.721293e+14 \nFixed bandwidth: 971.3793 CV score: 4.721292e+14 \nFixed bandwidth: 971.3391 CV score: 4.721292e+14 \nFixed bandwidth: 971.3143 CV score: 4.721292e+14 \nFixed bandwidth: 971.3545 CV score: 4.721292e+14 \nFixed bandwidth: 971.3296 CV score: 4.721292e+14 \nFixed bandwidth: 971.345 CV score: 4.721292e+14 \nFixed bandwidth: 971.3355 CV score: 4.721292e+14 \nFixed bandwidth: 971.3413 CV score: 4.721292e+14 \nFixed bandwidth: 971.3377 CV score: 4.721292e+14 \nFixed bandwidth: 971.34 CV score: 4.721292e+14 \nFixed bandwidth: 971.3405 CV score: 4.721292e+14 \nFixed bandwidth: 971.3408 CV score: 4.721292e+14 \nFixed bandwidth: 971.3403 CV score: 4.721292e+14 \nFixed bandwidth: 971.3406 CV score: 4.721292e+14 \nFixed bandwidth: 971.3404 CV score: 4.721292e+14 \nFixed bandwidth: 971.3405 CV score: 4.721292e+14 \nFixed bandwidth: 971.3405 CV score: 4.721292e+14 \n\n\n\ngwr.fixed <- gwr.basic(formula = SELLING_PRICE ~ AREA_SQM + AGE + PROX_CBD + \n                         PROX_CHILDCARE + PROX_ELDERLYCARE  + PROX_URA_GROWTH_AREA + \n                         PROX_MRT   + PROX_PARK + PROX_PRIMARY_SCH + \n                         PROX_SHOPPING_MALL + PROX_BUS_STOP + NO_Of_UNITS + \n                         FAMILY_FRIENDLY + FREEHOLD, \n                       data=condo_resale.sp, \n                       bw=bw.fixed, \n                       kernel = 'gaussian', \n                       longlat = FALSE)\n\n\ngwr.fixed\n\n   ***********************************************************************\n   *                       Package   GWmodel                             *\n   ***********************************************************************\n   Program starts at: 2023-03-17 17:40:23 \n   Call:\n   gwr.basic(formula = SELLING_PRICE ~ AREA_SQM + AGE + PROX_CBD + \n    PROX_CHILDCARE + PROX_ELDERLYCARE + PROX_URA_GROWTH_AREA + \n    PROX_MRT + PROX_PARK + PROX_PRIMARY_SCH + PROX_SHOPPING_MALL + \n    PROX_BUS_STOP + NO_Of_UNITS + FAMILY_FRIENDLY + FREEHOLD, \n    data = condo_resale.sp, bw = bw.fixed, kernel = \"gaussian\", \n    longlat = FALSE)\n\n   Dependent (y) variable:  SELLING_PRICE\n   Independent variables:  AREA_SQM AGE PROX_CBD PROX_CHILDCARE PROX_ELDERLYCARE PROX_URA_GROWTH_AREA PROX_MRT PROX_PARK PROX_PRIMARY_SCH PROX_SHOPPING_MALL PROX_BUS_STOP NO_Of_UNITS FAMILY_FRIENDLY FREEHOLD\n   Number of data points: 1436\n   ***********************************************************************\n   *                    Results of Global Regression                     *\n   ***********************************************************************\n\n   Call:\n    lm(formula = formula, data = data)\n\n   Residuals:\n     Min       1Q   Median       3Q      Max \n-3470778  -298119   -23481   248917 12234210 \n\n   Coefficients:\n                          Estimate Std. Error t value Pr(>|t|)    \n   (Intercept)           527633.22  108183.22   4.877 1.20e-06 ***\n   AREA_SQM               12777.52     367.48  34.771  < 2e-16 ***\n   AGE                   -24687.74    2754.84  -8.962  < 2e-16 ***\n   PROX_CBD              -77131.32    5763.12 -13.384  < 2e-16 ***\n   PROX_CHILDCARE       -318472.75  107959.51  -2.950 0.003231 ** \n   PROX_ELDERLYCARE      185575.62   39901.86   4.651 3.61e-06 ***\n   PROX_URA_GROWTH_AREA   39163.25   11754.83   3.332 0.000885 ***\n   PROX_MRT             -294745.11   56916.37  -5.179 2.56e-07 ***\n   PROX_PARK             570504.81   65507.03   8.709  < 2e-16 ***\n   PROX_PRIMARY_SCH      159856.14   60234.60   2.654 0.008046 ** \n   PROX_SHOPPING_MALL   -220947.25   36561.83  -6.043 1.93e-09 ***\n   PROX_BUS_STOP         682482.22  134513.24   5.074 4.42e-07 ***\n   NO_Of_UNITS             -245.48      87.95  -2.791 0.005321 ** \n   FAMILY_FRIENDLY       146307.58   46893.02   3.120 0.001845 ** \n   FREEHOLD              350599.81   48506.48   7.228 7.98e-13 ***\n\n   ---Significance stars\n   Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 \n   Residual standard error: 756000 on 1421 degrees of freedom\n   Multiple R-squared: 0.6507\n   Adjusted R-squared: 0.6472 \n   F-statistic: 189.1 on 14 and 1421 DF,  p-value: < 2.2e-16 \n   ***Extra Diagnostic information\n   Residual sum of squares: 8.120609e+14\n   Sigma(hat): 752522.9\n   AIC:  42966.76\n   AICc:  42967.14\n   BIC:  41731.39\n   ***********************************************************************\n   *          Results of Geographically Weighted Regression              *\n   ***********************************************************************\n\n   *********************Model calibration information*********************\n   Kernel function: gaussian \n   Fixed bandwidth: 971.3405 \n   Regression points: the same locations as observations are used.\n   Distance metric: Euclidean distance metric is used.\n\n   ****************Summary of GWR coefficient estimates:******************\n                               Min.     1st Qu.      Median     3rd Qu.\n   Intercept            -3.5988e+07 -5.1998e+05  7.6780e+05  1.7412e+06\n   AREA_SQM              1.0003e+03  5.2758e+03  7.4740e+03  1.2301e+04\n   AGE                  -1.3475e+05 -2.0813e+04 -8.6260e+03 -3.7784e+03\n   PROX_CBD             -7.7047e+07 -2.3608e+05 -8.3600e+04  3.4646e+04\n   PROX_CHILDCARE       -6.0097e+06 -3.3667e+05 -9.7425e+04  2.9007e+05\n   PROX_ELDERLYCARE     -3.5000e+06 -1.5970e+05  3.1971e+04  1.9577e+05\n   PROX_URA_GROWTH_AREA -3.0170e+06 -8.2013e+04  7.0749e+04  2.2612e+05\n   PROX_MRT             -3.5282e+06 -6.5836e+05 -1.8833e+05  3.6922e+04\n   PROX_PARK            -1.2062e+06 -2.1732e+05  3.5383e+04  4.1335e+05\n   PROX_PRIMARY_SCH     -2.2695e+07 -1.7066e+05  4.8472e+04  5.1555e+05\n   PROX_SHOPPING_MALL   -7.2585e+06 -1.6684e+05 -1.0517e+04  1.5923e+05\n   PROX_BUS_STOP        -1.4676e+06 -4.5207e+04  3.7601e+05  1.1664e+06\n   NO_Of_UNITS          -1.3170e+03 -2.4822e+02 -3.0846e+01  2.5496e+02\n   FAMILY_FRIENDLY      -2.2749e+06 -1.1140e+05  7.6214e+03  1.6107e+05\n   FREEHOLD             -9.2067e+06  3.8073e+04  1.5169e+05  3.7528e+05\n                             Max.\n   Intercept            112793548\n   AREA_SQM                 21575\n   AGE                     434201\n   PROX_CBD               2704596\n   PROX_CHILDCARE         1654087\n   PROX_ELDERLYCARE      38867814\n   PROX_URA_GROWTH_AREA  78515730\n   PROX_MRT               3124316\n   PROX_PARK             18122425\n   PROX_PRIMARY_SCH       4637503\n   PROX_SHOPPING_MALL     1529952\n   PROX_BUS_STOP         11342182\n   NO_Of_UNITS              12907\n   FAMILY_FRIENDLY        1720744\n   FREEHOLD               6073636\n   ************************Diagnostic information*************************\n   Number of data points: 1436 \n   Effective number of parameters (2trace(S) - trace(S'S)): 438.3804 \n   Effective degrees of freedom (n-2trace(S) + trace(S'S)): 997.6196 \n   AICc (GWR book, Fotheringham, et al. 2002, p. 61, eq 2.33): 42263.61 \n   AIC (GWR book, Fotheringham, et al. 2002,GWR p. 96, eq. 4.22): 41632.36 \n   BIC (GWR book, Fotheringham, et al. 2002,GWR p. 61, eq. 2.34): 42515.71 \n   Residual sum of squares: 2.53407e+14 \n   R-square value:  0.8909912 \n   Adjusted R-square value:  0.8430417 \n\n   ***********************************************************************\n   Program stops at: 2023-03-17 17:40:24"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex08/Hands-On_Ex08.html#building-adaptive-bandwidth-gwr-model",
    "href": "Hands-On_Ex/Hands-On_Ex08/Hands-On_Ex08.html#building-adaptive-bandwidth-gwr-model",
    "title": "Hands-On Exercise 8: Calibrating Hedonic Pricing Model for Private Highrise Property with GWR Method",
    "section": "Building Adaptive Bandwidth GWR Model",
    "text": "Building Adaptive Bandwidth GWR Model\n\nbw.adaptive <- bw.gwr(formula = SELLING_PRICE ~ AREA_SQM + AGE  + \n                        PROX_CBD + PROX_CHILDCARE + PROX_ELDERLYCARE    + \n                        PROX_URA_GROWTH_AREA + PROX_MRT + PROX_PARK + \n                        PROX_PRIMARY_SCH + PROX_SHOPPING_MALL   + PROX_BUS_STOP + \n                        NO_Of_UNITS + FAMILY_FRIENDLY + FREEHOLD, \n                      data=condo_resale.sp, \n                      approach=\"CV\", \n                      kernel=\"gaussian\", \n                      adaptive=TRUE, \n                      longlat=FALSE)\n\nAdaptive bandwidth: 895 CV score: 7.952401e+14 \nAdaptive bandwidth: 561 CV score: 7.667364e+14 \nAdaptive bandwidth: 354 CV score: 6.953454e+14 \nAdaptive bandwidth: 226 CV score: 6.15223e+14 \nAdaptive bandwidth: 147 CV score: 5.674373e+14 \nAdaptive bandwidth: 98 CV score: 5.426745e+14 \nAdaptive bandwidth: 68 CV score: 5.168117e+14 \nAdaptive bandwidth: 49 CV score: 4.859631e+14 \nAdaptive bandwidth: 37 CV score: 4.646518e+14 \nAdaptive bandwidth: 30 CV score: 4.422088e+14 \nAdaptive bandwidth: 25 CV score: 4.430816e+14 \nAdaptive bandwidth: 32 CV score: 4.505602e+14 \nAdaptive bandwidth: 27 CV score: 4.462172e+14 \nAdaptive bandwidth: 30 CV score: 4.422088e+14 \n\n\n\ngwr.adaptive <- gwr.basic(formula = SELLING_PRICE ~ AREA_SQM + AGE + \n                            PROX_CBD + PROX_CHILDCARE + PROX_ELDERLYCARE + \n                            PROX_URA_GROWTH_AREA + PROX_MRT + PROX_PARK + \n                            PROX_PRIMARY_SCH + PROX_SHOPPING_MALL + PROX_BUS_STOP + \n                            NO_Of_UNITS + FAMILY_FRIENDLY + FREEHOLD, \n                          data=condo_resale.sp, bw=bw.adaptive, \n                          kernel = 'gaussian', \n                          adaptive=TRUE, \n                          longlat = FALSE)\n\n\ngwr.adaptive\n\n   ***********************************************************************\n   *                       Package   GWmodel                             *\n   ***********************************************************************\n   Program starts at: 2023-03-17 17:40:29 \n   Call:\n   gwr.basic(formula = SELLING_PRICE ~ AREA_SQM + AGE + PROX_CBD + \n    PROX_CHILDCARE + PROX_ELDERLYCARE + PROX_URA_GROWTH_AREA + \n    PROX_MRT + PROX_PARK + PROX_PRIMARY_SCH + PROX_SHOPPING_MALL + \n    PROX_BUS_STOP + NO_Of_UNITS + FAMILY_FRIENDLY + FREEHOLD, \n    data = condo_resale.sp, bw = bw.adaptive, kernel = \"gaussian\", \n    adaptive = TRUE, longlat = FALSE)\n\n   Dependent (y) variable:  SELLING_PRICE\n   Independent variables:  AREA_SQM AGE PROX_CBD PROX_CHILDCARE PROX_ELDERLYCARE PROX_URA_GROWTH_AREA PROX_MRT PROX_PARK PROX_PRIMARY_SCH PROX_SHOPPING_MALL PROX_BUS_STOP NO_Of_UNITS FAMILY_FRIENDLY FREEHOLD\n   Number of data points: 1436\n   ***********************************************************************\n   *                    Results of Global Regression                     *\n   ***********************************************************************\n\n   Call:\n    lm(formula = formula, data = data)\n\n   Residuals:\n     Min       1Q   Median       3Q      Max \n-3470778  -298119   -23481   248917 12234210 \n\n   Coefficients:\n                          Estimate Std. Error t value Pr(>|t|)    \n   (Intercept)           527633.22  108183.22   4.877 1.20e-06 ***\n   AREA_SQM               12777.52     367.48  34.771  < 2e-16 ***\n   AGE                   -24687.74    2754.84  -8.962  < 2e-16 ***\n   PROX_CBD              -77131.32    5763.12 -13.384  < 2e-16 ***\n   PROX_CHILDCARE       -318472.75  107959.51  -2.950 0.003231 ** \n   PROX_ELDERLYCARE      185575.62   39901.86   4.651 3.61e-06 ***\n   PROX_URA_GROWTH_AREA   39163.25   11754.83   3.332 0.000885 ***\n   PROX_MRT             -294745.11   56916.37  -5.179 2.56e-07 ***\n   PROX_PARK             570504.81   65507.03   8.709  < 2e-16 ***\n   PROX_PRIMARY_SCH      159856.14   60234.60   2.654 0.008046 ** \n   PROX_SHOPPING_MALL   -220947.25   36561.83  -6.043 1.93e-09 ***\n   PROX_BUS_STOP         682482.22  134513.24   5.074 4.42e-07 ***\n   NO_Of_UNITS             -245.48      87.95  -2.791 0.005321 ** \n   FAMILY_FRIENDLY       146307.58   46893.02   3.120 0.001845 ** \n   FREEHOLD              350599.81   48506.48   7.228 7.98e-13 ***\n\n   ---Significance stars\n   Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 \n   Residual standard error: 756000 on 1421 degrees of freedom\n   Multiple R-squared: 0.6507\n   Adjusted R-squared: 0.6472 \n   F-statistic: 189.1 on 14 and 1421 DF,  p-value: < 2.2e-16 \n   ***Extra Diagnostic information\n   Residual sum of squares: 8.120609e+14\n   Sigma(hat): 752522.9\n   AIC:  42966.76\n   AICc:  42967.14\n   BIC:  41731.39\n   ***********************************************************************\n   *          Results of Geographically Weighted Regression              *\n   ***********************************************************************\n\n   *********************Model calibration information*********************\n   Kernel function: gaussian \n   Adaptive bandwidth: 30 (number of nearest neighbours)\n   Regression points: the same locations as observations are used.\n   Distance metric: Euclidean distance metric is used.\n\n   ****************Summary of GWR coefficient estimates:******************\n                               Min.     1st Qu.      Median     3rd Qu.\n   Intercept            -1.3487e+08 -2.4669e+05  7.7928e+05  1.6194e+06\n   AREA_SQM              3.3188e+03  5.6285e+03  7.7825e+03  1.2738e+04\n   AGE                  -9.6746e+04 -2.9288e+04 -1.4043e+04 -5.6119e+03\n   PROX_CBD             -2.5330e+06 -1.6256e+05 -7.7242e+04  2.6624e+03\n   PROX_CHILDCARE       -1.2790e+06 -2.0175e+05  8.7158e+03  3.7778e+05\n   PROX_ELDERLYCARE     -1.6212e+06 -9.2050e+04  6.1029e+04  2.8184e+05\n   PROX_URA_GROWTH_AREA -7.2686e+06 -3.0350e+04  4.5869e+04  2.4613e+05\n   PROX_MRT             -4.3781e+07 -6.7282e+05 -2.2115e+05 -7.4593e+04\n   PROX_PARK            -2.9020e+06 -1.6782e+05  1.1601e+05  4.6572e+05\n   PROX_PRIMARY_SCH     -8.6418e+05 -1.6627e+05 -7.7853e+03  4.3222e+05\n   PROX_SHOPPING_MALL   -1.8272e+06 -1.3175e+05 -1.4049e+04  1.3799e+05\n   PROX_BUS_STOP        -2.0579e+06 -7.1461e+04  4.1104e+05  1.2071e+06\n   NO_Of_UNITS          -2.1993e+03 -2.3685e+02 -3.4699e+01  1.1657e+02\n   FAMILY_FRIENDLY      -5.9879e+05 -5.0927e+04  2.6173e+04  2.2481e+05\n   FREEHOLD             -1.6340e+05  4.0765e+04  1.9023e+05  3.7960e+05\n                            Max.\n   Intercept            18758355\n   AREA_SQM                23064\n   AGE                     13303\n   PROX_CBD             11346650\n   PROX_CHILDCARE        2892127\n   PROX_ELDERLYCARE      2465671\n   PROX_URA_GROWTH_AREA  7384059\n   PROX_MRT              1186242\n   PROX_PARK             2588497\n   PROX_PRIMARY_SCH      3381462\n   PROX_SHOPPING_MALL   38038564\n   PROX_BUS_STOP        12081592\n   NO_Of_UNITS              1010\n   FAMILY_FRIENDLY       2072414\n   FREEHOLD              1813995\n   ************************Diagnostic information*************************\n   Number of data points: 1436 \n   Effective number of parameters (2trace(S) - trace(S'S)): 350.3088 \n   Effective degrees of freedom (n-2trace(S) + trace(S'S)): 1085.691 \n   AICc (GWR book, Fotheringham, et al. 2002, p. 61, eq 2.33): 41982.22 \n   AIC (GWR book, Fotheringham, et al. 2002,GWR p. 96, eq. 4.22): 41546.74 \n   BIC (GWR book, Fotheringham, et al. 2002,GWR p. 61, eq. 2.34): 41914.08 \n   Residual sum of squares: 2.528227e+14 \n   R-square value:  0.8912425 \n   Adjusted R-square value:  0.8561185 \n\n   ***********************************************************************\n   Program stops at: 2023-03-17 17:40:30"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex08/Hands-On_Ex08.html#converting-sdf-into-sfdata.frame",
    "href": "Hands-On_Ex/Hands-On_Ex08/Hands-On_Ex08.html#converting-sdf-into-sfdata.frame",
    "title": "Hands-On Exercise 8: Calibrating Hedonic Pricing Model for Private Highrise Property with GWR Method",
    "section": "Converting SDF into sfdata.frame",
    "text": "Converting SDF into sfdata.frame\n\ncondo_resale.sf.adaptive <- st_as_sf(gwr.adaptive$SDF) %>%\n  st_transform(crs=3414)\n\n\ncondo_resale.sf.adaptive.svy21 <- st_transform(condo_resale.sf.adaptive, 3414)\ncondo_resale.sf.adaptive.svy21  \n\nSimple feature collection with 1436 features and 51 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 14940.85 ymin: 24765.67 xmax: 43352.45 ymax: 48382.81\nProjected CRS: SVY21 / Singapore TM\nFirst 10 features:\n    Intercept  AREA_SQM        AGE  PROX_CBD PROX_CHILDCARE PROX_ELDERLYCARE\n1   2050011.7  9561.892  -9514.634 -120681.9      319266.92       -393417.79\n2   1633128.2 16576.853 -58185.479 -149434.2      441102.18        325188.74\n3   3433608.2 13091.861 -26707.386 -259397.8     -120116.82        535855.81\n4    234358.9 20730.601 -93308.988 2426853.7      480825.28        314783.72\n5   2285804.9  6722.836 -17608.018 -316835.5       90764.78       -137384.61\n6  -3568877.4  6039.581 -26535.592  327306.1     -152531.19       -700392.85\n7  -2874842.4 16843.575 -59166.727 -983577.2     -177810.50       -122384.02\n8   2038086.0  6905.135 -17681.897 -285076.6       70259.40        -96012.78\n9   1718478.4  9580.703 -14401.128  105803.4     -657698.02       -123276.00\n10  3457054.0 14072.011 -31579.884 -234895.4       79961.45        548581.04\n   PROX_URA_GROWTH_AREA    PROX_MRT  PROX_PARK PROX_PRIMARY_SCH\n1            -159980.20  -299742.96 -172104.47        242668.03\n2            -142290.39 -2510522.23  523379.72       1106830.66\n3            -253621.21  -936853.28  209099.85        571462.33\n4           -2679297.89 -2039479.50 -759153.26       3127477.21\n5             303714.81   -44567.05  -10284.62         30413.56\n6             -28051.25   733566.47 1511488.92        320878.23\n7            1397676.38 -2745430.34  710114.74       1786570.95\n8             269368.71   -14552.99   73533.34         53359.73\n9            -361974.72  -476785.32 -132067.59        -40128.92\n10           -150024.38 -1503835.53  574155.47        108996.67\n   PROX_SHOPPING_MALL PROX_BUS_STOP  NO_Of_UNITS FAMILY_FRIENDLY  FREEHOLD\n1          300881.390     1210615.4  104.8290640       -9075.370  303955.6\n2          -87693.378     1843587.2 -288.3441183      310074.664  396221.3\n3         -126732.712     1411924.9   -9.5532945        5949.746  168821.7\n4          -29593.342     7225577.5 -161.3551620     1556178.531 1212515.6\n5           -7490.586      677577.0   42.2659674       58986.951  328175.2\n6          258583.881     1086012.6 -214.3671271      201992.641  471873.1\n7         -384251.210     5094060.5   -0.9212521      359659.512  408871.9\n8          -39634.902      735767.1   30.1741069       55602.506  347075.0\n9          276718.757     2815772.4  675.1615559      -30453.297  503872.8\n10        -454726.822     2123557.0  -21.3044311     -100935.586  213324.6\n         y    yhat    residual CV_Score Stud_residual Intercept_SE AREA_SQM_SE\n1  3000000 2886532   113468.16        0    0.38207013     516105.5    823.2860\n2  3880000 3466801   413198.52        0    1.01433140     488083.5    825.2380\n3  3325000 3616527  -291527.20        0   -0.83780678     963711.4    988.2240\n4  4250000 5435482 -1185481.63        0   -2.84614670     444185.5    617.4007\n5  1400000 1388166    11834.26        0    0.03404453    2119620.6   1376.2778\n6  1320000 1516702  -196701.94        0   -0.72065800   28572883.7   2348.0091\n7  3410000 3266881   143118.77        0    0.41291992     679546.6    893.5893\n8  1420000 1431955   -11955.27        0   -0.03033109    2217773.1   1415.2604\n9  2025000 1832799   192200.83        0    0.52018109     814281.8    943.8434\n10 2550000 2223364   326635.53        0    1.10559735    2410252.0   1271.4073\n      AGE_SE PROX_CBD_SE PROX_CHILDCARE_SE PROX_ELDERLYCARE_SE\n1   5889.782    37411.22          319111.1           120633.34\n2   6226.916    23615.06          299705.3            84546.69\n3   6510.236    56103.77          349128.5           129687.07\n4   6010.511   469337.41          304965.2           127150.69\n5   8180.361   410644.47          698720.6           327371.55\n6  14601.909  5272846.47         1141599.8          1653002.19\n7   8970.629   346164.20          530101.1           148598.71\n8   8661.309   438035.69          742532.8           399221.05\n9  11791.208    89148.35          704630.7           329683.30\n10  9941.980   173532.77          500976.2           281876.74\n   PROX_URA_GROWTH_AREA_SE PROX_MRT_SE PROX_PARK_SE PROX_PRIMARY_SCH_SE\n1                 56207.39    185181.3     205499.6            152400.7\n2                 76956.50    281133.9     229358.7            165150.7\n3                 95774.60    275483.7     314124.3            196662.6\n4                470762.12    279877.1     227249.4            240878.9\n5                474339.56    363830.0     364580.9            249087.7\n6               5496627.21    730453.2    1741712.0            683265.5\n7                371692.97    375511.9     297400.9            344602.8\n8                517977.91    423155.4     440984.4            261251.2\n9                153436.22    285325.4     304998.4            278258.5\n10               239182.57    571355.7     599131.8            331284.8\n   PROX_SHOPPING_MALL_SE PROX_BUS_STOP_SE NO_Of_UNITS_SE FAMILY_FRIENDLY_SE\n1               109268.8         600668.6       218.1258           131474.7\n2                98906.8         410222.1       208.9410           114989.1\n3               119913.3         464156.7       210.9828           146607.2\n4               177104.1         562810.8       361.7767           108726.6\n5               301032.9         740922.4       299.5034           160663.7\n6              2931208.6        1418333.3       602.5571           331727.0\n7               249969.5         821236.4       532.1978           129241.2\n8               351634.0         775038.4       338.6777           171895.1\n9               289872.7         850095.5       439.9037           220223.4\n10              265529.7         631399.2       259.0169           189125.5\n   FREEHOLD_SE Intercept_TV AREA_SQM_TV     AGE_TV PROX_CBD_TV\n1     115954.0    3.9720784   11.614302  -1.615447 -3.22582173\n2     130110.0    3.3460017   20.087361  -9.344188 -6.32792021\n3     141031.5    3.5629010   13.247868  -4.102368 -4.62353528\n4     138239.1    0.5276150   33.577223 -15.524302  5.17080808\n5     210641.1    1.0784029    4.884795  -2.152474 -0.77155660\n6     374347.3   -0.1249043    2.572214  -1.817269  0.06207388\n7     182216.9   -4.2305303   18.849348  -6.595605 -2.84136028\n8     216649.4    0.9189786    4.879056  -2.041481 -0.65080678\n9     220473.7    2.1104224   10.150733  -1.221345  1.18682383\n10    206346.2    1.4343123   11.068059  -3.176418 -1.35360852\n   PROX_CHILDCARE_TV PROX_ELDERLYCARE_TV PROX_URA_GROWTH_AREA_TV PROX_MRT_TV\n1         1.00048819          -3.2612693            -2.846248368 -1.61864578\n2         1.47178634           3.8462625            -1.848971738 -8.92998600\n3        -0.34404755           4.1319138            -2.648105057 -3.40075727\n4         1.57665606           2.4756745            -5.691404992 -7.28705261\n5         0.12990138          -0.4196596             0.640289855 -0.12249416\n6        -0.13361179          -0.4237096            -0.005103357  1.00426206\n7        -0.33542751          -0.8235874             3.760298131 -7.31116712\n8         0.09462126          -0.2405003             0.520038994 -0.03439159\n9        -0.93339393          -0.3739225            -2.359121712 -1.67102293\n10        0.15961128           1.9461735            -0.627237944 -2.63204802\n   PROX_PARK_TV PROX_PRIMARY_SCH_TV PROX_SHOPPING_MALL_TV PROX_BUS_STOP_TV\n1   -0.83749312           1.5923022            2.75358842        2.0154464\n2    2.28192684           6.7019454           -0.88662640        4.4941192\n3    0.66565951           2.9058009           -1.05686949        3.0419145\n4   -3.34061770          12.9836105           -0.16709578       12.8383775\n5   -0.02820944           0.1220998           -0.02488294        0.9145046\n6    0.86781794           0.4696245            0.08821750        0.7656963\n7    2.38773567           5.1844351           -1.53719231        6.2029165\n8    0.16674816           0.2042469           -0.11271635        0.9493299\n9   -0.43301073          -0.1442145            0.95462153        3.3123012\n10   0.95831249           0.3290120           -1.71252687        3.3632555\n   NO_Of_UNITS_TV FAMILY_FRIENDLY_TV FREEHOLD_TV  Local_R2\n1     0.480589953        -0.06902748    2.621347 0.8846744\n2    -1.380026395         2.69655779    3.045280 0.8899773\n3    -0.045279967         0.04058290    1.197050 0.8947007\n4    -0.446007570        14.31276425    8.771149 0.9073605\n5     0.141120178         0.36714544    1.557983 0.9510057\n6    -0.355762335         0.60891234    1.260522 0.9247586\n7    -0.001731033         2.78285441    2.243875 0.8310458\n8     0.089093858         0.32346758    1.602012 0.9463936\n9     1.534793921        -0.13828365    2.285410 0.8380365\n10   -0.082251138        -0.53369623    1.033819 0.9080753\n                    geometry\n1  POINT (22085.12 29951.54)\n2   POINT (25656.84 34546.2)\n3   POINT (23963.99 32890.8)\n4  POINT (27044.28 32319.77)\n5  POINT (41042.56 33743.64)\n6   POINT (39717.04 32943.1)\n7   POINT (28419.1 33513.37)\n8  POINT (40763.57 33879.61)\n9  POINT (23595.63 28884.78)\n10 POINT (24586.56 33194.31)\n\n\n\ngwr.adaptive.output <- as.data.frame(gwr.adaptive$SDF)\ncondo_resale.sf.adaptive <- cbind(condo_resale.res.sf, as.matrix(gwr.adaptive.output))\n\n\nglimpse(condo_resale.sf.adaptive)\n\nRows: 1,436\nColumns: 77\n$ POSTCODE                <dbl> 118635, 288420, 267833, 258380, 467169, 466472…\n$ SELLING_PRICE           <dbl> 3000000, 3880000, 3325000, 4250000, 1400000, 1…\n$ AREA_SQM                <dbl> 309, 290, 248, 127, 145, 139, 218, 141, 165, 1…\n$ AGE                     <dbl> 30, 32, 33, 7, 28, 22, 24, 24, 27, 31, 17, 22,…\n$ PROX_CBD                <dbl> 7.941259, 6.609797, 6.898000, 4.038861, 11.783…\n$ PROX_CHILDCARE          <dbl> 0.16597932, 0.28027246, 0.42922669, 0.39473543…\n$ PROX_ELDERLYCARE        <dbl> 2.5198118, 1.9333338, 0.5021395, 1.9910316, 1.…\n$ PROX_URA_GROWTH_AREA    <dbl> 6.618741, 7.505109, 6.463887, 4.906512, 6.4106…\n$ PROX_HAWKER_MARKET      <dbl> 1.76542207, 0.54507614, 0.37789301, 1.68259969…\n$ PROX_KINDERGARTEN       <dbl> 0.05835552, 0.61592412, 0.14120309, 0.38200076…\n$ PROX_MRT                <dbl> 0.5607188, 0.6584461, 0.3053433, 0.6910183, 0.…\n$ PROX_PARK               <dbl> 1.1710446, 0.1992269, 0.2779886, 0.9832843, 0.…\n$ PROX_PRIMARY_SCH        <dbl> 1.6340256, 0.9747834, 1.4715016, 1.4546324, 0.…\n$ PROX_TOP_PRIMARY_SCH    <dbl> 3.3273195, 0.9747834, 1.4715016, 2.3006394, 0.…\n$ PROX_SHOPPING_MALL      <dbl> 2.2102717, 2.9374279, 1.2256850, 0.3525671, 1.…\n$ PROX_SUPERMARKET        <dbl> 0.9103958, 0.5900617, 0.4135583, 0.4162219, 0.…\n$ PROX_BUS_STOP           <dbl> 0.10336166, 0.28673408, 0.28504777, 0.29872340…\n$ NO_Of_UNITS             <dbl> 18, 20, 27, 30, 30, 31, 32, 32, 32, 32, 34, 34…\n$ FAMILY_FRIENDLY         <dbl> 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0…\n$ FREEHOLD                <dbl> 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1…\n$ LEASEHOLD_99YR          <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ LOG_SELLING_PRICE       <dbl> 14.91412, 15.17135, 15.01698, 15.26243, 14.151…\n$ MLR_RES                 <dbl> -1489099.55, 415494.57, 194129.69, 1088992.71,…\n$ Intercept               <dbl> 2050011.67, 1633128.24, 3433608.17, 234358.91,…\n$ AREA_SQM.1              <dbl> 9561.892, 16576.853, 13091.861, 20730.601, 672…\n$ AGE.1                   <dbl> -9514.634, -58185.479, -26707.386, -93308.988,…\n$ PROX_CBD.1              <dbl> -120681.94, -149434.22, -259397.77, 2426853.66…\n$ PROX_CHILDCARE.1        <dbl> 319266.925, 441102.177, -120116.816, 480825.28…\n$ PROX_ELDERLYCARE.1      <dbl> -393417.795, 325188.741, 535855.806, 314783.72…\n$ PROX_URA_GROWTH_AREA.1  <dbl> -159980.203, -142290.389, -253621.206, -267929…\n$ PROX_MRT.1              <dbl> -299742.96, -2510522.23, -936853.28, -2039479.…\n$ PROX_PARK.1             <dbl> -172104.47, 523379.72, 209099.85, -759153.26, …\n$ PROX_PRIMARY_SCH.1      <dbl> 242668.03, 1106830.66, 571462.33, 3127477.21, …\n$ PROX_SHOPPING_MALL.1    <dbl> 300881.390, -87693.378, -126732.712, -29593.34…\n$ PROX_BUS_STOP.1         <dbl> 1210615.44, 1843587.22, 1411924.90, 7225577.51…\n$ NO_Of_UNITS.1           <dbl> 104.8290640, -288.3441183, -9.5532945, -161.35…\n$ FAMILY_FRIENDLY.1       <dbl> -9075.370, 310074.664, 5949.746, 1556178.531, …\n$ FREEHOLD.1              <dbl> 303955.61, 396221.27, 168821.75, 1212515.58, 3…\n$ y                       <dbl> 3000000, 3880000, 3325000, 4250000, 1400000, 1…\n$ yhat                    <dbl> 2886531.8, 3466801.5, 3616527.2, 5435481.6, 13…\n$ residual                <dbl> 113468.16, 413198.52, -291527.20, -1185481.63,…\n$ CV_Score                <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ Stud_residual           <dbl> 0.38207013, 1.01433140, -0.83780678, -2.846146…\n$ Intercept_SE            <dbl> 516105.5, 488083.5, 963711.4, 444185.5, 211962…\n$ AREA_SQM_SE             <dbl> 823.2860, 825.2380, 988.2240, 617.4007, 1376.2…\n$ AGE_SE                  <dbl> 5889.782, 6226.916, 6510.236, 6010.511, 8180.3…\n$ PROX_CBD_SE             <dbl> 37411.22, 23615.06, 56103.77, 469337.41, 41064…\n$ PROX_CHILDCARE_SE       <dbl> 319111.1, 299705.3, 349128.5, 304965.2, 698720…\n$ PROX_ELDERLYCARE_SE     <dbl> 120633.34, 84546.69, 129687.07, 127150.69, 327…\n$ PROX_URA_GROWTH_AREA_SE <dbl> 56207.39, 76956.50, 95774.60, 470762.12, 47433…\n$ PROX_MRT_SE             <dbl> 185181.3, 281133.9, 275483.7, 279877.1, 363830…\n$ PROX_PARK_SE            <dbl> 205499.6, 229358.7, 314124.3, 227249.4, 364580…\n$ PROX_PRIMARY_SCH_SE     <dbl> 152400.7, 165150.7, 196662.6, 240878.9, 249087…\n$ PROX_SHOPPING_MALL_SE   <dbl> 109268.8, 98906.8, 119913.3, 177104.1, 301032.…\n$ PROX_BUS_STOP_SE        <dbl> 600668.6, 410222.1, 464156.7, 562810.8, 740922…\n$ NO_Of_UNITS_SE          <dbl> 218.1258, 208.9410, 210.9828, 361.7767, 299.50…\n$ FAMILY_FRIENDLY_SE      <dbl> 131474.73, 114989.07, 146607.22, 108726.62, 16…\n$ FREEHOLD_SE             <dbl> 115954.0, 130110.0, 141031.5, 138239.1, 210641…\n$ Intercept_TV            <dbl> 3.9720784, 3.3460017, 3.5629010, 0.5276150, 1.…\n$ AREA_SQM_TV             <dbl> 11.614302, 20.087361, 13.247868, 33.577223, 4.…\n$ AGE_TV                  <dbl> -1.6154474, -9.3441881, -4.1023685, -15.524301…\n$ PROX_CBD_TV             <dbl> -3.22582173, -6.32792021, -4.62353528, 5.17080…\n$ PROX_CHILDCARE_TV       <dbl> 1.000488185, 1.471786337, -0.344047555, 1.5766…\n$ PROX_ELDERLYCARE_TV     <dbl> -3.26126929, 3.84626245, 4.13191383, 2.4756745…\n$ PROX_URA_GROWTH_AREA_TV <dbl> -2.846248368, -1.848971738, -2.648105057, -5.6…\n$ PROX_MRT_TV             <dbl> -1.61864578, -8.92998600, -3.40075727, -7.2870…\n$ PROX_PARK_TV            <dbl> -0.83749312, 2.28192684, 0.66565951, -3.340617…\n$ PROX_PRIMARY_SCH_TV     <dbl> 1.59230221, 6.70194543, 2.90580089, 12.9836104…\n$ PROX_SHOPPING_MALL_TV   <dbl> 2.753588422, -0.886626400, -1.056869486, -0.16…\n$ PROX_BUS_STOP_TV        <dbl> 2.0154464, 4.4941192, 3.0419145, 12.8383775, 0…\n$ NO_Of_UNITS_TV          <dbl> 0.480589953, -1.380026395, -0.045279967, -0.44…\n$ FAMILY_FRIENDLY_TV      <dbl> -0.06902748, 2.69655779, 0.04058290, 14.312764…\n$ FREEHOLD_TV             <dbl> 2.6213469, 3.0452799, 1.1970499, 8.7711485, 1.…\n$ Local_R2                <dbl> 0.8846744, 0.8899773, 0.8947007, 0.9073605, 0.…\n$ coords.x1               <dbl> 22085.12, 25656.84, 23963.99, 27044.28, 41042.…\n$ coords.x2               <dbl> 29951.54, 34546.20, 32890.80, 32319.77, 33743.…\n$ geometry                <POINT [m]> POINT (22085.12 29951.54), POINT (25656.…\n\n\n\nsummary(gwr.adaptive$SDF$yhat)\n\n    Min.  1st Qu.   Median     Mean  3rd Qu.     Max. \n  171347  1102001  1385528  1751842  1982307 13887901"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex08/Hands-On_Ex08.html#visualising-local-r2",
    "href": "Hands-On_Ex/Hands-On_Ex08/Hands-On_Ex08.html#visualising-local-r2",
    "title": "Hands-On Exercise 8: Calibrating Hedonic Pricing Model for Private Highrise Property with GWR Method",
    "section": "Visualising Local R2",
    "text": "Visualising Local R2\n\ntmap_mode(\"view\")\ntm_shape(mpsz_svy21)+\n  tm_polygons(alpha = 0.1) +\ntm_shape(condo_resale.sf.adaptive) +  \n  tm_dots(col = \"Local_R2\",\n          border.col = \"gray60\",\n          border.lwd = 1) +\n  tm_view(set.zoom.limits = c(11,14))"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex08/Hands-On_Ex08.html#visualising-coefficient-estimates",
    "href": "Hands-On_Ex/Hands-On_Ex08/Hands-On_Ex08.html#visualising-coefficient-estimates",
    "title": "Hands-On Exercise 8: Calibrating Hedonic Pricing Model for Private Highrise Property with GWR Method",
    "section": "Visualising Coefficient Estimates",
    "text": "Visualising Coefficient Estimates\n\ntmap_mode(\"view\")\nAREA_SQM_SE <- tm_shape(mpsz_svy21)+\n  tm_polygons(alpha = 0.1) +\ntm_shape(condo_resale.sf.adaptive) +  \n  tm_dots(col = \"AREA_SQM_SE\",\n          border.col = \"gray60\",\n          border.lwd = 1) +\n  tm_view(set.zoom.limits = c(11,14))\n\nAREA_SQM_TV <- tm_shape(mpsz_svy21)+\n  tm_polygons(alpha = 0.1) +\ntm_shape(condo_resale.sf.adaptive) +  \n  tm_dots(col = \"AREA_SQM_TV\",\n          border.col = \"gray60\",\n          border.lwd = 1) +\n  tm_view(set.zoom.limits = c(11,14))\n\ntmap_arrange(AREA_SQM_SE, AREA_SQM_TV, \n             asp=1, ncol=2,\n             sync = TRUE)"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex08/Hands-On_Ex08.html#by-ura-planning-region",
    "href": "Hands-On_Ex/Hands-On_Ex08/Hands-On_Ex08.html#by-ura-planning-region",
    "title": "Hands-On Exercise 8: Calibrating Hedonic Pricing Model for Private Highrise Property with GWR Method",
    "section": "By URA Planning Region",
    "text": "By URA Planning Region\n\ntm_shape(mpsz_svy21[mpsz_svy21$REGION_N==\"CENTRAL REGION\", ])+\n  tm_polygons()+\ntm_shape(condo_resale.sf.adaptive) + \n  tm_bubbles(col = \"Local_R2\",\n           size = 0.15,\n           border.col = \"gray60\",\n           border.lwd = 1)"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex02/In-Class_Ex02.html",
    "href": "In-Class_Ex/In-Class_Ex02/In-Class_Ex02.html",
    "title": "In-Class Exercise 2: Geospatial Data Wrangling",
    "section": "",
    "text": "Show The Code\npacman::p_load(sf, tidyverse, funModeling)"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex02/In-Class_Ex02.html#importing-geospatial",
    "href": "In-Class_Ex/In-Class_Ex02/In-Class_Ex02.html#importing-geospatial",
    "title": "In-Class Exercise 2: Geospatial Data Wrangling",
    "section": "Importing Geospatial",
    "text": "Importing Geospatial\nThe geoBoundaries data set\n\n\nShow The Code\ngeoNGA <- st_read(\"data/geospatial/\",\n                  layer = \"geoBoundaries-NGA-ADM2\") %>%\n  st_transform(crs = 26392)\n\n\nReading layer `geoBoundaries-NGA-ADM2' from data source \n  `C:\\Users\\la935\\Desktop\\IS415 - GAA\\IS415 - GAA (New)\\In-Class_Ex\\In-Class_Ex02\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 774 features and 6 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2.668534 ymin: 4.273007 xmax: 14.67882 ymax: 13.89442\nGeodetic CRS:  WGS 84\n\n\nThe NGA data set\n\n\nShow The Code\nNGA <- st_read(\"data/geospatial/\",\n                  layer = \"nga_admbnda_adm2_osgof_20190417\") %>%\n  st_transform(crs = 26392)\n\n\nReading layer `nga_admbnda_adm2_osgof_20190417' from data source \n  `C:\\Users\\la935\\Desktop\\IS415 - GAA\\IS415 - GAA (New)\\In-Class_Ex\\In-Class_Ex02\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 774 features and 16 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2.668534 ymin: 4.273007 xmax: 14.67882 ymax: 13.89442\nGeodetic CRS:  WGS 84"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex02/In-Class_Ex02.html#importing-aspatial-data",
    "href": "In-Class_Ex/In-Class_Ex02/In-Class_Ex02.html#importing-aspatial-data",
    "title": "In-Class Exercise 2: Geospatial Data Wrangling",
    "section": "Importing Aspatial Data",
    "text": "Importing Aspatial Data\n\n\nShow The Code\nwp_nga <- read_csv(\"data/aspatial/WPdx.csv\") %>%\n  filter(`#clean_country_name` == \"Nigeria\")"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex02/In-Class_Ex02.html#converting-aspatial-data-into-geospatial",
    "href": "In-Class_Ex/In-Class_Ex02/In-Class_Ex02.html#converting-aspatial-data-into-geospatial",
    "title": "In-Class Exercise 2: Geospatial Data Wrangling",
    "section": "Converting Aspatial Data into Geospatial",
    "text": "Converting Aspatial Data into Geospatial\n\n\nShow The Code\nwp_nga$Geometry = st_as_sfc(wp_nga$`New Georeferenced Column`)\nwp_nga\n\n\n# A tibble: 95,008 × 71\n   row_id `#source`      #lat_…¹ #lon_…² #repo…³ #stat…⁴ #wate…⁵ #wate…⁶ #wate…⁷\n    <dbl> <chr>            <dbl>   <dbl> <chr>   <chr>   <chr>   <chr>   <chr>  \n 1 429068 GRID3             7.98    5.12 08/29/… Unknown <NA>    <NA>    Tapsta…\n 2 222071 Federal Minis…    6.96    3.60 08/16/… Yes     Boreho… Well    Mechan…\n 3 160612 WaterAid          6.49    7.93 12/04/… Yes     Boreho… Well    Hand P…\n 4 160669 WaterAid          6.73    7.65 12/04/… Yes     Boreho… Well    <NA>   \n 5 160642 WaterAid          6.78    7.66 12/04/… Yes     Boreho… Well    Hand P…\n 6 160628 WaterAid          6.96    7.78 12/04/… Yes     Boreho… Well    Hand P…\n 7 160632 WaterAid          7.02    7.84 12/04/… Yes     Boreho… Well    Hand P…\n 8 642747 Living Water …    7.33    8.98 10/03/… Yes     Boreho… Well    Mechan…\n 9 642456 Living Water …    7.17    9.11 10/03/… Yes     Boreho… Well    Hand P…\n10 641347 Living Water …    7.20    9.22 03/28/… Yes     Boreho… Well    Hand P…\n# … with 94,998 more rows, 62 more variables: `#water_tech_category` <chr>,\n#   `#facility_type` <chr>, `#clean_country_name` <chr>, `#clean_adm1` <chr>,\n#   `#clean_adm2` <chr>, `#clean_adm3` <chr>, `#clean_adm4` <chr>,\n#   `#install_year` <dbl>, `#installer` <chr>, `#rehab_year` <lgl>,\n#   `#rehabilitator` <lgl>, `#management_clean` <chr>, `#status_clean` <chr>,\n#   `#pay` <chr>, `#fecal_coliform_presence` <chr>,\n#   `#fecal_coliform_value` <dbl>, `#subjective_quality` <chr>, …\n\n\n\n\nShow The Code\nwp_sf <- st_sf(wp_nga, crs=4326)\nwp_sf\n\n\nSimple feature collection with 95008 features and 70 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 2.707441 ymin: 4.301812 xmax: 14.21828 ymax: 13.86568\nGeodetic CRS:  WGS 84\n# A tibble: 95,008 × 71\n   row_id `#source`      #lat_…¹ #lon_…² #repo…³ #stat…⁴ #wate…⁵ #wate…⁶ #wate…⁷\n *  <dbl> <chr>            <dbl>   <dbl> <chr>   <chr>   <chr>   <chr>   <chr>  \n 1 429068 GRID3             7.98    5.12 08/29/… Unknown <NA>    <NA>    Tapsta…\n 2 222071 Federal Minis…    6.96    3.60 08/16/… Yes     Boreho… Well    Mechan…\n 3 160612 WaterAid          6.49    7.93 12/04/… Yes     Boreho… Well    Hand P…\n 4 160669 WaterAid          6.73    7.65 12/04/… Yes     Boreho… Well    <NA>   \n 5 160642 WaterAid          6.78    7.66 12/04/… Yes     Boreho… Well    Hand P…\n 6 160628 WaterAid          6.96    7.78 12/04/… Yes     Boreho… Well    Hand P…\n 7 160632 WaterAid          7.02    7.84 12/04/… Yes     Boreho… Well    Hand P…\n 8 642747 Living Water …    7.33    8.98 10/03/… Yes     Boreho… Well    Mechan…\n 9 642456 Living Water …    7.17    9.11 10/03/… Yes     Boreho… Well    Hand P…\n10 641347 Living Water …    7.20    9.22 03/28/… Yes     Boreho… Well    Hand P…\n# … with 94,998 more rows, 62 more variables: `#water_tech_category` <chr>,\n#   `#facility_type` <chr>, `#clean_country_name` <chr>, `#clean_adm1` <chr>,\n#   `#clean_adm2` <chr>, `#clean_adm3` <chr>, `#clean_adm4` <chr>,\n#   `#install_year` <dbl>, `#installer` <chr>, `#rehab_year` <lgl>,\n#   `#rehabilitator` <lgl>, `#management_clean` <chr>, `#status_clean` <chr>,\n#   `#pay` <chr>, `#fecal_coliform_presence` <chr>,\n#   `#fecal_coliform_value` <dbl>, `#subjective_quality` <chr>, …"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex02/In-Class_Ex02.html#projection-transformation",
    "href": "In-Class_Ex/In-Class_Ex02/In-Class_Ex02.html#projection-transformation",
    "title": "In-Class Exercise 2: Geospatial Data Wrangling",
    "section": "Projection Transformation",
    "text": "Projection Transformation\n\n\nShow The Code\nwp_sf <- wp_sf %>%\n  st_transform(crs = 26392)\n\n\n\nst_crs(wp_sf)\n\nCoordinate Reference System:\n  User input: EPSG:26392 \n  wkt:\nPROJCRS[\"Minna / Nigeria Mid Belt\",\n    BASEGEOGCRS[\"Minna\",\n        DATUM[\"Minna\",\n            ELLIPSOID[\"Clarke 1880 (RGS)\",6378249.145,293.465,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4263]],\n    CONVERSION[\"Nigeria Mid Belt\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",4,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",8.5,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",0.99975,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",670553.98,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",0,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"(E)\",east,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"(N)\",north,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Engineering survey, topographic mapping.\"],\n        AREA[\"Nigeria between 6°30'E and 10°30'E, onshore and offshore shelf.\"],\n        BBOX[3.57,6.5,13.53,10.51]],\n    ID[\"EPSG\",26392]]"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex03/In-Class_Ex03.html",
    "href": "In-Class_Ex/In-Class_Ex03/In-Class_Ex03.html",
    "title": "In-Class Exercise 3: Analytical Mapping",
    "section": "",
    "text": "Show The Code\npacman::p_load(tmap, tidyverse, sf)\n\n\n\n\n\n\n\nShow The Code\nNGA_wp <- read_rds(\"data/rds/NGA_wp.rds\")"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex03/In-Class_Ex03.html#visualising-distribution-of-non-functional-water-point",
    "href": "In-Class_Ex/In-Class_Ex03/In-Class_Ex03.html#visualising-distribution-of-non-functional-water-point",
    "title": "In-Class Exercise 3: Analytical Mapping",
    "section": "Visualising Distribution of Non-Functional Water Point",
    "text": "Visualising Distribution of Non-Functional Water Point\n\n\nShow The Code\np1 <- tm_shape(NGA_wp) +\n  tm_fill(\"wp_functional\",\n          n = 10,\n          style = \"equal\",\n          palette = \"Blues\") +\n  tm_borders(lwd = 0.1,\n             alpha = 1) +\n  tm_layout(main.title = \"Distribution of functional water point by LGAs\",\n            legend.outside = FALSE)\n\n\n\n\nShow The Code\np2 <- tm_shape(NGA_wp) +\n  tm_fill(\"total_wp\",\n          n = 10,\n          style = \"equal\",\n          palette = \"Blues\") +\n  tm_borders(lwd = 0.1,\n             alpha = 1) +\n  tm_layout(main.title = \"Distribution of total  water point by LGAs\",\n            legend.outside = FALSE)\n\n\n\ntmap_arrange(p2, p1, nrow = 1)"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex03/In-Class_Ex03.html#deriving-proportion-of-functional-water-points-and-non-functional-water-points",
    "href": "In-Class_Ex/In-Class_Ex03/In-Class_Ex03.html#deriving-proportion-of-functional-water-points-and-non-functional-water-points",
    "title": "In-Class Exercise 3: Analytical Mapping",
    "section": "Deriving Proportion of Functional Water Points and Non-Functional Water Points",
    "text": "Deriving Proportion of Functional Water Points and Non-Functional Water Points\n\n\nShow The Code\nNGA_wp <- NGA_wp %>%\n  mutate(pct_functional = wp_functional/total_wp) %>%\n  mutate(pct_nonfunctional = wp_nonfunctional/total_wp)"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex03/In-Class_Ex03.html#plotting-map-of-rate",
    "href": "In-Class_Ex/In-Class_Ex03/In-Class_Ex03.html#plotting-map-of-rate",
    "title": "In-Class Exercise 3: Analytical Mapping",
    "section": "Plotting Map of Rate",
    "text": "Plotting Map of Rate\n\n\nShow The Code\ntm_shape(NGA_wp) +\n  tm_fill(\"pct_functional\",\n          n = 10,\n          style = \"equal\",\n          palette = \"Blues\",\n          legend.hist = TRUE) +\n  tm_borders(lwd = 0.1,\n             alpha = 1) +\n  tm_layout(main.title = \"Rate map of functional water point by LGAs\",\n            legend.outside = TRUE)"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex03/In-Class_Ex03.html#percentile-map---data-preparation",
    "href": "In-Class_Ex/In-Class_Ex03/In-Class_Ex03.html#percentile-map---data-preparation",
    "title": "In-Class Exercise 3: Analytical Mapping",
    "section": "Percentile Map - Data Preparation",
    "text": "Percentile Map - Data Preparation\n\nNGA_wp <- NGA_wp %>%\n  drop_na()\n\n\npercent <- c(0,.01,.1,.5,.9,.99,1)\nvar <- NGA_wp[\"pct_functional\"] %>%\n  st_set_geometry(NULL)\nquantile(var[,1], percent)\n\n       0%        1%       10%       50%       90%       99%      100% \n0.0000000 0.0000000 0.2169811 0.4791667 0.8611111 1.0000000 1.0000000"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex03/In-Class_Ex03.html#creating-the-get.var-function",
    "href": "In-Class_Ex/In-Class_Ex03/In-Class_Ex03.html#creating-the-get.var-function",
    "title": "In-Class Exercise 3: Analytical Mapping",
    "section": "Creating the get.var Function",
    "text": "Creating the get.var Function\n\nget.var <- function(vname,df) {\n  v <- df[vname] %>% \n    st_set_geometry(NULL)\n  v <- unname(v[,1])\n  return(v)\n}"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex03/In-Class_Ex03.html#a-percentile-mapping-function",
    "href": "In-Class_Ex/In-Class_Ex03/In-Class_Ex03.html#a-percentile-mapping-function",
    "title": "In-Class Exercise 3: Analytical Mapping",
    "section": "A Percentile Mapping Function",
    "text": "A Percentile Mapping Function\n\npercentmap <- function(vnam, df, legtitle=NA, mtitle=\"Percentile Map\"){\n  percent <- c(0,.01,.1,.5,.9,.99,1)\n  var <- get.var(vnam, df)\n  bperc <- quantile(var, percent)\n  tm_shape(df) +\n  tm_polygons() +\n  tm_shape(df) +\n     tm_fill(vnam,\n             title=legtitle,\n             breaks=bperc,\n             palette=\"Blues\",\n          labels=c(\"< 1%\", \"1% - 10%\", \"10% - 50%\", \"50% - 90%\", \"90% - 99%\", \"> 99%\"))  +\n  tm_borders() +\n  tm_layout(main.title = mtitle, \n            title.position = c(\"right\",\"bottom\"))\n}"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex03/In-Class_Ex03.html#test-drive-the-percentile-mapping-function",
    "href": "In-Class_Ex/In-Class_Ex03/In-Class_Ex03.html#test-drive-the-percentile-mapping-function",
    "title": "In-Class Exercise 3: Analytical Mapping",
    "section": "Test Drive the Percentile Mapping Function",
    "text": "Test Drive the Percentile Mapping Function\n\npercentmap(\"total_wp\", NGA_wp)"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex03/In-Class_Ex03.html#box-map",
    "href": "In-Class_Ex/In-Class_Ex03/In-Class_Ex03.html#box-map",
    "title": "In-Class Exercise 3: Analytical Mapping",
    "section": "Box Map",
    "text": "Box Map\n\nggplot(data = NGA_wp,\n       aes(x = \"\",\n           y = wp_nonfunctional)) +\n  geom_boxplot()"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex03/In-Class_Ex03.html#creating-the-boxbreaks-function",
    "href": "In-Class_Ex/In-Class_Ex03/In-Class_Ex03.html#creating-the-boxbreaks-function",
    "title": "In-Class Exercise 3: Analytical Mapping",
    "section": "Creating the Boxbreaks Function",
    "text": "Creating the Boxbreaks Function\n\nboxbreaks <- function(v,mult=1.5) {\n  qv <- unname(quantile(v))\n  iqr <- qv[4] - qv[2]\n  upfence <- qv[4] + mult * iqr\n  lofence <- qv[2] - mult * iqr\n  # initialize break points vector\n  bb <- vector(mode=\"numeric\",length=7)\n  # logic for lower and upper fences\n  if (lofence < qv[1]) {  # no lower outliers\n    bb[1] <- lofence\n    bb[2] <- floor(qv[1])\n  } else {\n    bb[2] <- lofence\n    bb[1] <- qv[1]\n  }\n  if (upfence > qv[5]) { # no upper outliers\n    bb[7] <- upfence\n    bb[6] <- ceiling(qv[5])\n  } else {\n    bb[6] <- upfence\n    bb[7] <- qv[5]\n  }\n  bb[3:5] <- qv[2:4]\n  return(bb)\n}"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex03/In-Class_Ex03.html#creating-the-get.var-function-1",
    "href": "In-Class_Ex/In-Class_Ex03/In-Class_Ex03.html#creating-the-get.var-function-1",
    "title": "In-Class Exercise 3: Analytical Mapping",
    "section": "Creating the get.var Function",
    "text": "Creating the get.var Function\n\nget.var <- function(vname,df) {\n  v <- df[vname] %>% st_set_geometry(NULL)\n  v <- unname(v[,1])\n  return(v)\n}"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex03/In-Class_Ex03.html#test-drive-the-newly-created-function",
    "href": "In-Class_Ex/In-Class_Ex03/In-Class_Ex03.html#test-drive-the-newly-created-function",
    "title": "In-Class Exercise 3: Analytical Mapping",
    "section": "Test Drive the Newly Created Function",
    "text": "Test Drive the Newly Created Function\n\nvar <- get.var(\"wp_nonfunctional\", NGA_wp) \nboxbreaks(var)\n\n[1] -56.5   0.0  14.0  34.0  61.0 131.5 278.0"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex03/In-Class_Ex03.html#boxmap-function",
    "href": "In-Class_Ex/In-Class_Ex03/In-Class_Ex03.html#boxmap-function",
    "title": "In-Class Exercise 3: Analytical Mapping",
    "section": "Boxmap Function",
    "text": "Boxmap Function\n\nboxmap <- function(vnam, df, \n                   legtitle=NA,\n                   mtitle=\"Box Map\",\n                   mult=1.5){\n  var <- get.var(vnam,df)\n  bb <- boxbreaks(var)\n  tm_shape(df) +\n    tm_polygons() +\n  tm_shape(df) +\n     tm_fill(vnam,title=legtitle,\n             breaks=bb,\n             palette=\"Blues\",\n          labels = c(\"lower outlier\", \n                     \"< 25%\", \n                     \"25% - 50%\", \n                     \"50% - 75%\",\n                     \"> 75%\", \n                     \"upper outlier\"))  +\n  tm_borders() +\n  tm_layout(main.title = mtitle, \n            title.position = c(\"left\",\n                               \"top\"))\n}\n\n\ntmap_mode(\"plot\")\nboxmap(\"wp_nonfunctional\", NGA_wp)"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex03/In-Class_Ex03.html#recode-zero",
    "href": "In-Class_Ex/In-Class_Ex03/In-Class_Ex03.html#recode-zero",
    "title": "In-Class Exercise 3: Analytical Mapping",
    "section": "Recode Zero",
    "text": "Recode Zero\n\nNGA_wp <- NGA_wp %>%\n  mutate(wp_functional = na_if(\n    total_wp, total_wp < 0))"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex04/In-Class_Ex04.html",
    "href": "In-Class_Ex/In-Class_Ex04/In-Class_Ex04.html",
    "title": "In-Class Exercise 4: 1st Order Spatial Point Patterns Analysis Methods",
    "section": "",
    "text": "pacman::p_load(maptools, sf, raster, spatstat, tmap)\n\n\n\n\n\nchildcare_sf <- st_read(\"data/child-care-services-geojson.geojson\") %>%\n  st_transform(crs = 3414)\n\nReading layer `child-care-services-geojson' from data source \n  `C:\\Users\\la935\\Desktop\\IS415 - GAA\\IS415 - GAA (New)\\In-Class_Ex\\In-Class_Ex04\\data\\child-care-services-geojson.geojson' \n  using driver `GeoJSON'\nSimple feature collection with 1545 features and 2 fields\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 103.6824 ymin: 1.248403 xmax: 103.9897 ymax: 1.462134\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\n\n\n\nsg_sf <- st_read(dsn = \"data\", layer=\"CostalOutline\")\n\nReading layer `CostalOutline' from data source \n  `C:\\Users\\la935\\Desktop\\IS415 - GAA\\IS415 - GAA (New)\\In-Class_Ex\\In-Class_Ex04\\data' \n  using driver `ESRI Shapefile'\nSimple feature collection with 60 features and 4 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 2663.926 ymin: 16357.98 xmax: 56047.79 ymax: 50244.03\nProjected CRS: SVY21\n\n\n\nmpsz_sf <- st_read(dsn = \"data\", \n                layer = \"MP14_SUBZONE_WEB_PL\")\n\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `C:\\Users\\la935\\Desktop\\IS415 - GAA\\IS415 - GAA (New)\\In-Class_Ex\\In-Class_Ex04\\data' \n  using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n\n\n\n\n\n\ntmap_mode('view')\ntm_shape(childcare_sf)+\n  tm_dots(alph=0.5, size=0.01)+\n  tm_view(set.zoom.limits = c(11,14))\n\n\n\n\n\n\n\ntmap_mode('plot')"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex04/In-Class_Ex04.html#converting-sf-data-frame-to-sps-spatial-class",
    "href": "In-Class_Ex/In-Class_Ex04/In-Class_Ex04.html#converting-sf-data-frame-to-sps-spatial-class",
    "title": "In-Class Exercise 4: 1st Order Spatial Point Patterns Analysis Methods",
    "section": "Converting sf Data Frame to sp’s Spatial Class",
    "text": "Converting sf Data Frame to sp’s Spatial Class\n\nchildcare <- as_Spatial(childcare_sf)\nmpsz <- as_Spatial(mpsz_sf)\nsg <- as_Spatial(sg_sf)\n\n\nchildcare\n\nclass       : SpatialPointsDataFrame \nfeatures    : 1545 \nextent      : 11203.01, 45404.24, 25667.6, 49300.88  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \nvariables   : 2\nnames       :    Nameescription \nmin values  :   kml_1, <center><table><tr><th colspan='2' align='center'><em>Attributes</em></th></tr><tr bgcolor=\"#E3E3F3\"> <th>ADDRESSBLOCKHOUSENUMBER</th> <td></td> </tr><tr bgcolor=\"\"> <th>ADDRESSBUILDINGNAME</th> <td></td> </tr><tr bgcolor=\"#E3E3F3\"> <th>ADDRESSPOSTALCODE</th> <td>018989</td> </tr><tr bgcolor=\"\"> <th>ADDRESSSTREETNAME</th> <td>1, MARINA BOULEVARD, #B1 - 01, ONE MARINA BOULEVARD, SINGAPORE 018989</td> </tr><tr bgcolor=\"#E3E3F3\"> <th>ADDRESSTYPE</th> <td></td> </tr><tr bgcolor=\"\"> <th>DESCRIPTION</th> <td></td> </tr><tr bgcolor=\"#E3E3F3\"> <th>HYPERLINK</th> <td></td> </tr><tr bgcolor=\"\"> <th>LANDXADDRESSPOINT</th> <td>0</td> </tr><tr bgcolor=\"#E3E3F3\"> <th>LANDYADDRESSPOINT</th> <td>0</td> </tr><tr bgcolor=\"\"> <th>NAME</th> <td>THE LITTLE SKOOL-HOUSE INTERNATIONAL PTE. LTD.</td> </tr><tr bgcolor=\"#E3E3F3\"> <th>PHOTOURL</th> <td></td> </tr><tr bgcolor=\"\"> <th>ADDRESSFLOORNUMBER</th> <td></td> </tr><tr bgcolor=\"#E3E3F3\"> <th>INC_CRC</th> <td>08F73931F4A691F4</td> </tr><tr bgcolor=\"\"> <th>FMEL_UPD_D</th> <td>20200826094036</td> </tr><tr bgcolor=\"#E3E3F3\"> <th>ADDRESSUNITNUMBER</th> <td></td> </tr></table></center> \nmax values  : kml_999,                  <center><table><tr><th colspan='2' align='center'><em>Attributes</em></th></tr><tr bgcolor=\"#E3E3F3\"> <th>ADDRESSBLOCKHOUSENUMBER</th> <td></td> </tr><tr bgcolor=\"\"> <th>ADDRESSBUILDINGNAME</th> <td></td> </tr><tr bgcolor=\"#E3E3F3\"> <th>ADDRESSPOSTALCODE</th> <td>829646</td> </tr><tr bgcolor=\"\"> <th>ADDRESSSTREETNAME</th> <td>200, PONGGOL SEVENTEENTH AVENUE, SINGAPORE 829646</td> </tr><tr bgcolor=\"#E3E3F3\"> <th>ADDRESSTYPE</th> <td></td> </tr><tr bgcolor=\"\"> <th>DESCRIPTION</th> <td>Child Care Services</td> </tr><tr bgcolor=\"#E3E3F3\"> <th>HYPERLINK</th> <td></td> </tr><tr bgcolor=\"\"> <th>LANDXADDRESSPOINT</th> <td>0</td> </tr><tr bgcolor=\"#E3E3F3\"> <th>LANDYADDRESSPOINT</th> <td>0</td> </tr><tr bgcolor=\"\"> <th>NAME</th> <td>RAFFLES KIDZ @ PUNGGOL PTE LTD</td> </tr><tr bgcolor=\"#E3E3F3\"> <th>PHOTOURL</th> <td></td> </tr><tr bgcolor=\"\"> <th>ADDRESSFLOORNUMBER</th> <td></td> </tr><tr bgcolor=\"#E3E3F3\"> <th>INC_CRC</th> <td>379D017BF244B0FA</td> </tr><tr bgcolor=\"\"> <th>FMEL_UPD_D</th> <td>20200826094036</td> </tr><tr bgcolor=\"#E3E3F3\"> <th>ADDRESSUNITNUMBER</th> <td></td> </tr></table></center> \n\n\n\nmpsz\n\nclass       : SpatialPolygonsDataFrame \nfeatures    : 323 \nextent      : 2667.538, 56396.44, 15748.72, 50256.33  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +datum=WGS84 +units=m +no_defs \nvariables   : 15\nnames       : OBJECTID, SUBZONE_NO, SUBZONE_N, SUBZONE_C, CA_IND, PLN_AREA_N, PLN_AREA_C,       REGION_N, REGION_C,          INC_CRC, FMEL_UPD_D,     X_ADDR,     Y_ADDR,    SHAPE_Leng,    SHAPE_Area \nmin values  :        1,          1, ADMIRALTY,    AMSZ01,      N, ANG MO KIO,         AM, CENTRAL REGION,       CR, 00F5E30B5C9B7AD8,      16409,  5092.8949,  19579.069, 871.554887798, 39437.9352703 \nmax values  :      323,         17,    YUNNAN,    YSSZ09,      Y,     YISHUN,         YS,    WEST REGION,       WR, FFCCF172717C2EAF,      16409, 50424.7923, 49552.7904, 68083.9364708,  69748298.792 \n\n\n\nsg\n\nclass       : SpatialPolygonsDataFrame \nfeatures    : 60 \nextent      : 2663.926, 56047.79, 16357.98, 50244.03  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +datum=WGS84 +units=m +no_defs \nvariables   : 4\nnames       : GDO_GID, MSLINK, MAPID,              COSTAL_NAM \nmin values  :       1,      1,     0,             ISLAND LINK \nmax values  :      60,     67,     0, SINGAPORE - MAIN ISLAND"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex04/In-Class_Ex04.html#converting-the-spatial-class-into-generic-sp-format",
    "href": "In-Class_Ex/In-Class_Ex04/In-Class_Ex04.html#converting-the-spatial-class-into-generic-sp-format",
    "title": "In-Class Exercise 4: 1st Order Spatial Point Patterns Analysis Methods",
    "section": "Converting the Spatial Class into Generic sp Format",
    "text": "Converting the Spatial Class into Generic sp Format\n\nchildcare_sp <- as(childcare, \"SpatialPoints\")\nsg_sp <- as(sg, \"SpatialPolygons\")\n\n\nchildcare_sp\n\nclass       : SpatialPoints \nfeatures    : 1545 \nextent      : 11203.01, 45404.24, 25667.6, 49300.88  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \n\n\n\nsg_sp\n\nclass       : SpatialPolygons \nfeatures    : 60 \nextent      : 2663.926, 56047.79, 16357.98, 50244.03  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +datum=WGS84 +units=m +no_defs"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex04/In-Class_Ex04.html#converting-the-generic-sp-format-into-spatstats-ppp-format",
    "href": "In-Class_Ex/In-Class_Ex04/In-Class_Ex04.html#converting-the-generic-sp-format-into-spatstats-ppp-format",
    "title": "In-Class Exercise 4: 1st Order Spatial Point Patterns Analysis Methods",
    "section": "Converting the Generic sp Format into Spatstat’s ppp Format",
    "text": "Converting the Generic sp Format into Spatstat’s ppp Format\n\nchildcare_ppp <- as(childcare_sp, \"ppp\")\nchildcare_ppp\n\nPlanar point pattern: 1545 points\nwindow: rectangle = [11203.01, 45404.24] x [25667.6, 49300.88] units\n\n\n\nplot(childcare_ppp)\n\n\n\n\n\nsummary(childcare_ppp)\n\nPlanar point pattern:  1545 points\nAverage intensity 1.91145e-06 points per square unit\n\n*Pattern contains duplicated points*\n\nCoordinates are given to 3 decimal places\ni.e. rounded to the nearest multiple of 0.001 units\n\nWindow: rectangle = [11203.01, 45404.24] x [25667.6, 49300.88] units\n                    (34200 x 23630 units)\nWindow area = 808287000 square units"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex04/In-Class_Ex04.html#handling-duplicated-point-events",
    "href": "In-Class_Ex/In-Class_Ex04/In-Class_Ex04.html#handling-duplicated-point-events",
    "title": "In-Class Exercise 4: 1st Order Spatial Point Patterns Analysis Methods",
    "section": "Handling Duplicated Point Events",
    "text": "Handling Duplicated Point Events\n\nchildcare_ppp_jit <- rjitter(childcare_ppp,\n                             retry=TRUE,\n                             nsim=1,\n                             drop=TRUE)\nany(duplicated(childcare_ppp_jit))\n\n[1] FALSE"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex05/data/stores.html",
    "href": "In-Class_Ex/In-Class_Ex05/data/stores.html",
    "title": "Leon's IS415 (GAA) Journey",
    "section": "",
    "text": "<!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’>     \n\n\n        0 0     false"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex05/data/study_area.html",
    "href": "In-Class_Ex/In-Class_Ex05/data/study_area.html",
    "title": "Leon's IS415 (GAA) Journey",
    "section": "",
    "text": "<!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’>     dataset\n\n\n        0 0     false"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex05/In-Class_Ex05.html",
    "href": "In-Class_Ex/In-Class_Ex05/In-Class_Ex05.html",
    "title": "In-Class Exercise 5: Advanced Spatial Point Patterns Analysis: Local Co-Location Quotient",
    "section": "",
    "text": "pacman::p_load(tidyverse, tmap, sf, sfdep)\n\n\n\n\n\nstudyArea <- st_read(dsn=\"data\",\n                     layer=\"study_area\") %>%\n  st_transform(crs = 3829)\n\nReading layer `study_area' from data source \n  `C:\\Users\\la935\\Desktop\\IS415 - GAA\\IS415 - GAA (New)\\In-Class_Ex\\In-Class_Ex05\\data' \n  using driver `ESRI Shapefile'\nSimple feature collection with 7 features and 7 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 121.4836 ymin: 25.00776 xmax: 121.592 ymax: 25.09288\nGeodetic CRS:  TWD97\n\n\n\nstores <- st_read(dsn=\"data\",\n                  layer = \"stores\") %>%\n  st_transform(crs = 3829)\n\nReading layer `stores' from data source \n  `C:\\Users\\la935\\Desktop\\IS415 - GAA\\IS415 - GAA (New)\\In-Class_Ex\\In-Class_Ex05\\data' \n  using driver `ESRI Shapefile'\nSimple feature collection with 1409 features and 4 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 121.4902 ymin: 25.01257 xmax: 121.5874 ymax: 25.08557\nGeodetic CRS:  TWD97\n\n\n\n\n\n\ntmap_mode(\"view\")\ntm_shape(studyArea) +\n  tm_polygons() +\ntm_shape(stores) +\n  tm_dots(col = \"Name\",\n          size = 0.01,\n          border.col = \"black\",\n          border.lwd = 0.5) +\n  tm_view(set.zoom.limits = c(12, 16))"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex06/In-Class_Ex06.html",
    "href": "In-Class_Ex/In-Class_Ex06/In-Class_Ex06.html",
    "title": "In-Class Exercise 6:",
    "section": "",
    "text": "pacman::p_load(sf, sfdep, tmap, tidyverse)\n\n\n\n\n\nhunan <- st_read(dsn = \"data/geospatial\", \n                 layer = \"Hunan\")\n\nReading layer `Hunan' from data source \n  `C:\\Users\\la935\\Desktop\\IS415 - GAA\\IS415 - GAA (New)\\In-Class_Ex\\In-Class_Ex06\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 88 features and 7 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 108.7831 ymin: 24.6342 xmax: 114.2544 ymax: 30.12812\nGeodetic CRS:  WGS 84\n\n\n\n\n\n\nhunan2012 <- read_csv(\"data/aspatial/Hunan_2012.csv\")\n\n\n\n\n\nhunan_GDPPC <- left_join(hunan,hunan2012)%>%\n  select(1:4, 7, 15)\n\n\n\n\n\ntmap_mode(\"plot\")\ntm_shape(hunan_GDPPC) +\n  tm_fill(\"GDPPC\",\n          style = \"quantile\",\n          palette = \"Blues\",\n          title = \"GDPPC\") +\n  tm_layout(main.title = \"Distribution of GDP per capita by distribution\",\n            main.title.position = \"center\",\n            main.title.size = 0.6,\n            legend.height = 0.45,\n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type = \"8star\", size = 2) +\n  tm_scale_bar() + \n  tm_grid(alpha = 0.2)"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex06/In-Class_Ex06.html#derive-contiguity-neighbour-list-using-rooks-method",
    "href": "In-Class_Ex/In-Class_Ex06/In-Class_Ex06.html#derive-contiguity-neighbour-list-using-rooks-method",
    "title": "In-Class Exercise 6:",
    "section": "Derive contiguity neighbour list using Rook’s method",
    "text": "Derive contiguity neighbour list using Rook’s method\n\ncn_rook <- hunan_GDPPC %>%\n  mutate(nb = st_contiguity(geometry),\n         queen = FALSE,\n         .before = 1)"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex06/In-Class_Ex06.html#queens-method",
    "href": "In-Class_Ex/In-Class_Ex06/In-Class_Ex06.html#queens-method",
    "title": "In-Class Exercise 6:",
    "section": "Queen’s method",
    "text": "Queen’s method\n\nwm_q <- hunan_GDPPC %>%\n  mutate(nb = st_contiguity(geometry),\n         wt = st_weights(nb),\n         .before = 1)"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex06/In-Class_Ex06.html#rooks-method",
    "href": "In-Class_Ex/In-Class_Ex06/In-Class_Ex06.html#rooks-method",
    "title": "In-Class Exercise 6:",
    "section": "Rooks method",
    "text": "Rooks method\n\nwm_r <- hunan_GDPPC %>%\n  mutate(nb = st_contiguity(geometry),\n         queen = FALSE,\n         wt = st_weights(nb),\n         .before = 1)"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex07/In-Class_Ex07.html",
    "href": "In-Class_Ex/In-Class_Ex07/In-Class_Ex07.html",
    "title": "In-Class Exercise 7: GLSA",
    "section": "",
    "text": "pacman::p_load(sf, sfdep, tmap, tidyverse, plotly)\n\n\n\n\n\n\n\nhunan <- st_read(dsn = \"data/geospatial\", \n                 layer = \"Hunan\")\n\nReading layer `Hunan' from data source \n  `C:\\Users\\la935\\Desktop\\IS415 - GAA\\IS415 - GAA (New)\\In-Class_Ex\\In-Class_Ex07\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 88 features and 7 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 108.7831 ymin: 24.6342 xmax: 114.2544 ymax: 30.12812\nGeodetic CRS:  WGS 84\n\n\n\n\n\n\nhunan2012 <- read_csv(\"data/aspatial/Hunan_2012.csv\")\n\n\n\n\n\nhunan_GDPPC <- left_join(hunan,hunan2012) %>%\n  select(1:4, 7, 15)\n\n\n\n\n\ntmap_mode(\"plot\")\ntm_shape(hunan_GDPPC) +\n  tm_fill(\"GDPPC\", \n          style = \"quantile\", \n          palette = \"Blues\",\n          title = \"GDPPC\") +\n  tm_layout(main.title = \"Distribution of GDP per capita by district, Hunan Province\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar() +\n  tm_grid(alpha =0.2)"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex07/In-Class_Ex07.html#deriving-contiguity-weights-queens-method",
    "href": "In-Class_Ex/In-Class_Ex07/In-Class_Ex07.html#deriving-contiguity-weights-queens-method",
    "title": "In-Class Exercise 7: GLSA",
    "section": "2.1 Deriving Contiguity Weights: Queen’s Method",
    "text": "2.1 Deriving Contiguity Weights: Queen’s Method\n\nwm_q <- hunan_GDPPC %>%   \n  mutate(nb = st_contiguity(geometry),          wt = st_weights(nb,                          style = \"W\"),          .before = 1)"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex07/In-Class_Ex07.html#computing-global-morans-i",
    "href": "In-Class_Ex/In-Class_Ex07/In-Class_Ex07.html#computing-global-morans-i",
    "title": "In-Class Exercise 7: GLSA",
    "section": "2.2 Computing Global Moran’s I",
    "text": "2.2 Computing Global Moran’s I\n\nmoranI <- global_moran(wm_q$GDPPC,\n                       wm_q$nb,\n                       wm_q$wt)"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex07/In-Class_Ex07.html#performing-global-morans-i-test",
    "href": "In-Class_Ex/In-Class_Ex07/In-Class_Ex07.html#performing-global-morans-i-test",
    "title": "In-Class Exercise 7: GLSA",
    "section": "2.3 Performing Global Moran’s I Test",
    "text": "2.3 Performing Global Moran’s I Test\n\nglobal_moran_test(wm_q$GDPPC,\n                  wm_q$nb,\n                  wm_q$wt)\n\n\n    Moran I test under randomisation\n\ndata:  x  \nweights: listw    \n\nMoran I statistic standard deviate = 4.7351, p-value = 1.095e-06\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n      0.300749970      -0.011494253       0.004348351"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex07/In-Class_Ex07.html#performing-global-morans-i-permutation-test",
    "href": "In-Class_Ex/In-Class_Ex07/In-Class_Ex07.html#performing-global-morans-i-permutation-test",
    "title": "In-Class Exercise 7: GLSA",
    "section": "2.4 Performing Global Moran’s I Permutation Test",
    "text": "2.4 Performing Global Moran’s I Permutation Test\n\nset.seed(1234)\nglobal_moran_perm(wm_q$GDPPC,\n                 wm_q$nb,\n                 wm_q$wt,\n                 nsim = 99)\n\n\n    Monte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 100 \n\nstatistic = 0.30075, observed rank = 100, p-value < 2.2e-16\nalternative hypothesis: two.sided"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex07/In-Class_Ex07.html#computing-local-morans-i-1",
    "href": "In-Class_Ex/In-Class_Ex07/In-Class_Ex07.html#computing-local-morans-i-1",
    "title": "In-Class Exercise 7: GLSA",
    "section": "3.1 Computing Local Moran’s I",
    "text": "3.1 Computing Local Moran’s I\n\nlisa <- wm_q %>%\n  mutate(local_moran = local_moran(\n    GDPPC, nb, wt, nsim = 99),\n      .before = 1) %>%\n  unnest(local_moran)\n  #important to unnest\nlisa\n\nSimple feature collection with 88 features and 20 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 108.7831 ymin: 24.6342 xmax: 114.2544 ymax: 30.12812\nGeodetic CRS:  WGS 84\n# A tibble: 88 × 21\n         ii        eii   var_ii    z_ii    p_ii p_ii_…¹ p_fol…² skewn…³ kurtosis\n      <dbl>      <dbl>    <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>    <dbl>\n 1 -0.00147  0.00177    4.18e-4 -0.158  0.874      0.82    0.41  -0.812  0.652  \n 2  0.0259   0.00641    1.05e-2  0.190  0.849      0.96    0.48  -1.09   1.89   \n 3 -0.0120  -0.0374     1.02e-1  0.0796 0.937      0.76    0.38   0.824  0.0461 \n 4  0.00102 -0.0000349  4.37e-6  0.506  0.613      0.64    0.32   1.04   1.61   \n 5  0.0148  -0.00340    1.65e-3  0.449  0.654      0.5     0.25   1.64   3.96   \n 6 -0.0388  -0.00339    5.45e-3 -0.480  0.631      0.82    0.41   0.614 -0.264  \n 7  3.37    -0.198      1.41e+0  3.00   0.00266    0.08    0.04   1.46   2.74   \n 8  1.56    -0.265      8.04e-1  2.04   0.0417     0.08    0.04   0.459 -0.519  \n 9  4.42     0.0450     1.79e+0  3.27   0.00108    0.02    0.01   0.746 -0.00582\n10 -0.399   -0.0505     8.59e-2 -1.19   0.234      0.28    0.14  -0.685  0.134  \n# … with 78 more rows, 12 more variables: mean <fct>, median <fct>,\n#   pysal <fct>, nb <nb>, wt <list>, NAME_2 <chr>, ID_3 <int>, NAME_3 <chr>,\n#   ENGTYPE_3 <chr>, County <chr>, GDPPC <dbl>, geometry <POLYGON [°]>, and\n#   abbreviated variable names ¹​p_ii_sim, ²​p_folded_sim, ³​skewness"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex07/In-Class_Ex07.html#visualising-local-morans-i",
    "href": "In-Class_Ex/In-Class_Ex07/In-Class_Ex07.html#visualising-local-morans-i",
    "title": "In-Class Exercise 7: GLSA",
    "section": "3.2 Visualising Local Moran’s I",
    "text": "3.2 Visualising Local Moran’s I\n\ntmap_mode(\"plot\")\ntm_shape(lisa) +\n  tm_fill(\"ii\") +\n  tm_borders(alpha = 0.5) +\n  tm_view(set.zoom.limits = c(6, 8))"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex07/In-Class_Ex07.html#visualising-p-value-of-morans-i",
    "href": "In-Class_Ex/In-Class_Ex07/In-Class_Ex07.html#visualising-p-value-of-morans-i",
    "title": "In-Class Exercise 7: GLSA",
    "section": "3.3 Visualising p-value of Moran’s I",
    "text": "3.3 Visualising p-value of Moran’s I\n\ntmap_mode(\"plot\")\ntm_shape(lisa) +\n  tm_fill(\"p_ii\") +\n  tm_borders(alpha = 0.5) +\n  tm_view(set.zoom.limits = c(6, 8))"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex07/In-Class_Ex07.html#visualising-local-morans-i-1",
    "href": "In-Class_Ex/In-Class_Ex07/In-Class_Ex07.html#visualising-local-morans-i-1",
    "title": "In-Class Exercise 7: GLSA",
    "section": "3.4 Visualising Local Moran’s I",
    "text": "3.4 Visualising Local Moran’s I\n\nlisa_sig <- lisa %>%\n  filter(p_ii < 0.05)\ntmap_mode(\"plot\")\ntm_shape(lisa) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\ntm_shape(lisa_sig) +\n  tm_fill(\"mean\") +\n  tm_borders(alpha = 0.4)"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex07/In-Class_Ex07.html#computing-local-morans-i-2",
    "href": "In-Class_Ex/In-Class_Ex07/In-Class_Ex07.html#computing-local-morans-i-2",
    "title": "In-Class Exercise 7: GLSA",
    "section": "4.1 Computing Local Moran’s I",
    "text": "4.1 Computing Local Moran’s I\n\nHCSA <- wm_q %>%\n  mutate(local_Gi = local_gstar_perm(\n    GDPPC, nb, wt, nsim = 99),\n    .before = 1) %>%\n  unnest(local_Gi)\nHCSA\n\nSimple feature collection with 88 features and 16 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 108.7831 ymin: 24.6342 xmax: 114.2544 ymax: 30.12812\nGeodetic CRS:  WGS 84\n# A tibble: 88 × 17\n    gi_star   e_gi     var_gi  p_value p_sim p_fol…¹ skewn…² kurto…³ nb    wt   \n      <dbl>  <dbl>      <dbl>    <dbl> <dbl>   <dbl>   <dbl>   <dbl> <nb>  <lis>\n 1 -0.00567 0.0115 0.00000812  9.95e-1  0.82    0.41   1.03    1.23  <int> <dbl>\n 2 -0.235   0.0110 0.00000581  8.14e-1  1       0.5    0.912   1.05  <int> <dbl>\n 3  0.298   0.0114 0.00000776  7.65e-1  0.7     0.35   0.455  -0.732 <int> <dbl>\n 4  0.145   0.0121 0.0000111   8.84e-1  0.64    0.32   0.900   0.726 <int> <dbl>\n 5  0.356   0.0113 0.0000119   7.21e-1  0.64    0.32   1.08    1.31  <int> <dbl>\n 6 -0.480   0.0116 0.00000706  6.31e-1  0.82    0.41   0.364  -0.676 <int> <dbl>\n 7  3.66    0.0116 0.00000825  2.47e-4  0.02    0.01   0.909   0.664 <int> <dbl>\n 8  2.14    0.0116 0.00000714  3.26e-2  0.16    0.08   1.13    1.48  <int> <dbl>\n 9  4.55    0.0113 0.00000656  5.28e-6  0.02    0.01   1.36    4.14  <int> <dbl>\n10  1.61    0.0109 0.00000341  1.08e-1  0.18    0.09   0.269  -0.396 <int> <dbl>\n# … with 78 more rows, 7 more variables: NAME_2 <chr>, ID_3 <int>,\n#   NAME_3 <chr>, ENGTYPE_3 <chr>, County <chr>, GDPPC <dbl>,\n#   geometry <POLYGON [°]>, and abbreviated variable names ¹​p_folded_sim,\n#   ²​skewness, ³​kurtosis"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex07/In-Class_Ex07.html#visualising-gi",
    "href": "In-Class_Ex/In-Class_Ex07/In-Class_Ex07.html#visualising-gi",
    "title": "In-Class Exercise 7: GLSA",
    "section": "4.2 Visualising Gi*",
    "text": "4.2 Visualising Gi*\n\ntmap_mode(\"view\")\ntm_shape(HCSA) +\n  tm_fill(\"gi_star\") +\n  tm_borders(alpha = 0.5) +\n  tm_view(set.zoom.limits = c(6, 8))"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex07/In-Class_Ex07.html#visualising-p-value-of-hcsa",
    "href": "In-Class_Ex/In-Class_Ex07/In-Class_Ex07.html#visualising-p-value-of-hcsa",
    "title": "In-Class Exercise 7: GLSA",
    "section": "4.3 Visualising p-value of HCSA",
    "text": "4.3 Visualising p-value of HCSA\n\ntmap_mode(\"plot\")\ntm_shape(HCSA) +\n  tm_fill(\"p_sim\") +\n  tm_borders(alpha = 0.5)"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex07/In-Class_Ex07_2.html",
    "href": "In-Class_Ex/In-Class_Ex07/In-Class_Ex07_2.html",
    "title": "In-Class Exercise 7: EHSA",
    "section": "",
    "text": "pacman::p_load(sf, sfdep, tmap, plotly, tidyverse, zoo, Kendall)\n\n\n\n\n\nhunan <- st_read(dsn = \"data/geospatial\", \n                 layer = \"Hunan\")\n\nReading layer `Hunan' from data source \n  `C:\\Users\\la935\\Desktop\\IS415 - GAA\\IS415 - GAA (New)\\In-Class_Ex\\In-Class_Ex07\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 88 features and 7 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 108.7831 ymin: 24.6342 xmax: 114.2544 ymax: 30.12812\nGeodetic CRS:  WGS 84\n\n\n\nGDPPC <- read_csv(\"data/aspatial/Hunan_GDPPC.csv\")"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex07/In-Class_Ex07_2.html#creating-a-time-series-cube",
    "href": "In-Class_Ex/In-Class_Ex07/In-Class_Ex07_2.html#creating-a-time-series-cube",
    "title": "In-Class Exercise 7: EHSA",
    "section": "2.1 Creating a Time Series Cube",
    "text": "2.1 Creating a Time Series Cube\n\nGDPPC_st <- spacetime(GDPPC, hunan,\n                      .loc_col = \"County\",\n                      .time_col = \"Year\")\n\n\nis_spacetime_cube(GDPPC_st)\n\n[1] TRUE"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex07/In-Class_Ex07_2.html#deriving-the-spatial-weights",
    "href": "In-Class_Ex/In-Class_Ex07/In-Class_Ex07_2.html#deriving-the-spatial-weights",
    "title": "In-Class Exercise 7: EHSA",
    "section": "3.1 Deriving the Spatial Weights",
    "text": "3.1 Deriving the Spatial Weights\n\nGDPPC_nb <- GDPPC_st %>%\n  activate(\"geometry\") %>%\n  mutate(nb = include_self(st_contiguity(geometry)),\n         wt = st_inverse_distance(nb, geometry,\n                                  scale = 1,\n                                  alpha = 1),\n         .before = 1) %>%\n  set_nbs(\"nb\") %>%\n  set_wts(\"wt\")\n\n\nhead(GDPPC_nb)\n\n# A tibble: 6 × 5\n   Year County  GDPPC nb        wt       \n  <dbl> <chr>   <dbl> <list>    <list>   \n1  2005 Anxiang  8184 <int [6]> <dbl [6]>\n2  2005 Hanshou  6560 <int [6]> <dbl [6]>\n3  2005 Jinshi   9956 <int [5]> <dbl [5]>\n4  2005 Li       8394 <int [5]> <dbl [5]>\n5  2005 Linli    8850 <int [5]> <dbl [5]>\n6  2005 Shimen   9244 <int [6]> <dbl [6]>\n\n\n\ngi_stars <- GDPPC_nb %>%\n  group_by(Year) %>%\n  mutate(gi_star = local_gstar_perm(\n    GDPPC, nb, wt)) %>%\n  tidyr::unnest(gi_star)"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex07/In-Class_Ex07_2.html#arrange-to-show-significant-emerging-hotcold-spots",
    "href": "In-Class_Ex/In-Class_Ex07/In-Class_Ex07_2.html#arrange-to-show-significant-emerging-hotcold-spots",
    "title": "In-Class Exercise 7: EHSA",
    "section": "4.1 Arrange to Show Significant Emerging Hot/Cold Spots",
    "text": "4.1 Arrange to Show Significant Emerging Hot/Cold Spots\n\nemerging <- ehsa %>% \n  arrange(sl, abs(tau)) %>% \n  slice(1:5)"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex07/In-Class_Ex07_2.html#visualising-the-distribution-of-ehsa-classes",
    "href": "In-Class_Ex/In-Class_Ex07/In-Class_Ex07_2.html#visualising-the-distribution-of-ehsa-classes",
    "title": "In-Class Exercise 7: EHSA",
    "section": "5.1 Visualising the Distribution of EHSA Classes",
    "text": "5.1 Visualising the Distribution of EHSA Classes\n\nggplot(data = ehsa,\n       aes(x = classification)) +\n  geom_bar()"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex07/In-Class_Ex07_2.html#visualising-ehsa",
    "href": "In-Class_Ex/In-Class_Ex07/In-Class_Ex07_2.html#visualising-ehsa",
    "title": "In-Class Exercise 7: EHSA",
    "section": "5.2 Visualising EHSA",
    "text": "5.2 Visualising EHSA\n\nhunan_ehsa <- hunan %>%\n  left_join(ehsa,\n           by =  c(\"County\" = \"location\"))\n\n\nehsa_sig <- hunan_ehsa  %>%\n  filter(p_value < 0.05)\ntmap_mode(\"plot\")\ntm_shape(hunan_ehsa) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\ntm_shape(ehsa_sig) +\n  tm_fill(\"classification\") + \n  tm_borders(alpha = 0.4)"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex08/In-Class_Ex08.html",
    "href": "In-Class_Ex/In-Class_Ex08/In-Class_Ex08.html",
    "title": "In-Class Exercise 8: Calibrating Hedonic Pricing Model for Private Highrise Property with GWR Method",
    "section": "",
    "text": "Geographically weighted regression (GWR) is a spatial statistical technique that takes non-stationary variables into consideration (e.g., climate; demographic factors; physical environment characteristics) and models the local relationships between these independent variables and an outcome of interest (also known as dependent variable). In this hands-on exercise, you will learn how to build hedonic pricing models by using GWR methods. The dependent variable is the resale prices of condominium in 2015. The independent variables are divided into either structural and locational."
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex08/In-Class_Ex08.html#geospatial-data",
    "href": "In-Class_Ex/In-Class_Ex08/In-Class_Ex08.html#geospatial-data",
    "title": "In-Class Exercise 8: Calibrating Hedonic Pricing Model for Private Highrise Property with GWR Method",
    "section": "Geospatial Data",
    "text": "Geospatial Data\n\nmpsz = st_read(dsn = \"data/geospatial\", layer = \"MP14_SUBZONE_WEB_PL\")\n\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `C:\\Users\\la935\\Desktop\\IS415 - GAA\\IS415 - GAA (New)\\In-Class_Ex\\In-Class_Ex08\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n\n\n\nmpsz_svy21 <- st_transform(mpsz, 3414)"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex08/In-Class_Ex08.html#aspatial-data",
    "href": "In-Class_Ex/In-Class_Ex08/In-Class_Ex08.html#aspatial-data",
    "title": "In-Class Exercise 8: Calibrating Hedonic Pricing Model for Private Highrise Property with GWR Method",
    "section": "Aspatial Data",
    "text": "Aspatial Data\n\ncondo_resale = read_csv(\"data/aspatial/Condo_resale_2015.csv\")"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex08/In-Class_Ex08.html#converting-aspatial-data-to-sf-object",
    "href": "In-Class_Ex/In-Class_Ex08/In-Class_Ex08.html#converting-aspatial-data-to-sf-object",
    "title": "In-Class Exercise 8: Calibrating Hedonic Pricing Model for Private Highrise Property with GWR Method",
    "section": "Converting Aspatial Data to sf Object",
    "text": "Converting Aspatial Data to sf Object\n\ncondo_resale.sf <- st_as_sf(condo_resale,\n                            coords = c(\"LONGITUDE\", \"LATITUDE\"),\n                            crs=4326) %>%\n  st_transform(crs=3414)"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex08/In-Class_Ex08.html#simple-linear-regression-method",
    "href": "In-Class_Ex/In-Class_Ex08/In-Class_Ex08.html#simple-linear-regression-method",
    "title": "In-Class Exercise 8: Calibrating Hedonic Pricing Model for Private Highrise Property with GWR Method",
    "section": "Simple Linear Regression Method",
    "text": "Simple Linear Regression Method\n\ncondo.slr <- lm(formula=SELLING_PRICE ~ AREA_SQM, data = condo_resale.sf)\n\nggplot(data=condo_resale.sf,  \n       aes(x=`AREA_SQM`, y=`SELLING_PRICE`)) +\n  geom_point() +\n  geom_smooth(method = lm)"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex08/In-Class_Ex08.html#multiple-linear-regression-method",
    "href": "In-Class_Ex/In-Class_Ex08/In-Class_Ex08.html#multiple-linear-regression-method",
    "title": "In-Class Exercise 8: Calibrating Hedonic Pricing Model for Private Highrise Property with GWR Method",
    "section": "Multiple Linear Regression Method",
    "text": "Multiple Linear Regression Method\n\ncorrplot::corrplot(cor(condo_resale[, 5:23]), diag = FALSE, order = \"AOE\",\n                   t1.pos = \"td\", t1.cex = 0.5, method = \"number\", type = \"upper\")\n\n\n\n\n\ncondo.mlr <- lm(formula = SELLING_PRICE ~ AREA_SQM + AGE    + \n                  PROX_CBD + PROX_CHILDCARE + PROX_ELDERLYCARE +\n                  PROX_URA_GROWTH_AREA + PROX_HAWKER_MARKET + PROX_KINDERGARTEN + \n                  PROX_MRT  + PROX_PARK + PROX_PRIMARY_SCH + \n                  PROX_TOP_PRIMARY_SCH + PROX_SHOPPING_MALL + PROX_SUPERMARKET + \n                  PROX_BUS_STOP + NO_Of_UNITS + FAMILY_FRIENDLY + FREEHOLD, \n                data=condo_resale.sf)\nsummary(condo.mlr)\n\n\nCall:\nlm(formula = SELLING_PRICE ~ AREA_SQM + AGE + PROX_CBD + PROX_CHILDCARE + \n    PROX_ELDERLYCARE + PROX_URA_GROWTH_AREA + PROX_HAWKER_MARKET + \n    PROX_KINDERGARTEN + PROX_MRT + PROX_PARK + PROX_PRIMARY_SCH + \n    PROX_TOP_PRIMARY_SCH + PROX_SHOPPING_MALL + PROX_SUPERMARKET + \n    PROX_BUS_STOP + NO_Of_UNITS + FAMILY_FRIENDLY + FREEHOLD, \n    data = condo_resale.sf)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-3475964  -293923   -23069   241043 12260381 \n\nCoefficients:\n                       Estimate Std. Error t value Pr(>|t|)    \n(Intercept)           481728.40  121441.01   3.967 7.65e-05 ***\nAREA_SQM               12708.32     369.59  34.385  < 2e-16 ***\nAGE                   -24440.82    2763.16  -8.845  < 2e-16 ***\nPROX_CBD              -78669.78    6768.97 -11.622  < 2e-16 ***\nPROX_CHILDCARE       -351617.91  109467.25  -3.212  0.00135 ** \nPROX_ELDERLYCARE      171029.42   42110.51   4.061 5.14e-05 ***\nPROX_URA_GROWTH_AREA   38474.53   12523.57   3.072  0.00217 ** \nPROX_HAWKER_MARKET     23746.10   29299.76   0.810  0.41782    \nPROX_KINDERGARTEN     147468.99   82668.87   1.784  0.07466 .  \nPROX_MRT             -314599.68   57947.44  -5.429 6.66e-08 ***\nPROX_PARK             563280.50   66551.68   8.464  < 2e-16 ***\nPROX_PRIMARY_SCH      180186.08   65237.95   2.762  0.00582 ** \nPROX_TOP_PRIMARY_SCH    2280.04   20410.43   0.112  0.91107    \nPROX_SHOPPING_MALL   -206604.06   42840.60  -4.823 1.57e-06 ***\nPROX_SUPERMARKET      -44991.80   77082.64  -0.584  0.55953    \nPROX_BUS_STOP         683121.35  138353.28   4.938 8.85e-07 ***\nNO_Of_UNITS             -231.18      89.03  -2.597  0.00951 ** \nFAMILY_FRIENDLY       140340.77   47020.55   2.985  0.00289 ** \nFREEHOLD              359913.01   49220.22   7.312 4.38e-13 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 755800 on 1417 degrees of freedom\nMultiple R-squared:  0.6518,    Adjusted R-squared:  0.6474 \nF-statistic: 147.4 on 18 and 1417 DF,  p-value: < 2.2e-16\n\n\n\ncondo.mlr1 <- lm(formula = SELLING_PRICE ~ AREA_SQM + AGE + \n                   PROX_CBD + PROX_CHILDCARE + PROX_ELDERLYCARE +\n                   PROX_URA_GROWTH_AREA + PROX_MRT  + PROX_PARK + \n                   PROX_PRIMARY_SCH + PROX_SHOPPING_MALL    + PROX_BUS_STOP + \n                   NO_Of_UNITS + FAMILY_FRIENDLY + FREEHOLD,\n                 data=condo_resale.sf)\nols_regress(condo.mlr1)\n\n                             Model Summary                               \n------------------------------------------------------------------------\nR                       0.807       RMSE                     755957.289 \nR-Squared               0.651       Coef. Var                    43.168 \nAdj. R-Squared          0.647       MSE                571471422208.591 \nPred R-Squared          0.638       MAE                      414819.628 \n------------------------------------------------------------------------\n RMSE: Root Mean Square Error \n MSE: Mean Square Error \n MAE: Mean Absolute Error \n\n                                     ANOVA                                       \n--------------------------------------------------------------------------------\n                    Sum of                                                      \n                   Squares          DF         Mean Square       F         Sig. \n--------------------------------------------------------------------------------\nRegression    1.512586e+15          14        1.080418e+14    189.059    0.0000 \nResidual      8.120609e+14        1421    571471422208.591                      \nTotal         2.324647e+15        1435                                          \n--------------------------------------------------------------------------------\n\n                                               Parameter Estimates                                                \n-----------------------------------------------------------------------------------------------------------------\n               model           Beta    Std. Error    Std. Beta       t        Sig           lower          upper \n-----------------------------------------------------------------------------------------------------------------\n         (Intercept)     527633.222    108183.223                   4.877    0.000     315417.244     739849.200 \n            AREA_SQM      12777.523       367.479        0.584     34.771    0.000      12056.663      13498.382 \n                 AGE     -24687.739      2754.845       -0.167     -8.962    0.000     -30091.739     -19283.740 \n            PROX_CBD     -77131.323      5763.125       -0.263    -13.384    0.000     -88436.469     -65826.176 \n      PROX_CHILDCARE    -318472.751    107959.512       -0.084     -2.950    0.003    -530249.889    -106695.613 \n    PROX_ELDERLYCARE     185575.623     39901.864        0.090      4.651    0.000     107302.737     263848.510 \nPROX_URA_GROWTH_AREA      39163.254     11754.829        0.060      3.332    0.001      16104.571      62221.936 \n            PROX_MRT    -294745.107     56916.367       -0.112     -5.179    0.000    -406394.234    -183095.980 \n           PROX_PARK     570504.807     65507.029        0.150      8.709    0.000     442003.938     699005.677 \n    PROX_PRIMARY_SCH     159856.136     60234.599        0.062      2.654    0.008      41697.849     278014.424 \n  PROX_SHOPPING_MALL    -220947.251     36561.832       -0.115     -6.043    0.000    -292668.213    -149226.288 \n       PROX_BUS_STOP     682482.221    134513.243        0.134      5.074    0.000     418616.359     946348.082 \n         NO_Of_UNITS       -245.480        87.947       -0.053     -2.791    0.005       -418.000        -72.961 \n     FAMILY_FRIENDLY     146307.576     46893.021        0.057      3.120    0.002      54320.593     238294.560 \n            FREEHOLD     350599.812     48506.485        0.136      7.228    0.000     255447.802     445751.821 \n-----------------------------------------------------------------------------------------------------------------\n\n\n\ntbl_regression(condo.mlr1, \n               intercept = TRUE) %>% \n  add_glance_source_note(\n    label = list(sigma ~ \"\\U03C3\"),\n    include = c(r.squared, adj.r.squared, \n                AIC, statistic,\n                p.value, sigma))\n\n\n\n\n\n  \n  \n    \n      Characteristic\n      Beta\n      95% CI1\n      p-value\n    \n  \n  \n    (Intercept)\n527,633\n315,417, 739,849\n<0.001\n    AREA_SQM\n12,778\n12,057, 13,498\n<0.001\n    AGE\n-24,688\n-30,092, -19,284\n<0.001\n    PROX_CBD\n-77,131\n-88,436, -65,826\n<0.001\n    PROX_CHILDCARE\n-318,473\n-530,250, -106,696\n0.003\n    PROX_ELDERLYCARE\n185,576\n107,303, 263,849\n<0.001\n    PROX_URA_GROWTH_AREA\n39,163\n16,105, 62,222\n<0.001\n    PROX_MRT\n-294,745\n-406,394, -183,096\n<0.001\n    PROX_PARK\n570,505\n442,004, 699,006\n<0.001\n    PROX_PRIMARY_SCH\n159,856\n41,698, 278,014\n0.008\n    PROX_SHOPPING_MALL\n-220,947\n-292,668, -149,226\n<0.001\n    PROX_BUS_STOP\n682,482\n418,616, 946,348\n<0.001\n    NO_Of_UNITS\n-245\n-418, -73\n0.005\n    FAMILY_FRIENDLY\n146,308\n54,321, 238,295\n0.002\n    FREEHOLD\n350,600\n255,448, 445,752\n<0.001\n  \n  \n    \n      R² = 0.651; Adjusted R² = 0.647; AIC = 42,967; Statistic = 189; p-value = <0.001; σ = 755,957\n    \n  \n  \n    \n      1 CI = Confidence Interval"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex09/In-Class_Ex09.html",
    "href": "In-Class_Ex/In-Class_Ex09/In-Class_Ex09.html",
    "title": "In-Class Exercise 9: Geographically Weighted Random Forest (GwRF)",
    "section": "",
    "text": "pacman::p_load(sf, spdep, GWmodel, SpatialML, tidyverse, tmap, ggpubr, olsrr, devtools, rsample)"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex09/In-Class_Ex09.html#aspatial-data",
    "href": "In-Class_Ex/In-Class_Ex09/In-Class_Ex09.html#aspatial-data",
    "title": "In-Class Exercise 9: Geographically Weighted Random Forest (GwRF)",
    "section": "Aspatial Data",
    "text": "Aspatial Data\n\nmdata <- read_rds(\"data/aspatial/mdata.rds\")"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex09/In-Class_Ex09.html#data-sampling",
    "href": "In-Class_Ex/In-Class_Ex09/In-Class_Ex09.html#data-sampling",
    "title": "In-Class Exercise 9: Geographically Weighted Random Forest (GwRF)",
    "section": "Data Sampling",
    "text": "Data Sampling\n\nset.seed(1234)\nresale_split <- initial_split(mdata,\n                              prop = 6.5/10,) \n\ntrain_data <- training(resale_split)\ntest_data <- testing(resale_split)\n\n\nwrite_rds(train_data, \"data/model/train_data.rds\")\nwrite_rds(test_data, \"data/model/test_data.rds\")"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex09/In-Class_Ex09.html#building-a-non-spatial-multiple-linear-regression",
    "href": "In-Class_Ex/In-Class_Ex09/In-Class_Ex09.html#building-a-non-spatial-multiple-linear-regression",
    "title": "In-Class Exercise 9: Geographically Weighted Random Forest (GwRF)",
    "section": "Building a Non-Spatial Multiple Linear Regression",
    "text": "Building a Non-Spatial Multiple Linear Regression\n\nprice_mlr <- lm(resale_price ~ floor_area_sqm +\n                  storey_order + remaining_lease_mths +\n                  PROX_CBD + PROX_ELDERLYCARE + PROX_HAWKER +\n                  PROX_MRT + PROX_PARK + PROX_MALL +\n                  PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN +\n                  WITHIN_350M_CHILDCARE + WITHIN_350M_BUS +\n                  WITHIN_1KM_PRISCH,\n                data = train_data)\nsummary(price_mlr)\n\n\nCall:\nlm(formula = resale_price ~ floor_area_sqm + storey_order + remaining_lease_mths + \n    PROX_CBD + PROX_ELDERLYCARE + PROX_HAWKER + PROX_MRT + PROX_PARK + \n    PROX_MALL + PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN + \n    WITHIN_350M_CHILDCARE + WITHIN_350M_BUS + WITHIN_1KM_PRISCH, \n    data = train_data)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-205193  -39120   -1930   36545  472355 \n\nCoefficients:\n                           Estimate Std. Error t value Pr(>|t|)    \n(Intercept)              107601.073  10601.261  10.150  < 2e-16 ***\nfloor_area_sqm             2780.698     90.579  30.699  < 2e-16 ***\nstorey_order              14299.298    339.115  42.167  < 2e-16 ***\nremaining_lease_mths        344.490      4.592  75.027  < 2e-16 ***\nPROX_CBD                 -16930.196    201.254 -84.124  < 2e-16 ***\nPROX_ELDERLYCARE         -14441.025    994.867 -14.516  < 2e-16 ***\nPROX_HAWKER              -19265.648   1273.597 -15.127  < 2e-16 ***\nPROX_MRT                 -32564.272   1744.232 -18.670  < 2e-16 ***\nPROX_PARK                 -5712.625   1483.885  -3.850 0.000119 ***\nPROX_MALL                -14717.388   2007.818  -7.330 2.47e-13 ***\nPROX_SUPERMARKET         -26881.938   4189.624  -6.416 1.46e-10 ***\nWITHIN_350M_KINDERGARTEN   8520.472    632.812  13.464  < 2e-16 ***\nWITHIN_350M_CHILDCARE     -4510.650    354.015 -12.741  < 2e-16 ***\nWITHIN_350M_BUS             813.493    222.574   3.655 0.000259 ***\nWITHIN_1KM_PRISCH         -8010.834    491.512 -16.298  < 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 61650 on 10320 degrees of freedom\nMultiple R-squared:  0.7373,    Adjusted R-squared:  0.737 \nF-statistic:  2069 on 14 and 10320 DF,  p-value: < 2.2e-16\n\n\n\nwrite_rds(price_mlr, \"data/model/price_mlr.rds\")"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex09/In-Class_Ex09.html#converting-the-sf-data.frame-to-spatialpointdataframe",
    "href": "In-Class_Ex/In-Class_Ex09/In-Class_Ex09.html#converting-the-sf-data.frame-to-spatialpointdataframe",
    "title": "In-Class Exercise 9: Geographically Weighted Random Forest (GwRF)",
    "section": "Converting the sf data.frame to SpatialPointDataFrame",
    "text": "Converting the sf data.frame to SpatialPointDataFrame\n\ntrain_data_sp <- as_Spatial(train_data)\ntrain_data_sp\n\nclass       : SpatialPointsDataFrame \nfeatures    : 10335 \nextent      : 11597.31, 42623.63, 28217.39, 48741.06  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \nvariables   : 17\nnames       : resale_price, floor_area_sqm, storey_order, remaining_lease_mths,          PROX_CBD,     PROX_ELDERLYCARE,        PROX_HAWKER,           PROX_MRT,          PROX_PARK,   PROX_GOOD_PRISCH,        PROX_MALL,            PROX_CHAS,     PROX_SUPERMARKET, WITHIN_350M_KINDERGARTEN, WITHIN_350M_CHILDCARE, ... \nmin values  :       218000,             74,            1,                  555, 0.999393538715878, 1.98943787433087e-08, 0.0333358643817954, 0.0220407324774434, 0.0441643212802781, 0.0652540365486641,                0, 6.20621206270077e-09, 1.21715176356525e-07,                        0,                     0, ... \nmax values  :      1186888,            133,           17,                 1164,  19.6500691667807,     3.30163731686804,   2.86763031236184,   2.13060636038504,   2.41313695915468,   10.6223726149914, 2.27100643784442,    0.808332738794272,     1.57131703651196,                        7,                    20, ..."
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex09/In-Class_Ex09.html#computing-adaptive-bandwidth",
    "href": "In-Class_Ex/In-Class_Ex09/In-Class_Ex09.html#computing-adaptive-bandwidth",
    "title": "In-Class Exercise 9: Geographically Weighted Random Forest (GwRF)",
    "section": "Computing Adaptive Bandwidth",
    "text": "Computing Adaptive Bandwidth"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex09/In-Class_Ex09.html#extracting-coordinate-data",
    "href": "In-Class_Ex/In-Class_Ex09/In-Class_Ex09.html#extracting-coordinate-data",
    "title": "In-Class Exercise 9: Geographically Weighted Random Forest (GwRF)",
    "section": "Extracting Coordinate Data",
    "text": "Extracting Coordinate Data\n\ncoords <- st_coordinates(mdata)\ncoords_train <- st_coordinates(train_data)\ncoords_test <- st_coordinates(test_data)\n\n\ncoords_train <- write_rds(coords_train, \"data/model/coords_train.rds\")\ncoords_test <- write_rds(coords_test, \"data/model/coords_test.rds\")"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex09/In-Class_Ex09.html#dropping-geometry-field",
    "href": "In-Class_Ex/In-Class_Ex09/In-Class_Ex09.html#dropping-geometry-field",
    "title": "In-Class Exercise 9: Geographically Weighted Random Forest (GwRF)",
    "section": "Dropping Geometry Field",
    "text": "Dropping Geometry Field\n\ntrain_data <- train_data %>%\n  st_drop_geometry()"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex09/In-Class_Ex09.html#preparing-the-test-data",
    "href": "In-Class_Ex/In-Class_Ex09/In-Class_Ex09.html#preparing-the-test-data",
    "title": "In-Class Exercise 9: Geographically Weighted Random Forest (GwRF)",
    "section": "Preparing The Test Data",
    "text": "Preparing The Test Data\n\ntest_data <- cbind(test_data, coords_test) %>%\n  st_drop_geometry()"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex09/In-Class_Ex09.html#predicting-with-test-data",
    "href": "In-Class_Ex/In-Class_Ex09/In-Class_Ex09.html#predicting-with-test-data",
    "title": "In-Class Exercise 9: Geographically Weighted Random Forest (GwRF)",
    "section": "Predicting with Test Data",
    "text": "Predicting with Test Data\n{#|Eval: false} {r} gwRF_pred <- predict.grf(gwRF_adaptive,                           test_data,                          x.var.name = \"X\",                          y.var.name = \"Y\",                          local.w = 1,                          global.w = 0)"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex09/In-Class_Ex09.html#converting-the-predicting-output-into-a-data-frame",
    "href": "In-Class_Ex/In-Class_Ex09/In-Class_Ex09.html#converting-the-predicting-output-into-a-data-frame",
    "title": "In-Class Exercise 9: Geographically Weighted Random Forest (GwRF)",
    "section": "Converting the Predicting Output into a Data Frame",
    "text": "Converting the Predicting Output into a Data Frame\n{#|Eval: false} {r} gwRF_pred_df <- as.data.frame(gwRF_pred)\n{#|Eval: false} {r} gwRF_test_predict <- cbind(test_data, predict_grf_df)"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Leon’s IS415 (GAA) Journey",
    "section": "",
    "text": "Welcome to IS415 Geospatial Analytics and Applications\nThis is the course website of IS415 I’m studying this term. You will find my course work on this website"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html",
    "title": "Take-Home Exercise 1: Application of Spatial Point Patterns Analysis to Discover the Geographical Distribution of Functional and Non-Function Water Points in Osun State, Nigeria",
    "section": "",
    "text": "Water is an important resource to mankind. Clean and accessible water is critical to human health. It provides a healthy environment, a sustainable economy, reduces poverty and ensures peace and security. Yet over 40% of the global population does not have access to sufficient clean water. By 2025, 1.8 billion people will be living in countries or regions with absolute water scarcity, according to UN-Water. The lack of water poses a major threat to several sectors, including food security. Agriculture uses about 70% of the world’s accessible freshwater.\nDeveloping countries are most affected by water shortages and poor water quality. Up to 80% of illnesses in the developing world are linked to inadequate water and sanitation. Despite technological advancement, providing clean water to the rural community is still a major development issues in many countries globally, especially countries in the Africa continent.\nTo address the issue of providing clean and sustainable water supply to the rural community, a global Water Point Data Exchange (WPdx) project has been initiated. The main aim of this initiative is to collect water point related data from rural areas at the water point or small water scheme level and share the data via WPdx Data Repository, a cloud-based data library. What is so special of this project is that data are collected based on WPDx Data Standard.\n\n\n\n\nGeospatial analytics hold tremendous potential to address complex problems facing society. In this study, you are tasked to apply appropriate spatial point patterns analysis methods to discover the geographical distribution of functional and non-function water points and their co-locations if any in Osun State, Nigeria.\n\n\n\n\n\n\n\nDerive kernel density maps for both functional and non-functional water points.\nDisplay kernel density maps on openstreetmap of Osub State, Nigeria\nDescribe the spatial patterns revealed by the kernel density maps, highlighting the advantage of kernel density map over point map\n\n\n\n\n\nFormulate the null hypothesis and alternative hypothesis with the correct confidence level\nPerform the test with appropriate techniques\nDraw statistical conclusions based on the results\n\n\n\n\n\nFormulate the null hypothesis and alternative hypothesis with the correct confidence level\nPerform the test with appropriate techniques\nDraw statistical conclusions based on the results\n\n\n\n\n\n\n\n\n\nData from WPdx Global Data Repositories - WPdx+\n\n\n\n\n\nData from geoBoundaries - Osun State, Nigeria"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#importing-modules",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#importing-modules",
    "title": "Take-Home Exercise 1: Application of Spatial Point Patterns Analysis to Discover the Geographical Distribution of Functional and Non-Function Water Points in Osun State, Nigeria",
    "section": "2.1 Importing Modules",
    "text": "2.1 Importing Modules\nThe following R packages will be used for this analysis:\n\ntidyverse - Used for data science tasks\nfunModeling - Used for data cleaning, importance variable analysis and model performance\ntmap - Used for creating thematic maps\nsf - Used for importing, managing and processing geospatial data\nsfdep - Used for geometry neighbours and local indicators of spatial association\nmaptools - Used for manipulating geographic data\nraster - Used to manipulate and models gridded spatial data\nspatstat - Used for point pattern analysis\n\n\npacman::p_load(tidyverse, funModeling, tmap, sf, sfdep, maptools, raster, spatstat)"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#importing-data",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#importing-data",
    "title": "Take-Home Exercise 1: Application of Spatial Point Patterns Analysis to Discover the Geographical Distribution of Functional and Non-Function Water Points in Osun State, Nigeria",
    "section": "2.2 Importing Data",
    "text": "2.2 Importing Data\n\n2.2.1 Geospatial Data\n\n2.2.1.1 The geoBoundaries data set\n\ngeoNGA <- st_read(\"data/geospatial/\",\n                  layer = \"geoBoundaries-NGA-ADM2\") %>%\n  st_transform(crs = 26392)\n\nReading layer `geoBoundaries-NGA-ADM2' from data source \n  `C:\\Users\\la935\\Desktop\\IS415 - GAA\\IS415 - GAA (New)\\Take-Home_Ex\\Take-Home_Ex01\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 774 features and 6 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2.668534 ymin: 4.273007 xmax: 14.67882 ymax: 13.89442\nGeodetic CRS:  WGS 84\n\n\n\n\n2.2.1.2 The NGA data set\n\nNGA <- st_read(\"data/geospatial/\",\n                  layer = \"nga_admbnda_adm2_osgof_20190417\") %>%\n  st_transform(crs = 26392)\n\nReading layer `nga_admbnda_adm2_osgof_20190417' from data source \n  `C:\\Users\\la935\\Desktop\\IS415 - GAA\\IS415 - GAA (New)\\Take-Home_Ex\\Take-Home_Ex01\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 774 features and 16 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2.668534 ymin: 4.273007 xmax: 14.67882 ymax: 13.89442\nGeodetic CRS:  WGS 84\n\n\n\n\n\n2.2.2 Aspatial Data\n\nwp_nga <- read_csv(\"data/aspatial/WPdx.csv\")\n\n\n2.2.2.1 Converting water point data into sf point features\n\nwp_nga$Geometry = st_as_sfc(wp_nga$`New Georeferenced Column`)\nwp_nga\n\n# A tibble: 97,478 × 75\n   row_id `#source`      #lat_…¹ #lon_…² #repo…³ #stat…⁴ #wate…⁵ #wate…⁶ #wate…⁷\n    <dbl> <chr>            <dbl>   <dbl> <chr>   <chr>   <chr>   <chr>   <chr>  \n 1 158721 Federal Minis…    5.07    6.62 02/19/… Yes     Boreho… Well    Mechan…\n 2 158892 Federal Minis…    5.09    7.09 02/06/… Yes     Boreho… Well    Hand P…\n 3 323117 Federal Minis…    5.91    8.77 08/31/… Yes     Boreho… Well    Hand P…\n 4 300176 Federal Minis…    5.23    7.32 05/17/… Yes     Boreho… Well    Mechan…\n 5 324346 Federal Minis…    6.88    3.36 08/17/… Yes     Boreho… Well    Mechan…\n 6 297273 Federal Minis…    6.59    3.29 05/26/… Yes     Boreho… Well    Mechan…\n 7 296853 Federal Minis…    6.60    3.26 06/02/… Yes     Boreho… Well    Mechan…\n 8 323866 Federal Minis…    6.20    6.73 09/18/… Yes     Boreho… Well    Mechan…\n 9 297044 Federal Minis…    6.61    3.30 05/26/… Yes     Boreho… Well    Mechan…\n10 324321 Federal Minis…    6.96    3.60 08/16/… Yes     Boreho… Well    Mechan…\n# … with 97,468 more rows, 66 more variables: `#water_tech_category` <chr>,\n#   `#facility_type` <chr>, `#clean_country_name` <chr>, `#clean_adm1` <chr>,\n#   `#clean_adm2` <chr>, `#clean_adm3` <lgl>, `#clean_adm4` <lgl>,\n#   `#install_year` <dbl>, `#installer` <lgl>, `#rehab_year` <lgl>,\n#   `#rehabilitator` <lgl>, `#management_clean` <chr>, `#status_clean` <chr>,\n#   `#pay` <chr>, `#fecal_coliform_presence` <lgl>,\n#   `#fecal_coliform_value` <lgl>, `#subjective_quality` <chr>, …\n\n\n\nwp_sf <- st_sf(wp_nga, crs=4326)\nwp_sf\n\nSimple feature collection with 97478 features and 74 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 2.707441 ymin: 4.301812 xmax: 14.21828 ymax: 13.86568\nGeodetic CRS:  WGS 84\n# A tibble: 97,478 × 75\n   row_id `#source`      #lat_…¹ #lon_…² #repo…³ #stat…⁴ #wate…⁵ #wate…⁶ #wate…⁷\n *  <dbl> <chr>            <dbl>   <dbl> <chr>   <chr>   <chr>   <chr>   <chr>  \n 1 158721 Federal Minis…    5.07    6.62 02/19/… Yes     Boreho… Well    Mechan…\n 2 158892 Federal Minis…    5.09    7.09 02/06/… Yes     Boreho… Well    Hand P…\n 3 323117 Federal Minis…    5.91    8.77 08/31/… Yes     Boreho… Well    Hand P…\n 4 300176 Federal Minis…    5.23    7.32 05/17/… Yes     Boreho… Well    Mechan…\n 5 324346 Federal Minis…    6.88    3.36 08/17/… Yes     Boreho… Well    Mechan…\n 6 297273 Federal Minis…    6.59    3.29 05/26/… Yes     Boreho… Well    Mechan…\n 7 296853 Federal Minis…    6.60    3.26 06/02/… Yes     Boreho… Well    Mechan…\n 8 323866 Federal Minis…    6.20    6.73 09/18/… Yes     Boreho… Well    Mechan…\n 9 297044 Federal Minis…    6.61    3.30 05/26/… Yes     Boreho… Well    Mechan…\n10 324321 Federal Minis…    6.96    3.60 08/16/… Yes     Boreho… Well    Mechan…\n# … with 97,468 more rows, 66 more variables: `#water_tech_category` <chr>,\n#   `#facility_type` <chr>, `#clean_country_name` <chr>, `#clean_adm1` <chr>,\n#   `#clean_adm2` <chr>, `#clean_adm3` <lgl>, `#clean_adm4` <lgl>,\n#   `#install_year` <dbl>, `#installer` <lgl>, `#rehab_year` <lgl>,\n#   `#rehabilitator` <lgl>, `#management_clean` <chr>, `#status_clean` <chr>,\n#   `#pay` <chr>, `#fecal_coliform_presence` <lgl>,\n#   `#fecal_coliform_value` <lgl>, `#subjective_quality` <chr>, …\n\n\n\n\n2.2.2.2 Transforming into Nigeria projected coordinate system\n\nwp_sf <- wp_sf %>%\n  st_transform(crs = 26392)"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#excluding-redundant-fields",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#excluding-redundant-fields",
    "title": "Take-Home Exercise 1: Application of Spatial Point Patterns Analysis to Discover the Geographical Distribution of Functional and Non-Function Water Points in Osun State, Nigeria",
    "section": "3.1 Excluding Redundant Fields",
    "text": "3.1 Excluding Redundant Fields\n\nNGA <- NGA %>%\n  dplyr::select(c(3:4, 8:9))"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#checking-for-duplicate-name",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#checking-for-duplicate-name",
    "title": "Take-Home Exercise 1: Application of Spatial Point Patterns Analysis to Discover the Geographical Distribution of Functional and Non-Function Water Points in Osun State, Nigeria",
    "section": "3.2 Checking for Duplicate Name",
    "text": "3.2 Checking for Duplicate Name\n\nNGA$ADM2_EN[duplicated(NGA$ADM2_EN)==TRUE]\n\n[1] \"Bassa\"    \"Ifelodun\" \"Irepodun\" \"Nasarawa\" \"Obi\"      \"Surulere\"\n\n\n\nNGA$ADM2_EN[94] <- \"Bassa, Kogi\"\nNGA$ADM2_EN[95] <- \"Bassa, Plateau\"\nNGA$ADM2_EN[304] <- \"Ifelodun, Kwara\"\nNGA$ADM2_EN[305] <- \"Ifelodun, Osun\"\nNGA$ADM2_EN[355] <- \"Irepodun, Kwara\"\nNGA$ADM2_EN[356] <- \"Irepodun, Osun\"\nNGA$ADM2_EN[519] <- \"Nasarawa, Kano\"\nNGA$ADM2_EN[520] <- \"Nasarawa, Nasarawa\"\nNGA$ADM2_EN[546] <- \"Obi, Benue\"\nNGA$ADM2_EN[547] <- \"Obi, Nasarawa\"\nNGA$ADM2_EN[693] <- \"Surulere, Lagos\"\nNGA$ADM2_EN[694] <- \"Surulere, Oyo\"\n\n\nNGA$ADM2_EN[duplicated(NGA$ADM2_EN)==TRUE]\n\ncharacter(0)"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#extracting-water-point-data",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#extracting-water-point-data",
    "title": "Take-Home Exercise 1: Application of Spatial Point Patterns Analysis to Discover the Geographical Distribution of Functional and Non-Function Water Points in Osun State, Nigeria",
    "section": "4.1 Extracting Water Point Data",
    "text": "4.1 Extracting Water Point Data\n\nwp_functional <- wp_sf_nga %>%\n  filter(status_clean %in%\n           c(\"Functional\",\n             \"Functional but not in use\",\n             \"Functional but needs repair\",\n             \"Functional, needs repair\",\n             \"Functional, not in use\"))\n\n\nwp_nonfunctional <- wp_sf_nga %>%\n  filter(status_clean %in%\n           c(\"Abandoned/Decommissioned\",\n             \"Non-Functional due to dry season\",\n             \"Non-Functional\",\n             \"Non-functional, dry\"))\n\n\nwp_unknown <- wp_sf_nga %>%\n  filter(status_clean == \"unknown\")\n\n\nfunModeling::freq(data = wp_functional,\n     input = 'status_clean')\n\n\n\n\n                 status_clean frequency percentage cumulative_perc\n1                  Functional     47228      87.65           87.65\n2    Functional, needs repair      4792       8.89           96.54\n3      Functional, not in use      1775       3.29           99.83\n4   Functional but not in use        86       0.16           99.99\n5 Functional but needs repair         4       0.01          100.00\n\n\n\nfunModeling::freq(data = wp_nonfunctional,\n     input = 'status_clean')\n\n\n\n\n                      status_clean frequency percentage cumulative_perc\n1                   Non-Functional     30638      98.94           98.94\n2         Abandoned/Decommissioned       321       1.04           99.98\n3 Non-Functional due to dry season         7       0.02          100.00\n\n\n\nfunModeling::freq(data = wp_unknown,\n     input = 'status_clean')\n\n\n\n\n  status_clean frequency percentage cumulative_perc\n1      unknown     10154        100             100"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#performing-point-in-polygon-count",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#performing-point-in-polygon-count",
    "title": "Take-Home Exercise 1: Application of Spatial Point Patterns Analysis to Discover the Geographical Distribution of Functional and Non-Function Water Points in Osun State, Nigeria",
    "section": "4.2 Performing Point-in-Polygon Count",
    "text": "4.2 Performing Point-in-Polygon Count\n\nNGA_wp <- NGA %>% \n  mutate(`total_wp` = lengths(\n    st_intersects(NGA, wp_sf_nga))) %>%\n  mutate(`wp_functional` = lengths(\n    st_intersects(NGA, wp_functional))) %>%\n  mutate(`wp_nonfunctional` = lengths(\n    st_intersects(NGA, wp_nonfunctional))) %>%\n  mutate(`wp_unknown` = lengths(\n    st_intersects(NGA, wp_unknown)))"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#visualising-attributes-by-using-statistical-graphs",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#visualising-attributes-by-using-statistical-graphs",
    "title": "Take-Home Exercise 1: Application of Spatial Point Patterns Analysis to Discover the Geographical Distribution of Functional and Non-Function Water Points in Osun State, Nigeria",
    "section": "4.3 Visualising Attributes by Using Statistical Graphs",
    "text": "4.3 Visualising Attributes by Using Statistical Graphs\n\nggplot(data = NGA_wp,\n       aes(x = total_wp)) + \n  geom_histogram(bins=20,\n                 color=\"black\",\n                 fill=\"light blue\") +\n  geom_vline(aes(xintercept=mean(\n    total_wp, na.rm=T)),\n             color=\"red\", \n             linetype=\"dashed\", \n             size=0.8) +\n  ggtitle(\"Distribution of total water points by LGA\") +\n  xlab(\"No. of water points\") +\n  ylab(\"No. of\\nLGAs\") +\n  theme(axis.title.y=element_text(angle = 0))"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#saving-the-analytical-data-in-rds-format",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#saving-the-analytical-data-in-rds-format",
    "title": "Take-Home Exercise 1: Application of Spatial Point Patterns Analysis to Discover the Geographical Distribution of Functional and Non-Function Water Points in Osun State, Nigeria",
    "section": "4.4 Saving The Analytical Data in rds Format",
    "text": "4.4 Saving The Analytical Data in rds Format\n\nwrite_rds(NGA_wp, \"data/rds/NGA_wp.rds\")"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#visualising-distribution-functional-water-point",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#visualising-distribution-functional-water-point",
    "title": "Take-Home Exercise 1: Application of Spatial Point Patterns Analysis to Discover the Geographical Distribution of Functional and Non-Function Water Points in Osun State, Nigeria",
    "section": "5.1 Visualising Distribution: Functional Water Point",
    "text": "5.1 Visualising Distribution: Functional Water Point\n\np1 <- tm_shape(NGA_wp) +\n  tm_fill(\"wp_functional\",\n          n = 10,\n          style = \"equal\",\n          palette = \"Blues\") +\n  tm_borders(lwd = 0.1,\n             alpha = 1) +\n  tm_layout(main.title = \"Distribution of functional water point by LGAs\",\n            legend.outside = FALSE)\n\n\np2 <- tm_shape(NGA_wp) +\n  tm_fill(\"total_wp\",\n          n = 10,\n          style = \"equal\",\n          palette = \"Blues\") +\n  tm_borders(lwd = 0.1,\n             alpha = 1) +\n  tm_layout(main.title = \"Distribution of total  water point by LGAs\",\n            legend.outside = FALSE)\n\n\ntmap_arrange(p2, p1, nrow = 1)"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#osun-state-functional-water-points",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#osun-state-functional-water-points",
    "title": "Take-Home Exercise 1: Application of Spatial Point Patterns Analysis to Discover the Geographical Distribution of Functional and Non-Function Water Points in Osun State, Nigeria",
    "section": "6.1 Osun State Functional Water Points",
    "text": "6.1 Osun State Functional Water Points\n\ntm_shape(osun_data) +\n  tm_fill(\"wp_functional\",\n          n = 10,\n          style = \"equal\",\n          palette = \"Blues\")"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#osun-state-non-functional-water-points",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#osun-state-non-functional-water-points",
    "title": "Take-Home Exercise 1: Application of Spatial Point Patterns Analysis to Discover the Geographical Distribution of Functional and Non-Function Water Points in Osun State, Nigeria",
    "section": "6.2 Osun State Non-Functional Water Points",
    "text": "6.2 Osun State Non-Functional Water Points\n\ntm_shape(osun_data) +\n  tm_fill(\"wp_nonfunctional\",\n          n = 10,\n          style = \"equal\",\n          palette = \"Blues\")"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#converting-sf-data-frames-to-sps-spatial-class",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#converting-sf-data-frames-to-sps-spatial-class",
    "title": "Take-Home Exercise 1: Application of Spatial Point Patterns Analysis to Discover the Geographical Distribution of Functional and Non-Function Water Points in Osun State, Nigeria",
    "section": "7.1 Converting sf Data Frames to sp’s Spatial* class",
    "text": "7.1 Converting sf Data Frames to sp’s Spatial* class\n\nosun <- as_Spatial(osun_data)\n\n\nfunctional <- as_Spatial(wp_functional)\n\n\nnonfunctional <- as_Spatial(wp_nonfunctional)\n\n\nosun\n\nclass       : SpatialPolygonsDataFrame \nfeatures    : 30 \nextent      : 176503.2, 291043.8, 331434.7, 454520.1  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=4 +lon_0=8.5 +k=0.99975 +x_0=670553.98 +y_0=0 +a=6378249.145 +rf=293.465 +towgs84=-92,-93,122,0,0,0,0 +units=m +no_defs \nvariables   : 8\nnames       :  ADM2_EN, ADM2_PCODE, ADM1_EN, ADM1_PCODE, total_wp, wp_functional, wp_nonfunctional, wp_unknown \nmin values  : Aiyedade,   NG030001,    Osun,      NG030,       89,            33,               17,          4 \nmax values  :   Osogbo,   NG030030,    Osun,      NG030,      495,           322,              141,         78 \n\n\n\nfunctional\n\nclass       : SpatialPointsDataFrame \nfeatures    : 53885 \nextent      : 29322.63, 1293137, 33758.37, 1092629  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=4 +lon_0=8.5 +k=0.99975 +x_0=670553.98 +y_0=0 +a=6378249.145 +rf=293.465 +towgs84=-92,-93,122,0,0,0,0 +units=m +no_defs \nvariables   : 1\nnames       :           status_clean \nmin values  :             Functional \nmax values  : Functional, not in use \n\n\n\nnonfunctional\n\nclass       : SpatialPointsDataFrame \nfeatures    : 30966 \nextent      : 28907.91, 1293293, 33736.93, 1092883  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=4 +lon_0=8.5 +k=0.99975 +x_0=670553.98 +y_0=0 +a=6378249.145 +rf=293.465 +towgs84=-92,-93,122,0,0,0,0 +units=m +no_defs \nvariables   : 1\nnames       :                     status_clean \nmin values  :         Abandoned/Decommissioned \nmax values  : Non-Functional due to dry season"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#converting-the-spatial-class-into-generic-sp-format",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#converting-the-spatial-class-into-generic-sp-format",
    "title": "Take-Home Exercise 1: Application of Spatial Point Patterns Analysis to Discover the Geographical Distribution of Functional and Non-Function Water Points in Osun State, Nigeria",
    "section": "7.2 Converting the Spatial* Class into Generic sp Format",
    "text": "7.2 Converting the Spatial* Class into Generic sp Format\n\nosun_sp <- as(osun, \"SpatialPolygons\")\n\n\nfunctional_sp <- as(functional, \"SpatialPoints\")\n\n\nnonfunctional_sp <- as(nonfunctional, \"SpatialPoints\")\n\n\nosun_sp\n\nclass       : SpatialPolygons \nfeatures    : 30 \nextent      : 176503.2, 291043.8, 331434.7, 454520.1  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=4 +lon_0=8.5 +k=0.99975 +x_0=670553.98 +y_0=0 +a=6378249.145 +rf=293.465 +towgs84=-92,-93,122,0,0,0,0 +units=m +no_defs \n\n\n\nfunctional_sp\n\nclass       : SpatialPoints \nfeatures    : 53885 \nextent      : 29322.63, 1293137, 33758.37, 1092629  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=4 +lon_0=8.5 +k=0.99975 +x_0=670553.98 +y_0=0 +a=6378249.145 +rf=293.465 +towgs84=-92,-93,122,0,0,0,0 +units=m +no_defs \n\n\n\nnonfunctional_sp\n\nclass       : SpatialPoints \nfeatures    : 30966 \nextent      : 28907.91, 1293293, 33736.93, 1092883  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=4 +lon_0=8.5 +k=0.99975 +x_0=670553.98 +y_0=0 +a=6378249.145 +rf=293.465 +towgs84=-92,-93,122,0,0,0,0 +units=m +no_defs"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#converting-the-generic-sp-format-into-spatstats-ppp-format",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#converting-the-generic-sp-format-into-spatstats-ppp-format",
    "title": "Take-Home Exercise 1: Application of Spatial Point Patterns Analysis to Discover the Geographical Distribution of Functional and Non-Function Water Points in Osun State, Nigeria",
    "section": "7.3 Converting the Generic sp Format into Spatstat’s ppp Format",
    "text": "7.3 Converting the Generic sp Format into Spatstat’s ppp Format\n\nfunctional_ppp <- as(functional_sp, \"ppp\")\nfunctional_ppp\n\nPlanar point pattern: 53885 points\nwindow: rectangle = [29322.6, 1293137] x [33758.4, 1092628.9] units\n\n\n\nnonfunctional_ppp <- as(nonfunctional_sp, \"ppp\")\nnonfunctional_ppp\n\nPlanar point pattern: 30966 points\nwindow: rectangle = [28907.9, 1293292.9] x [33736.9, 1092882.6] units\n\n\n\nplot(functional_ppp)\n\n\n\n\n\nplot(nonfunctional_ppp)"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#handling-duplicated-points",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#handling-duplicated-points",
    "title": "Take-Home Exercise 1: Application of Spatial Point Patterns Analysis to Discover the Geographical Distribution of Functional and Non-Function Water Points in Osun State, Nigeria",
    "section": "7.4 Handling Duplicated Points",
    "text": "7.4 Handling Duplicated Points\n\nfunctional_ppp_jit <- rjitter(functional_ppp,\n                              retry=TRUE,\n                              nsim=1,\n                              drop=TRUE)\n\n\nnonfunctional_ppp_jit <- rjitter(nonfunctional_ppp,\n                              retry=TRUE,\n                              nsim=1,\n                              drop=TRUE)\n\n\nany(duplicated(functional_ppp_jit))\n\n[1] FALSE\n\n\n\nany(duplicated(nonfunctional_ppp_jit))\n\n[1] FALSE"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#creating-owin-object",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#creating-owin-object",
    "title": "Take-Home Exercise 1: Application of Spatial Point Patterns Analysis to Discover the Geographical Distribution of Functional and Non-Function Water Points in Osun State, Nigeria",
    "section": "7.5 Creating owin Object",
    "text": "7.5 Creating owin Object\n\nosun_owin <- as(osun_sp, \"owin\")\n\n\nplot(osun_owin)"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#combining-point-events-object-and-owin-object",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#combining-point-events-object-and-owin-object",
    "title": "Take-Home Exercise 1: Application of Spatial Point Patterns Analysis to Discover the Geographical Distribution of Functional and Non-Function Water Points in Osun State, Nigeria",
    "section": "7.6 Combining Point Events Object and owin Object",
    "text": "7.6 Combining Point Events Object and owin Object\n\nfunctionalOsun_ppp_jit = functional_ppp_jit[osun_owin]\n\n\nnonfunctionalOsun_ppp_jit = nonfunctional_ppp_jit[osun_owin]\n\n\nplot(functionalOsun_ppp_jit)\n\n\n\n\n\nplot(nonfunctionalOsun_ppp_jit)"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#rescalling-kde-values",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#rescalling-kde-values",
    "title": "Take-Home Exercise 1: Application of Spatial Point Patterns Analysis to Discover the Geographical Distribution of Functional and Non-Function Water Points in Osun State, Nigeria",
    "section": "8.1 Rescalling KDE Values",
    "text": "8.1 Rescalling KDE Values\n\nfunctionalOsun_ppp.km <- rescale(functionalOsun_ppp_jit, 1000, \"km\")\n\n\nnonfunctionalOsun_ppp.km <- rescale(nonfunctionalOsun_ppp_jit, 1000, \"km\")"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#kernel-density-estimation",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#kernel-density-estimation",
    "title": "Take-Home Exercise 1: Application of Spatial Point Patterns Analysis to Discover the Geographical Distribution of Functional and Non-Function Water Points in Osun State, Nigeria",
    "section": "8.2 Kernel Density Estimation",
    "text": "8.2 Kernel Density Estimation\n\nkde_functionalOsun_bw <- density(functionalOsun_ppp.km,\n                                 sigma=2,\n                                 edge=TRUE,\n                                 kernel=\"gaussian\")\nplot(kde_functionalOsun_bw)\n\n\n\n\n\nkde_nonfunctionalOsun_bw <- density(nonfunctionalOsun_ppp.km,\n                                 sigma=2,\n                                 edge=TRUE,\n                                 kernel=\"gaussian\")\nplot(kde_nonfunctionalOsun_bw)"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#converting-kde-output-into-grid-object",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#converting-kde-output-into-grid-object",
    "title": "Take-Home Exercise 1: Application of Spatial Point Patterns Analysis to Discover the Geographical Distribution of Functional and Non-Function Water Points in Osun State, Nigeria",
    "section": "8.3 Converting KDE Output into Grid Object",
    "text": "8.3 Converting KDE Output into Grid Object\n\ngridded_kde_functionalOsun_bw <- as.SpatialGridDataFrame.im(kde_functionalOsun_bw)\nspplot(gridded_kde_functionalOsun_bw)\n\n\n\n\n\ngridded_kde_nonfunctionalOsun_bw <- as.SpatialGridDataFrame.im(kde_nonfunctionalOsun_bw)\nspplot(gridded_kde_nonfunctionalOsun_bw)"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#kernel-density-maps-on-openstreetmap-of-osun-state",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#kernel-density-maps-on-openstreetmap-of-osun-state",
    "title": "Take-Home Exercise 1: Application of Spatial Point Patterns Analysis to Discover the Geographical Distribution of Functional and Non-Function Water Points in Osun State, Nigeria",
    "section": "8.4 Kernel Density Maps on openstreetmap of Osun State",
    "text": "8.4 Kernel Density Maps on openstreetmap of Osun State\n\n8.4.1 Converting Gridded Output into Raster\n\nkde_functionalOsun_bw_raster <- raster(gridded_kde_functionalOsun_bw)\n\n\nkde_nonfunctionalOsun_bw_raster <- raster(gridded_kde_nonfunctionalOsun_bw)\n\n\nkde_functionalOsun_bw_raster\n\nclass      : RasterLayer \ndimensions : 128, 128, 16384  (nrow, ncol, ncell)\nresolution : 0.8948485, 0.9616045  (x, y)\nextent     : 176.5032, 291.0438, 331.4347, 454.5201  (xmin, xmax, ymin, ymax)\ncrs        : NA \nsource     : memory\nnames      : v \nvalues     : -2.265749e-17, 4.603349  (min, max)\n\n\n\nkde_nonfunctionalOsun_bw_raster\n\nclass      : RasterLayer \ndimensions : 128, 128, 16384  (nrow, ncol, ncell)\nresolution : 0.8948485, 0.9616045  (x, y)\nextent     : 176.5032, 291.0438, 331.4347, 454.5201  (xmin, xmax, ymin, ymax)\ncrs        : NA \nsource     : memory\nnames      : v \nvalues     : -2.261512e-17, 3.938666  (min, max)\n\n\n\n\n8.4.2 Assigning Projection Systems\n\nprojection(kde_functionalOsun_bw_raster) <- CRS(\"+init=EPSG:26392 +datum=WGS84 +units=km\")\nkde_functionalOsun_bw_raster\n\nclass      : RasterLayer \ndimensions : 128, 128, 16384  (nrow, ncol, ncell)\nresolution : 0.8948485, 0.9616045  (x, y)\nextent     : 176.5032, 291.0438, 331.4347, 454.5201  (xmin, xmax, ymin, ymax)\ncrs        : +init=EPSG:26392 +datum=WGS84 +units=km \nsource     : memory\nnames      : v \nvalues     : -2.265749e-17, 4.603349  (min, max)\n\n\n\nprojection(kde_nonfunctionalOsun_bw_raster) <- CRS(\"+init=EPSG:26392 +datum=WGS84 +units=km\")\nkde_nonfunctionalOsun_bw_raster\n\nclass      : RasterLayer \ndimensions : 128, 128, 16384  (nrow, ncol, ncell)\nresolution : 0.8948485, 0.9616045  (x, y)\nextent     : 176.5032, 291.0438, 331.4347, 454.5201  (xmin, xmax, ymin, ymax)\ncrs        : +init=EPSG:26392 +datum=WGS84 +units=km \nsource     : memory\nnames      : v \nvalues     : -2.261512e-17, 3.938666  (min, max)\n\n\n\n\n8.4.3 Visualising the Output in tmap\n\nr1 <- tmap_mode(\"view\") +\n  tm_shape(kde_functionalOsun_bw_raster) + \n  tm_raster(\"v\") +\n  tm_layout(legend.position = c(\"right\", \"bottom\"), frame = FALSE) +\n  tm_layout(title = \"Functional\") +\n  tm_view(set.zoom.limits = c(8,11))\n\n\nr2 <- tmap_mode(\"view\") +\n  tm_shape(kde_nonfunctionalOsun_bw_raster) + \n  tm_raster(\"v\") +\n  tm_layout(legend.position = c(\"right\", \"bottom\"), frame = FALSE) +\n  tm_layout(title = \"Non-Functional\") +\n  tm_view(set.zoom.limits = c(8,11))\n\n\ntmap_arrange(r1, r2, nrow = 1)"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#kernel-density-vs-point-map",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#kernel-density-vs-point-map",
    "title": "Take-Home Exercise 1: Application of Spatial Point Patterns Analysis to Discover the Geographical Distribution of Functional and Non-Function Water Points in Osun State, Nigeria",
    "section": "8.5 Kernel Density vs Point Map",
    "text": "8.5 Kernel Density vs Point Map\n\n8.5.1 Filtering of Data to Osun State for Point Map\n\nwp_sf_point <- wp_sf %>% \n  rename(clean_adm1 = '#clean_adm1')\n\n\nwp_sf_point <- wp_sf_point %>% \n  rename(status_clean = '#status_clean')\n\n\nwp_sf_point <- subset(wp_sf_point, clean_adm1 == \"Osun\")\n\n\nwp_sf_point <- wp_sf_point %>%\n  filter(status_clean == \"Functional\" | status_clean == \"Functional but not in use\" | status_clean == \"Functional but needs repair\" | status_clean == \"Functional, needs repair\" | status_clean == \"Functional, not in use\")\n\n\n\n8.5.2 Point Map\n\ntmap_mode(\"view\")\n  tm_shape(wp_sf_point) +\n  tm_dots(col = \"status_clean\",\n             size = 0.01,\n             border.col = \"black\",\n             border.lwd = 0.5) +\n  tm_view(set.zoom.limits = c(9,11))\n\n\n\n\n\n\n\n\n8.5.3 KDE Map\n\nplot(kde_functionalOsun_bw)\n\n\n\n\n\n\n\n\n\n\nAdvantages:\n\n\n\n\nKernel density map provides a continuous representation of the distribution of the data points, while a point map can become cluttered and difficult to interpret when the number of data points is large."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#analysing-spatial-point-process-using-g-function",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#analysing-spatial-point-process-using-g-function",
    "title": "Take-Home Exercise 1: Application of Spatial Point Patterns Analysis to Discover the Geographical Distribution of Functional and Non-Function Water Points in Osun State, Nigeria",
    "section": "9.1 Analysing Spatial Point Process Using G-Function",
    "text": "9.1 Analysing Spatial Point Process Using G-Function\n\n9.1.1 Functional Water Points in Osun State, Nigeria\n\n9.1.1.1 Computing G-Function Estimation\n\nG_Functional = Gest(functionalOsun_ppp_jit, correction = \"border\")\nplot(G_Functional, xlim=c(0,500))\n\n\n\n\n\n\n9.1.1.2 Performing Complete Spatial Randomness Test\nTo confirm the observed spatial patterns above, a hypothesis test will be conducted. The hypothesis and test are as follows:\nHo = The distribution of functional water points at Osun State, Nigeria, are randomly distributed.\nH1= The distribution of functional water points at Osun State, Nigeria are not randomly distributed.\nConfidence Level: 99%\nSignificance Level: 0.01\nThe null hypothesis will be rejected if p-value is smaller than alpha value of 0.001.\n\nG_Functional.csr <- envelope(functionalOsun_ppp_jit, Gest, nsim = 999)\n\nGenerating 999 simulations of CSR  ...\n1, 2, 3, ......10.........20.........30.........40.........50.........60........\n.70.........80.........90.........100.........110.........120.........130......\n...140.........150.........160.........170.........180.........190.........200....\n.....210.........220.........230.........240.........250.........260.........270..\n.......280.........290.........300.........310.........320.........330.........340\n.........350.........360.........370.........380.........390.........400........\n.410.........420.........430.........440.........450.........460.........470......\n...480.........490.........500.........510.........520.........530.........540....\n.....550.........560.........570.........580.........590.........600.........610..\n.......620.........630.........640.........650.........660.........670.........680\n.........690.........700.........710.........720.........730.........740........\n.750.........760.........770.........780.........790.........800.........810......\n...820.........830.........840.........850.........860.........870.........880....\n.....890.........900.........910.........920.........930.........940.........950..\n.......960.........970.........980.........990........ 999.\n\nDone.\n\n\n\nplot(G_Functional.csr)\n\n\n\n\n\n\n\n\n\n\nResults:\n\n\n\nThe observed G(r) is above the G(theo) and above the envelope. This shows that the functional water points are clustered, hence rejecting the null hypothesis that the functional water points in Osun State, Nigeria are randomly distributed.\n\n\n\n\n\n\n9.1.2 Non-Functional Water Points in Osun State, Nigeria\n\n9.1.2.1 Computing G-Function Estimation\n\nG_Nonfunctional = Gest(nonfunctionalOsun_ppp_jit, correction = \"border\")\nplot(G_Nonfunctional, xlim=c(0,500))\n\n\n\n\n\n\n9.1.2.2 Performing Complete Spatial Randomness Test\nTo confirm the observed spatial patterns above, a hypothesis test will be conducted. The hypothesis and test are as follows:\nHo = The distribution of non-functional water points at Osun State, Nigeria, are randomly distributed.\nH1= The distribution of non-functional water points at Osun State, Nigeria are not randomly distributed.\nConfidence Level: 99%\nSignificance Level: 0.01\nThe null hypothesis will be rejected if p-value is smaller than alpha value of 0.001.\n\nG_Nonfunctional.csr <- envelope(nonfunctionalOsun_ppp_jit, Gest, nsim = 999)\n\nGenerating 999 simulations of CSR  ...\n1, 2, 3, ......10.........20.........30.........40.........50.........60........\n.70.........80.........90.........100.........110.........120.........130......\n...140.........150.........160.........170.........180.........190.........200....\n.....210.........220.........230.........240.........250.........260.........270..\n.......280.........290.........300.........310.........320.........330.........340\n.........350.........360.........370.........380.........390.........400........\n.410.........420.........430.........440.........450.........460.........470......\n...480.........490.........500.........510.........520.........530.........540....\n.....550.........560.........570.........580.........590.........600.........610..\n.......620.........630.........640.........650.........660.........670.........680\n.........690.........700.........710.........720.........730.........740........\n.750.........760.........770.........780.........790.........800.........810......\n...820.........830.........840.........850.........860.........870.........880....\n.....890.........900.........910.........920.........930.........940.........950..\n.......960.........970.........980.........990........ 999.\n\nDone.\n\n\n\nplot(G_Nonfunctional.csr)\n\n\n\n\n\n\n\n\n\n\nResults:\n\n\n\nThe observed G(r) is above the G(theo) and above the envelope. This shows that the non-functional water points are clustered, hence rejecting the null hypothesis that the functional water points in Osun State, Nigeria are randomly distributed."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#analysing-spatial-point-process-using-l-function",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#analysing-spatial-point-process-using-l-function",
    "title": "Take-Home Exercise 1: Application of Spatial Point Patterns Analysis to Discover the Geographical Distribution of Functional and Non-Function Water Points in Osun State, Nigeria",
    "section": "9.2 Analysing Spatial Point Process Using L-Function",
    "text": "9.2 Analysing Spatial Point Process Using L-Function\n\n9.2.1 Functional Water Points in Osun State, Nigeria\n\n9.2.1.1 Computing L-Function Estimation\n{r}\nL_wp = Lest(functionalOsun_ppp_jit, correction = \"Ripley\")\nplot(L_wp, . -r ~ r, \n     ylab= \"L(d)-r\", xlab = \"d(m)\")\n\n\n\nFunctional Water Point\n\n\n\n\n9.2.1.2 Performing Complete Spatial Randomness Test\nTo confirm the observed spatial patterns above, a hypothesis test will be conducted. The hypothesis and test are as follows:\nHo = The distribution of functional water points at Osun State, Nigeria, are randomly distributed.\nH1= The distribution of functional water points at Osun State, Nigeria are not randomly distributed.\nConfidence Level: 95%\nSignificance Level: 0.05\nThe null hypothesis will be rejected if p-value if smaller than alpha value of 0.001.\n{r}\nL_wp.csr <- envelope(functionalOsun_ppp_jit, Lest, nsim = 39, rank = 1, glocal=TRUE)\n{r}\nplot(L_wp.csr, . - r ~ r, xlab=\"d\", ylab=\"L(d)-r\")\n\n\n\nFunctional Water Point - After Complete Spatial Randomness Test\n\n\n\n\n\n\n\n\nResults:\n\n\n\nThe observed L(r) is above the L(theo) and above the envelope. This shows that the functional water points are clustered, hence rejecting the null hypothesis that the functional water points in Osun State, Nigeria are randomly distributed.\n\n\n\n\n\n\n9.2.2 Non-Functional Water Points in Osun State, Nigeria\n\n9.2.2.1 Computing L-Function Estimation\n{r}\nL_nfwp = Lest(nonfunctionalOsun_ppp_jit, correction = \"Ripley\")\nplot(L_nfwp, . -r ~ r, \n     ylab= \"L(d)-r\", xlab = \"d(m)\")\n\n\n\nNon-Functional Water Points\n\n\n\n\n9.2.2.2 Performing Complete Spatial Randomness Test\nTo confirm the observed spatial patterns above, a hypothesis test will be conducted. The hypothesis and test are as follows:\nHo = The distribution of non-functional water points at Osun State, Nigeria, are randomly distributed.\nH1= The distribution of non-functional water points at Osun State, Nigeria are not randomly distributed.\nConfidence Level: 95%\nSignificance Level: 0.05\nThe null hypothesis will be rejected if p-value if smaller than alpha value of 0.001.\n{r}\nL_nfwp.csr <- envelope(nonfunctionalOsun_ppp_jit, Lest, nsim = 39, rank = 1, glocal=TRUE)\n{r}\nplot(L_nfwp.csr, . - r ~ r, xlab=\"d\", ylab=\"L(d)-r\")\n\n\n\nNon-Functional Water Points - After Complete Spatial Randomness Test\n\n\n\n\n\n\n\n\nResults:\n\n\n\nThe observed L(r) is above the L(theo) and above the envelope. This shows that the functional water points are clustered, hence rejecting the null hypothesis that the non-functional water points in Osun State, Nigeria are randomly distributed."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#preparing-data-set",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#preparing-data-set",
    "title": "Take-Home Exercise 1: Application of Spatial Point Patterns Analysis to Discover the Geographical Distribution of Functional and Non-Function Water Points in Osun State, Nigeria",
    "section": "10.1 Preparing Data Set",
    "text": "10.1 Preparing Data Set\n\nwp_sf_osun <- wp_sf %>% \n  rename(status_clean = '#status_clean') %>%\n  rename(lat = '#lat_deg') %>%\n  rename(lng = '#lon_deg') %>%\n  rename(clean_adm1 = '#clean_adm1') %>%\n  mutate(status_clean = replace_na(\n    status_clean, \"unknown\"))\n\n\nwp_sf_osunfilter <- subset(wp_sf_osun, clean_adm1 == \"Osun\")\n\n\nwp_sf_osunfilter <- wp_sf_osunfilter %>%\n  dplyr::select(status_clean, lat, lng)"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#preparing-nearest-neighbours-list",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#preparing-nearest-neighbours-list",
    "title": "Take-Home Exercise 1: Application of Spatial Point Patterns Analysis to Discover the Geographical Distribution of Functional and Non-Function Water Points in Osun State, Nigeria",
    "section": "10.2 Preparing Nearest Neighbours List",
    "text": "10.2 Preparing Nearest Neighbours List\n\nnb <- include_self(\n  st_knn(st_geometry(wp_sf_osunfilter), 6))"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#computing-kernel-weights",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#computing-kernel-weights",
    "title": "Take-Home Exercise 1: Application of Spatial Point Patterns Analysis to Discover the Geographical Distribution of Functional and Non-Function Water Points in Osun State, Nigeria",
    "section": "10.3 Computing Kernel Weights",
    "text": "10.3 Computing Kernel Weights\n\nwt <- st_kernel_weights(nb, \n                        wp_sf_osunfilter, \n                        \"gaussian\", \n                        adaptive = TRUE)"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#preparing-the-vector-list",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#preparing-the-vector-list",
    "title": "Take-Home Exercise 1: Application of Spatial Point Patterns Analysis to Discover the Geographical Distribution of Functional and Non-Function Water Points in Osun State, Nigeria",
    "section": "10.4 Preparing the Vector List",
    "text": "10.4 Preparing the Vector List\n\nfunctionalWp <- wp_sf_osunfilter %>%\n  filter(status_clean %in%\n           c(\"Functional\",\n             \"Functional but not in use\",\n             \"Functional but needs repair\",\n             \"Functional, needs repair\",\n             \"Functional, not in use\"))\nA <- functionalWp$status_clean\n\n\nnonfunctionalWp <- wp_sf_osunfilter %>%\n  filter(status_clean %in%\n           c(\"Abandoned/Decommissioned\",\n             \"Non-Functional due to dry season\",\n             \"Non-Functional\",\n             \"Non-functional, dry\"))\nB <- nonfunctionalWp$status_clean"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#computing-lclq",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#computing-lclq",
    "title": "Take-Home Exercise 1: Application of Spatial Point Patterns Analysis to Discover the Geographical Distribution of Functional and Non-Function Water Points in Osun State, Nigeria",
    "section": "10.5 Computing LCLQ",
    "text": "10.5 Computing LCLQ\n\nLCLQ <- local_colocation(A, B, nb, wt, 39)"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#joining-output-table",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#joining-output-table",
    "title": "Take-Home Exercise 1: Application of Spatial Point Patterns Analysis to Discover the Geographical Distribution of Functional and Non-Function Water Points in Osun State, Nigeria",
    "section": "10.6 Joining Output Table",
    "text": "10.6 Joining Output Table\n\nLCLQ_WP <- cbind(wp_sf_osunfilter, LCLQ)"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#plotting-lclq-values",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#plotting-lclq-values",
    "title": "Take-Home Exercise 1: Application of Spatial Point Patterns Analysis to Discover the Geographical Distribution of Functional and Non-Function Water Points in Osun State, Nigeria",
    "section": "10.7 Plotting LCLQ Values",
    "text": "10.7 Plotting LCLQ Values\n\ntmap_mode(\"view\")\ntm_shape(LCLQ_WP)+ \n  tm_dots(col = \"Non.Functional\",\n             size = 0.01,\n             border.col = \"black\",\n             border.lwd = 0.5) +\n  tm_view(set.zoom.limits = c(9, 16))\n\n\n\n\n\n\n\n\n\n\n\n\nResults:\n\n\n\nWhen the Colocation Analysis tool is run, it adds two fields to the resulting Output Features. As observed in the above figure, the Local Colocation Quotient is 1.007 which is greater than 1. Hence, features of the Category of Interest (Functional Water Point) are more likely to have features of the Neighbouring Category (Non-Functional Water Point) within their neighbourhood."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html",
    "href": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html",
    "title": "Take-Home Exercise 2: Spatio-temporal Analysis of COVID-19 Vaccination Trends at the Sub-district Level, DKI Jakarta",
    "section": "",
    "text": "Since late December 2019, an outbreak of a novel coronavirus disease (COVID-19; previously known as 2019-nCoV) was reported in Wuhan, China, which had subsequently affected 210 countries worldwide. In general, COVID-19 is an acute resolved disease but it can also be deadly, with a 2% case fatality rate.\nThe COVID-19 vaccination in Indonesia is an ongoing mass immunisation in response to the COVID-19 pandemic in Indonesia. On 13 January 2021, the program commenced when President Joko Widodo was vaccinated at the presidential palace. In terms of total doses given, Indonesia ranks third in Asia and fifth in the world.\nAccording to wikipedia, as of 5 February 2023 at 18:00 WIB (UTC+7), 204,266,655 people had received the first dose of the vaccine and 175,131,893 people had been fully vaccinated; 69,597,474 of them had been inoculated with the booster or the third dose, while 1,585,164 had received the fourth dose. Jakarta has the highest percentage of population fully vaccinated with 103.46%, followed by Bali and Special Region of Yogyakarta with 85.45% and 83.02% respectively.\nDespite its compactness, the cumulative vaccination rate are not evenly distributed within DKI Jakarta. The question is where are the sub-districts with relatively higher number of vaccination rate and how they changed over time.\n\n\n\n\nExploratory Spatial Data Analysis (ESDA) hold tremendous potential to address complex problems facing society. In this study, you are tasked to apply appropriate Local Indicators of Spatial Association (LISA) and Emerging Hot Spot Analysis (EHSA) to undercover the spatio-temporal trends of COVID-19 vaccination in DKI Jakarta.\n\n\n\n\nChoropleth Mapping and Analysis\n\nCompute the monthly vaccination rate from July 2021 to June 2022 at sub-district level\nPrepare the monthly vaccination rate maps by using appropriate tmap functions\nDescribe the spatial patterns revealed by the choropleth maps (not more than 200 words)\n\nLocal Gi* Analysis\n\nCompute local Gi* values of the monthly vaccination rate\nDisplay the Gi* maps of the monthly vaccination rate. The maps should only display the significant (i.e. p-value < 0.05)\nWith reference to the analysis results, draw statistical conclusions (not more than 250 words)\n\nEmerging Hot Spot Analysis (EHSA)\n\nPerform Mann-Kendall Test by using the spatio-temporal local Gi* values\nSelect three sub-districts and describe the temporal trends revealed (not more than 250 words)\nPrepare a EHSA map of the Gi* values of vaccination rate. The maps should only display the significant (i.e. p-value < 0.05)\nWith reference to the EHSA map prepared, describe the spatial patterns revealed (not more than 250 words)"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#importing-modules",
    "href": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#importing-modules",
    "title": "Take-Home Exercise 2: Spatio-temporal Analysis of COVID-19 Vaccination Trends at the Sub-district Level, DKI Jakarta",
    "section": "2.1 Importing Modules",
    "text": "2.1 Importing Modules\nThe following R packages will be used for this analysis:\n\ntidyverse - Used for data science tasks\ntmap - Used for creating thematic maps\nsf - Used for importing, managing and processing geospatial data\nsfdep - Used for geometry neighbours and local indicators of spatial association\nreadxl: Used to read Excel into R\nkendall - Used for Mann-Kendall Test\nplotly - Used for interactive graphs\nplyr - Used for functions\n\n\npacman::p_load(sf, tmap, tidyverse, sfdep, readxl, Kendall, plotly, plyr)"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#geospatial-data",
    "href": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#geospatial-data",
    "title": "Take-Home Exercise 2: Spatio-temporal Analysis of COVID-19 Vaccination Trends at the Sub-district Level, DKI Jakarta",
    "section": "2.2 Geospatial Data",
    "text": "2.2 Geospatial Data\n\n2.2.1 Importing Data\n\ngeoJAR <- st_read(dsn = \"data/geospatial/\",\n                  layer = \"BATAS_DESA_DESEMBER_2019_DUKCAPIL_DKI_JAKARTA\") %>%\n  st_transform(crs=26392)\n\nReading layer `BATAS_DESA_DESEMBER_2019_DUKCAPIL_DKI_JAKARTA' from data source \n  `C:\\Users\\la935\\Desktop\\IS415 - GAA\\IS415 - GAA (New)\\Take-Home_Ex\\Take-Home_Ex02\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 269 features and 161 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 106.3831 ymin: -6.370815 xmax: 106.9728 ymax: -5.184322\nGeodetic CRS:  WGS 84\n\n\n\n\n2.2.2 Data Pre-Processing\n\n2.2.2.1 Remove Missing Values\n\ngeoJAR[rowSums(is.na(geoJAR))!=0,]\n\nSimple feature collection with 2 features and 161 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 16026250 ymin: -16069470 xmax: 16036970 ymax: -16060460\nProjected CRS: Minna / Nigeria Mid Belt\n    OBJECT_ID KODE_DESA             DESA   KODE    PROVINSI KAB_KOTA KECAMATAN\n243     25645  31888888     DANAU SUNTER 318888 DKI JAKARTA     <NA>      <NA>\n244     25646  31888888 DANAU SUNTER DLL 318888 DKI JAKARTA     <NA>      <NA>\n    DESA_KELUR JUMLAH_PEN JUMLAH_KK LUAS_WILAY KEPADATAN PERPINDAHA JUMLAH_MEN\n243       <NA>          0         0          0         0          0          0\n244       <NA>          0         0          0         0          0          0\n    PERUBAHAN WAJIB_KTP SILAM KRISTEN KHATOLIK HINDU BUDHA KONGHUCU KEPERCAYAA\n243         0         0     0       0        0     0     0        0          0\n244         0         0     0       0        0     0     0        0          0\n    PRIA WANITA BELUM_KAWI KAWIN CERAI_HIDU CERAI_MATI U0 U5 U10 U15 U20 U25\n243    0      0          0     0          0          0  0  0   0   0   0   0\n244    0      0          0     0          0          0  0  0   0   0   0   0\n    U30 U35 U40 U45 U50 U55 U60 U65 U70 U75 TIDAK_BELU BELUM_TAMA TAMAT_SD SLTP\n243   0   0   0   0   0   0   0   0   0   0          0          0        0    0\n244   0   0   0   0   0   0   0   0   0   0          0          0        0    0\n    SLTA DIPLOMA_I DIPLOMA_II DIPLOMA_IV STRATA_II STRATA_III BELUM_TIDA\n243    0         0          0          0         0          0          0\n244    0         0          0          0         0          0          0\n    APARATUR_P TENAGA_PEN WIRASWASTA PERTANIAN NELAYAN AGAMA_DAN PELAJAR_MA\n243          0          0          0         0       0         0          0\n244          0          0          0         0       0         0          0\n    TENAGA_KES PENSIUNAN LAINNYA GENERATED KODE_DES_1 BELUM_ MENGUR_ PELAJAR_\n243          0         0       0      <NA>       <NA>      0       0        0\n244          0         0       0      <NA>       <NA>      0       0        0\n    PENSIUNA_1 PEGAWAI_ TENTARA KEPOLISIAN PERDAG_ PETANI PETERN_ NELAYAN_1\n243          0        0       0          0       0      0       0         0\n244          0        0       0          0       0      0       0         0\n    INDUSTR_ KONSTR_ TRANSP_ KARYAW_ KARYAW1 KARYAW1_1 KARYAW1_12 BURUH BURUH_\n243        0       0       0       0       0         0          0     0      0\n244        0       0       0       0       0         0          0     0      0\n    BURUH1 BURUH1_1 PEMBANT_ TUKANG TUKANG_1 TUKANG_12 TUKANG__13 TUKANG__14\n243      0        0        0      0        0         0          0          0\n244      0        0        0      0        0         0          0          0\n    TUKANG__15 TUKANG__16 TUKANG__17 PENATA PENATA_ PENATA1_1 MEKANIK SENIMAN_\n243          0          0          0      0       0         0       0        0\n244          0          0          0      0       0         0       0        0\n    TABIB PARAJI_ PERANCA_ PENTER_ IMAM_M PENDETA PASTOR WARTAWAN USTADZ JURU_M\n243     0       0        0       0      0       0      0        0      0      0\n244     0       0        0       0      0       0      0        0      0      0\n    PROMOT ANGGOTA_ ANGGOTA1 ANGGOTA1_1 PRESIDEN WAKIL_PRES ANGGOTA1_2\n243      0        0        0          0        0          0          0\n244      0        0        0          0        0          0          0\n    ANGGOTA1_3 DUTA_B GUBERNUR WAKIL_GUBE BUPATI WAKIL_BUPA WALIKOTA WAKIL_WALI\n243          0      0        0          0      0          0        0          0\n244          0      0        0          0      0          0        0          0\n    ANGGOTA1_4 ANGGOTA1_5 DOSEN GURU PILOT PENGACARA_ NOTARIS ARSITEK AKUNTA_\n243          0          0     0    0     0          0       0       0       0\n244          0          0     0    0     0          0       0       0       0\n    KONSUL_ DOKTER BIDAN PERAWAT APOTEK_ PSIKIATER PENYIA_ PENYIA1 PELAUT\n243       0      0     0       0       0         0       0       0      0\n244       0      0     0       0       0         0       0       0      0\n    PENELITI SOPIR PIALAN PARANORMAL PEDAGA_ PERANG_ KEPALA_ BIARAW_ WIRASWAST_\n243        0     0      0          0       0       0       0       0          0\n244        0     0      0          0       0       0       0       0          0\n    LAINNYA_12 LUAS_DESA KODE_DES_3 DESA_KEL_1 KODE_12\n243          0         0       <NA>       <NA>       0\n244          0         0       <NA>       <NA>       0\n                          geometry\n243 MULTIPOLYGON (((16026561 -1...\n244 MULTIPOLYGON (((16030782 -1...\n\n\n\ngeoJAR <- na.omit(geoJAR,c(\"DESA_KELUR\"))\n\n\n\n2.2.2.2 Transform Coordinate System\n\nst_crs(geoJAR)\n\nCoordinate Reference System:\n  User input: EPSG:26392 \n  wkt:\nPROJCRS[\"Minna / Nigeria Mid Belt\",\n    BASEGEOGCRS[\"Minna\",\n        DATUM[\"Minna\",\n            ELLIPSOID[\"Clarke 1880 (RGS)\",6378249.145,293.465,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4263]],\n    CONVERSION[\"Nigeria Mid Belt\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",4,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",8.5,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",0.99975,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",670553.98,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",0,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"(E)\",east,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"(N)\",north,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Engineering survey, topographic mapping.\"],\n        AREA[\"Nigeria between 6°30'E and 10°30'E, onshore and offshore shelf.\"],\n        BBOX[3.57,6.5,13.53,10.51]],\n    ID[\"EPSG\",26392]]\n\n\n\ngeoJAR23845 <- st_transform(geoJAR, 23845)\n\n\nst_crs(geoJAR23845)\n\nCoordinate Reference System:\n  User input: EPSG:23845 \n  wkt:\nPROJCRS[\"DGN95 / Indonesia TM-3 zone 54.1\",\n    BASEGEOGCRS[\"DGN95\",\n        DATUM[\"Datum Geodesi Nasional 1995\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4755]],\n    CONVERSION[\"Indonesia TM-3 zone 54.1\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",139.5,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",0.9999,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",200000,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",1500000,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"easting (X)\",east,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"northing (Y)\",north,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Cadastre.\"],\n        AREA[\"Indonesia - onshore east of 138°E.\"],\n        BBOX[-9.19,138,-1.49,141.01]],\n    ID[\"EPSG\",23845]]\n\n\n\n\n\n2.2.3 Data Visualisation\n\nplot(st_geometry(geoJAR23845))\n\n\n\n\n\n2.2.3.1 Retain Relavant Columns\n\ngeoJAR23845 <- geoJAR23845 %>%\n  dplyr::select(c(1:9))\n\n\n\n2.2.3.2 Removing Outer Islands\n\njar_main <- geoJAR23845 %>%\n  filter(KAB_KOTA %in%\n           c(\"JAKARTA BARAT\",\n             \"JAKARTA PUSAT\",\n             \"JAKARTA UTARA\",\n             \"JAKARTA SELATAN\",\n             \"JAKARTA TIMUR\"))\n\n\n\n2.2.3.3 Renaming Columns\n\njar_main <- jar_main %>%\n  dplyr::rename(\n    Object_Id = OBJECT_ID,\n    Province = PROVINSI,\n    City = KAB_KOTA,\n    District = KECAMATAN,\n    Village_Code = KODE_DESA,\n    Village = DESA,\n    Sub_District = DESA_KELUR,\n    Code = KODE,\n    Total_Population = JUMLAH_PEN\n  )\n\n\nglimpse(jar_main)\n\nRows: 261\nColumns: 10\n$ Object_Id        <dbl> 25477, 25478, 25397, 25400, 25390, 25391, 25394, 2538…\n$ Village_Code     <chr> \"3173031006\", \"3173031007\", \"3171031003\", \"3171031006…\n$ Village          <chr> \"KEAGUNGAN\", \"GLODOK\", \"HARAPAN MULIA\", \"CEMPAKA BARU…\n$ Code             <dbl> 317303, 317303, 317103, 317103, 317102, 317102, 31710…\n$ Province         <chr> \"DKI JAKARTA\", \"DKI JAKARTA\", \"DKI JAKARTA\", \"DKI JAK…\n$ City             <chr> \"JAKARTA BARAT\", \"JAKARTA BARAT\", \"JAKARTA PUSAT\", \"J…\n$ District         <chr> \"TAMAN SARI\", \"TAMAN SARI\", \"KEMAYORAN\", \"KEMAYORAN\",…\n$ Sub_District     <chr> \"KEAGUNGAN\", \"GLODOK\", \"HARAPAN MULIA\", \"CEMPAKA BARU…\n$ Total_Population <dbl> 21609, 9069, 29085, 41913, 15793, 33383, 35906, 21828…\n$ geometry         <MULTIPOLYGON [m]> MULTIPOLYGON (((-3627004 69..., MULTIPOL…\n\n\n\n\n2.2.3.4 Checking Map\n\ntm_shape(jar_main) + \n  tm_polygons(\"City\")"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#aspatial-data",
    "href": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#aspatial-data",
    "title": "Take-Home Exercise 2: Spatio-temporal Analysis of COVID-19 Vaccination Trends at the Sub-district Level, DKI Jakarta",
    "section": "2.3 Aspatial Data",
    "text": "2.3 Aspatial Data\n\n2.3.1 Importing Data\n\n2.3.1.1 Jul 2021\n\njul2021 <- read_xlsx(\"data/aspatial/Data Vaksinasi Berbasis Kelurahan (31 Juli 2021).xlsx\")\n\n\n\n2.3.1.2 Aug 2021\n\naug2021 <- read_xlsx(\"data/aspatial/Data Vaksinasi Berbasis Kelurahan (31 Agustus 2021).xlsx\")\n\n\n\n2.3.1.3 Sep 2021\n\nsep2021 <- read_xlsx(\"data/aspatial/Data Vaksinasi Berbasis Kelurahan (30 September 2021).xlsx\")\n\n\n\n2.3.1.4 Oct 2021\n\noct2021 <- read_xlsx(\"data/aspatial/Data Vaksinasi Berbasis Kelurahan (31 Oktober 2021).xlsx\")\n\n\n\n2.3.1.5 Nov 2021\n\nnov2021 <- read_xlsx(\"data/aspatial/Data Vaksinasi Berbasis Kelurahan (30 November 2021).xlsx\")\n\n\n\n2.3.1.6 Dec 2021\n\ndec2021 <- read_xlsx(\"data/aspatial/Data Vaksinasi Berbasis Kelurahan (31 Desember 2021).xlsx\")\n\n\n\n2.3.1.7 Jan 2022\n\njan2022 <- read_xlsx(\"data/aspatial/Data Vaksinasi Berbasis Kelurahan (31 Januari 2022).xlsx\")\n\n\n\n2.3.1.8 Feb 2022\n\nfeb2022 <- read_xlsx(\"data/aspatial/Data Vaksinasi Berbasis Kelurahan (27 Februari 2022).xlsx\")\n\n\n\n2.3.1.9 Mar 2022\n\nmar2022 <- read_xlsx(\"data/aspatial/Data Vaksinasi Berbasis Kelurahan (31 Maret 2022).xlsx\")\n\n\n\n2.3.1.10 Apr 2022\n\napr2022 <- read_xlsx(\"data/aspatial/Data Vaksinasi Berbasis Kelurahan (30 April 2022).xlsx\")\n\n\n\n2.3.1.11 May 2022\n\nmay2022 <- read_xlsx(\"data/aspatial/Data Vaksinasi Berbasis Kelurahan (31 Mei 2022).xlsx\")\n\n\n\n2.3.1.12 June 2022\n\njun2022 <- read_xlsx(\"data/aspatial/Data Vaksinasi Berbasis Kelurahan (30 Juni 2022).xlsx\")\n\n\n\n\n2.3.2 Creation of Pre-Processing Function & Keeping Relevant Columns\n\npreprocess <- function(files){\n  result <- read_xlsx(files)[-1,]\n  \n  startpoint <- gregexpr(pattern=\"Kelurahan\", files)[[1]] + 11\n  \n  result$Date <- substr(files, startpoint, nchar(files)-6)\n  \n  result <- result %>% \n    select(\"Date\", \n           \"KODE KELURAHAN\", \n           \"KELURAHAN\", \n           \"SASARAN\", \n           \"BELUM VAKSIN\")\n  return(result)\n}\n\n\n\n2.3.3 Applying Function to All Data Files\n\nfile_list <-list.files(path = \"data/aspatial\", pattern = \"*.xlsx\", full.names=TRUE)\n\ndf_list <- lapply(seq_along(file_list), function(x) preprocess (file_list[x]))\n\n\nvaccination_jakarta <- ldply(df_list, data.frame)\n\n\nglimpse(vaccination_jakarta)\n\nRows: 3,204\nColumns: 5\n$ Date           <chr> \"27 Februari 2022\", \"27 Februari 2022\", \"27 Februari 20…\n$ KODE.KELURAHAN <chr> \"3172051003\", \"3173041007\", \"3175041005\", \"3175031003\",…\n$ KELURAHAN      <chr> \"ANCOL\", \"ANGKE\", \"BALE KAMBANG\", \"BALI MESTER\", \"BAMBU…\n$ SASARAN        <dbl> 23947, 29381, 29074, 9752, 26285, 21566, 23886, 47898, …\n$ BELUM.VAKSIN   <dbl> 4592, 5319, 5903, 1649, 4030, 3950, 3344, 9382, 3772, 7…\n\n\n\n\n2.3.4 Formatting Date Column\n\n# Set locale to Indonesia\nSys.setlocale(locale=\"ind\")\n\n[1] \"LC_COLLATE=Indonesian_Indonesia.1252;LC_CTYPE=Indonesian_Indonesia.1252;LC_MONETARY=Indonesian_Indonesia.1252;LC_NUMERIC=C;LC_TIME=Indonesian_Indonesia.1252\"\n\n\n\nvaccination_jakarta$Date <- c(vaccination_jakarta$Date) %>% \n  as.Date(vaccination_jakarta$Date, format =\"%d %B %Y\")\n\nglimpse(vaccination_jakarta)\n\nRows: 3,204\nColumns: 5\n$ Date           <date> 2022-02-27, 2022-02-27, 2022-02-27, 2022-02-27, 2022-0~\n$ KODE.KELURAHAN <chr> \"3172051003\", \"3173041007\", \"3175041005\", \"3175031003\",~\n$ KELURAHAN      <chr> \"ANCOL\", \"ANGKE\", \"BALE KAMBANG\", \"BALI MESTER\", \"BAMBU~\n$ SASARAN        <dbl> 23947, 29381, 29074, 9752, 26285, 21566, 23886, 47898, ~\n$ BELUM.VAKSIN   <dbl> 4592, 5319, 5903, 1649, 4030, 3950, 3344, 9382, 3772, 7~\n\n\n\n\n2.3.5 Renaming Columns to English\n\nvaccination_jakarta <- vaccination_jakarta %>% \n  dplyr::rename(\n    Date = Date,\n    Sub_District_Code = KODE.KELURAHAN,\n    Sub_District = KELURAHAN, \n    Target = SASARAN, \n    Not_Yet_Vaccinated = BELUM.VAKSIN\n    )\n\n\nglimpse(vaccination_jakarta)\n\nRows: 3,204\nColumns: 5\n$ Date               <date> 2022-02-27, 2022-02-27, 2022-02-27, 2022-02-27, 20~\n$ Sub_District_Code  <chr> \"3172051003\", \"3173041007\", \"3175041005\", \"31750310~\n$ Sub_District       <chr> \"ANCOL\", \"ANGKE\", \"BALE KAMBANG\", \"BALI MESTER\", \"B~\n$ Target             <dbl> 23947, 29381, 29074, 9752, 26285, 21566, 23886, 478~\n$ Not_Yet_Vaccinated <dbl> 4592, 5319, 5903, 1649, 4030, 3950, 3344, 9382, 377~\n\n\n\n\n2.3.6 Check for Missing Values\n\nvaccination_jakarta[rowSums(is.na(vaccination_jakarta))!=0,]\n\n[1] Date               Sub_District_Code  Sub_District       Target            \n[5] Not_Yet_Vaccinated\n<0 rows> (or 0-length row.names)"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#joining-of-geospatial-aspatial-data",
    "href": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#joining-of-geospatial-aspatial-data",
    "title": "Take-Home Exercise 2: Spatio-temporal Analysis of COVID-19 Vaccination Trends at the Sub-district Level, DKI Jakarta",
    "section": "3.1 Joining of Geospatial & Aspatial Data",
    "text": "3.1 Joining of Geospatial & Aspatial Data\n\ncolnames(jar_main)\n\n [1] \"Object_Id\"        \"Village_Code\"     \"Village\"          \"Code\"            \n [5] \"Province\"         \"City\"             \"District\"         \"Sub_District\"    \n [9] \"Total_Population\" \"geometry\"        \n\n\n\ncolnames(vaccination_jakarta)\n\n[1] \"Date\"               \"Sub_District_Code\"  \"Sub_District\"      \n[4] \"Target\"             \"Not_Yet_Vaccinated\"\n\n\n\ncombined_jakarta <- left_join(jar_main, vaccination_jakarta,\n                              by=c(\n                                \"Village_Code\"=\"Sub_District_Code\", \n                                \"Sub_District\"=\"Sub_District\")\n                              )\n\n\ncolnames(combined_jakarta)\n\n [1] \"Object_Id\"          \"Village_Code\"       \"Village\"           \n [4] \"Code\"               \"Province\"           \"City\"              \n [7] \"District\"           \"Sub_District\"       \"Total_Population\"  \n[10] \"Date\"               \"Target\"             \"Not_Yet_Vaccinated\"\n[13] \"geometry\""
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#combined-jakarta-visualisation",
    "href": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#combined-jakarta-visualisation",
    "title": "Take-Home Exercise 2: Spatio-temporal Analysis of COVID-19 Vaccination Trends at the Sub-district Level, DKI Jakarta",
    "section": "3.2 Combined Jakarta Visualisation",
    "text": "3.2 Combined Jakarta Visualisation\n\ntotal_population = tm_shape(combined_jakarta)+\n  tm_fill(\"Total_Population\") +\n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title=\"Total Population Count\")\n\ntarget = tm_shape(combined_jakarta)+\n  tm_fill(\"Target\") +\n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title=\"Target Count\")\n\nnot_yet_vaccinated = tm_shape(combined_jakarta)+\n  tm_fill(\"Not_Yet_Vaccinated\") +\n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title=\"Not Yet Vaccinated Count\")\n\ntmap_arrange(total_population, target, not_yet_vaccinated)"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#checking-for-missing-values",
    "href": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#checking-for-missing-values",
    "title": "Take-Home Exercise 2: Spatio-temporal Analysis of COVID-19 Vaccination Trends at the Sub-district Level, DKI Jakarta",
    "section": "3.3 Checking for Missing Values",
    "text": "3.3 Checking for Missing Values\n\njar_main[rowSums(is.na(jar_main))!=0,]\n\nSimple feature collection with 0 features and 9 fields\nBounding box:  xmin: NA ymin: NA xmax: NA ymax: NA\nProjected CRS: DGN95 / Indonesia TM-3 zone 54.1\n [1] Object_Id        Village_Code     Village          Code            \n [5] Province         City             District         Sub_District    \n [9] Total_Population geometry        \n<0 rows> (or 0-length row.names)\n\n\n\nvaccination_jakarta[rowSums(is.na(vaccination_jakarta))!=0,]\n\n[1] Date               Sub_District_Code  Sub_District       Target            \n[5] Not_Yet_Vaccinated\n<0 rows> (or 0-length row.names)"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#checking-for-mismatched-data",
    "href": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#checking-for-mismatched-data",
    "title": "Take-Home Exercise 2: Spatio-temporal Analysis of COVID-19 Vaccination Trends at the Sub-district Level, DKI Jakarta",
    "section": "3.4 Checking for Mismatched Data",
    "text": "3.4 Checking for Mismatched Data\n\njakarta_sd <- c(jar_main$Sub_District)\nvaccination_sd <- c(vaccination_jakarta$Sub_District)\n\n\n3.4.1 Checks for Unique Sub-District in Geospatial Data\n\nunique(jakarta_sd[!(jakarta_sd %in% vaccination_sd)])\n\n[1] \"KRENDANG\"             \"RAWAJATI\"             \"TENGAH\"              \n[4] \"BALEKAMBANG\"          \"PINANGRANTI\"          \"JATIPULO\"            \n[7] \"PALMERIAM\"            \"KRAMATJATI\"           \"HALIM PERDANA KUSUMA\"\n\n\n\n\n3.4.2 Checks for Unique Sub-District in Aspatial Data\n\nunique(vaccination_sd[!(vaccination_sd %in% jakarta_sd)])\n\n [1] \"BALE KAMBANG\"          \"HALIM PERDANA KUSUMAH\" \"JATI PULO\"            \n [4] \"KAMPUNG TENGAH\"        \"KERENDANG\"             \"KRAMAT JATI\"          \n [7] \"PAL MERIAM\"            \"PINANG RANTI\"          \"PULAU HARAPAN\"        \n[10] \"PULAU KELAPA\"          \"PULAU PANGGANG\"        \"PULAU PARI\"           \n[13] \"PULAU TIDUNG\"          \"PULAU UNTUNG JAWA\"     \"RAWA JATI\"            \n\n\n\n\n3.4.3 Renaming Geospatial Sub-District to Match Aspatial Sub-District\n\njar_main$Sub_District[jar_main$Sub_District == 'BALEKAMBANG'] <- 'BALE KAMBANG'\njar_main$Sub_District[jar_main$Sub_District == 'HALIM PERDANA KUSUMA'] <- 'HALIM PERDANA KUSUMAH'\njar_main$Sub_District[jar_main$Sub_District == 'JATIPULO'] <- 'JATI PULO'\njar_main$Sub_District[jar_main$Sub_District == 'KALI BARU'] <- 'KALIBARU'\njar_main$Sub_District[jar_main$Sub_District == 'TENGAH'] <- 'KAMPUNG TENGAH'\njar_main$Sub_District[jar_main$Sub_District == 'KRAMATJATI'] <- 'KRAMAT JATI'\njar_main$Sub_District[jar_main$Sub_District == 'KRENDANG'] <- 'KERENDANG'\njar_main$Sub_District[jar_main$Sub_District == 'PALMERIAM'] <- 'PAL MERIAM'\njar_main$Sub_District[jar_main$Sub_District == 'PINANGRANTI'] <- 'PINANG RANTI'\njar_main$Sub_District[jar_main$Sub_District == 'RAWAJATI'] <- 'RAWA JATI'\n\n\n\n3.4.4 Removing Additional Sub-District from Aspatial Data\nNoticed that there are additional Sub-District in Aspatial Data which does not match the Geospatial Data.\n\nvaccination_jakarta <- vaccination_jakarta[!(vaccination_jakarta$Sub_District==\"PULAU HARAPAN\" | vaccination_jakarta$Sub_District==\"PULAU KELAPA\" | vaccination_jakarta$Sub_District==\"PULAU PANGGANG\" | vaccination_jakarta$Sub_District==\"PULAU PARI\" | vaccination_jakarta$Sub_District==\"PULAU TIDUNG\" | vaccination_jakarta$Sub_District==\"PULAU UNTUNG JAWA\"), ]"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#rejoining-of-geospatial-aspatial-data",
    "href": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#rejoining-of-geospatial-aspatial-data",
    "title": "Take-Home Exercise 2: Spatio-temporal Analysis of COVID-19 Vaccination Trends at the Sub-district Level, DKI Jakarta",
    "section": "3.5 Rejoining of Geospatial & Aspatial Data",
    "text": "3.5 Rejoining of Geospatial & Aspatial Data\n\ncombined_jakarta <- left_join(jar_main, vaccination_jakarta,\n                              by=c(\n                                \"Village_Code\"=\"Sub_District_Code\", \n                                \"Sub_District\"=\"Sub_District\")\n                              )"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#combined-jakarta-visualisation-1",
    "href": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#combined-jakarta-visualisation-1",
    "title": "Take-Home Exercise 2: Spatio-temporal Analysis of COVID-19 Vaccination Trends at the Sub-district Level, DKI Jakarta",
    "section": "3.6 Combined Jakarta Visualisation",
    "text": "3.6 Combined Jakarta Visualisation\n\ntotal_population = tm_shape(combined_jakarta)+\n  tm_fill(\"Total_Population\") +\n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title=\"Total Population Count\")\n\ntarget = tm_shape(combined_jakarta)+\n  tm_fill(\"Target\") +\n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title=\"Target Count\")\n\nnot_yet_vaccinated = tm_shape(combined_jakarta)+\n  tm_fill(\"Not_Yet_Vaccinated\") +\n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title=\"Not Yet Vaccinated Count\")\n\ntmap_arrange(total_population, target, not_yet_vaccinated)"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#vaccination-calculation-rate",
    "href": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#vaccination-calculation-rate",
    "title": "Take-Home Exercise 2: Spatio-temporal Analysis of COVID-19 Vaccination Trends at the Sub-district Level, DKI Jakarta",
    "section": "4.1 Vaccination Calculation Rate",
    "text": "4.1 Vaccination Calculation Rate\n\n# grouping based on the sub-district and date\nvaccination_rate <- vaccination_jakarta %>%\n  inner_join(jar_main, by=c(\"Sub_District\" = \"Sub_District\")) %>%\n  group_by(Sub_District, Date) %>%\n  dplyr::summarise(`vaccination_rate` = ((Target-Not_Yet_Vaccinated)/Target)*100) %>%\n  \n  #afterwards, pivots the table based on the Dates, using the cumulative case rate as the values\n  ungroup() %>% pivot_wider(names_from = Date,\n              values_from = vaccination_rate)\n\n\nvaccination_rate\n\n# A tibble: 261 x 13\n   Sub_District  2021-~1 2021-~2 2021-~3 2021-~4 2021-~5 2021-~6 2022-~7 2022-~8\n   <chr>           <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>\n 1 ANCOL            48.5    61.6    72.1    75.0    76.9    78.9    80.6    80.8\n 2 ANGKE            52.8    64.6    74.2    77.7    79.6    80.9    81.7    81.9\n 3 BALE KAMBANG     37.0    57.0    70.0    73.9    76.6    78.2    79.5    79.7\n 4 BALI MESTER      47.0    62.0    74.2    78.2    80.3    81.7    82.8    83.1\n 5 BAMBU APUS       47.6    64.2    76.2    80.9    82.5    83.4    84.5    84.7\n 6 BANGKA           51.6    61.3    73.2    78.0    79.8    80.7    81.5    81.7\n 7 BARU             57.9    67.6    79.5    82.9    84.2    85.0    85.8    86.0\n 8 BATU AMPAR       39.8    58.4    70.6    74.5    77.1    78.8    80.1    80.4\n 9 BENDUNGAN HI~    53.6    62.6    75.6    79.1    80.5    81.4    82.3    82.5\n10 BIDARA CINA      40.6    57.6    71.0    75.2    77.0    78.2    79.2    79.5\n# ... with 251 more rows, 4 more variables: `2022-03-31` <dbl>,\n#   `2022-04-30` <dbl>, `2022-05-31` <dbl>, `2022-06-30` <dbl>, and abbreviated\n#   variable names 1: `2021-07-31`, 2: `2021-08-31`, 3: `2021-09-30`,\n#   4: `2021-10-31`, 5: `2021-11-30`, 6: `2021-12-31`, 7: `2022-01-31`,\n#   8: `2022-02-27`"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#converting-dataframes-to-sf-objects",
    "href": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#converting-dataframes-to-sf-objects",
    "title": "Take-Home Exercise 2: Spatio-temporal Analysis of COVID-19 Vaccination Trends at the Sub-district Level, DKI Jakarta",
    "section": "4.2 Converting Dataframes to sf Objects",
    "text": "4.2 Converting Dataframes to sf Objects\n\ncombined_jakarta <- st_as_sf(combined_jakarta)\n\nvaccination_rate <- vaccination_rate%>% left_join(jar_main, by=c(\"Sub_District\"=\"Sub_District\"))\nvaccination_rate <- st_as_sf(vaccination_rate)"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#jenks-choropleth-function",
    "href": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#jenks-choropleth-function",
    "title": "Take-Home Exercise 2: Spatio-temporal Analysis of COVID-19 Vaccination Trends at the Sub-district Level, DKI Jakarta",
    "section": "5.1 Jenks Choropleth Function",
    "text": "5.1 Jenks Choropleth Function\n\njenks_plot <- function(df, date) {\n  tm_shape(vaccination_rate) +\n    tm_polygons() +\n  tm_shape(df) +\n    tm_fill(date, \n          n= 6,\n          style = \"jenks\",\n          palette = \"Blues\",\n          title = \"Vaccination Rate\") +\n    tm_layout(main.title = date) +\n    tm_borders(alpha = 0.5)\n}"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#plotting-of-jenks-choropleth-per-month",
    "href": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#plotting-of-jenks-choropleth-per-month",
    "title": "Take-Home Exercise 2: Spatio-temporal Analysis of COVID-19 Vaccination Trends at the Sub-district Level, DKI Jakarta",
    "section": "5.2 Plotting of Jenks Choropleth Per Month",
    "text": "5.2 Plotting of Jenks Choropleth Per Month\n\ntmap_mode(\"plot\")\ntmap_arrange(jenks_plot(vaccination_rate, \"2021-07-31\"),\n             jenks_plot(vaccination_rate, \"2021-08-31\")\n)\n\n\n\n\n\ntmap_mode(\"plot\")\ntmap_arrange(jenks_plot(vaccination_rate, \"2021-09-30\"),\n             jenks_plot(vaccination_rate, \"2021-10-31\")\n)\n\n\n\n\n\ntmap_mode(\"plot\")\ntmap_arrange(jenks_plot(vaccination_rate, \"2021-09-30\"),\n             jenks_plot(vaccination_rate, \"2021-10-31\")\n)\n\n\n\n\n\ntmap_mode(\"plot\")\ntmap_arrange(jenks_plot(vaccination_rate, \"2021-11-30\"),\n             jenks_plot(vaccination_rate, \"2021-12-31\")\n)\n\n\n\n\n\ntmap_mode(\"plot\")\ntmap_arrange(jenks_plot(vaccination_rate, \"2022-01-31\"),\n             jenks_plot(vaccination_rate, \"2022-02-27\")\n)\n\n\n\n\n\ntmap_mode(\"plot\")\ntmap_arrange(jenks_plot(vaccination_rate, \"2022-03-31\"),\n             jenks_plot(vaccination_rate, \"2022-04-30\")\n)\n\n\n\n\n\ntmap_mode(\"plot\")\ntmap_arrange(jenks_plot(vaccination_rate, \"2022-05-31\"),\n             jenks_plot(vaccination_rate, \"2022-06-30\")\n)"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#plotting-choropleth-map-with-custom-break",
    "href": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#plotting-choropleth-map-with-custom-break",
    "title": "Take-Home Exercise 2: Spatio-temporal Analysis of COVID-19 Vaccination Trends at the Sub-district Level, DKI Jakarta",
    "section": "5.3 Plotting Choropleth Map with Custom Break",
    "text": "5.3 Plotting Choropleth Map with Custom Break\n\n5.3.1 Determine Breakpoints\n\nsummary(vaccination_rate)\n\n Sub_District         2021-07-31      2021-08-31      2021-09-30   \n Length:261         Min.   :37.01   Min.   :54.56   Min.   :66.97  \n Class :character   1st Qu.:47.59   1st Qu.:61.94   1st Qu.:73.74  \n Mode  :character   Median :51.34   Median :63.50   Median :75.46  \n                    Mean   :51.07   Mean   :63.64   Mean   :75.34  \n                    3rd Qu.:54.19   3rd Qu.:65.40   3rd Qu.:76.88  \n                    Max.   :65.20   Max.   :72.99   Max.   :83.70  \n   2021-10-31      2021-11-30      2021-12-31      2022-01-31   \n Min.   :71.76   Min.   :73.85   Min.   :75.65   Min.   :76.80  \n 1st Qu.:77.98   1st Qu.:79.80   1st Qu.:80.97   1st Qu.:81.90  \n Median :79.37   Median :81.14   Median :82.08   Median :82.96  \n Mean   :79.25   Mean   :80.94   Mean   :82.01   Mean   :82.94  \n 3rd Qu.:80.77   3rd Qu.:82.32   3rd Qu.:83.20   3rd Qu.:83.94  \n Max.   :86.60   Max.   :87.50   Max.   :88.34   Max.   :89.03  \n   2022-02-27      2022-03-31      2022-04-30      2022-05-31   \n Min.   :77.23   Min.   :77.66   Min.   :78.01   Min.   :78.13  \n 1st Qu.:82.18   1st Qu.:82.60   1st Qu.:82.95   1st Qu.:83.03  \n Median :83.17   Median :83.54   Median :83.80   Median :83.85  \n Mean   :83.16   Mean   :83.53   Mean   :83.84   Mean   :83.93  \n 3rd Qu.:84.15   3rd Qu.:84.53   3rd Qu.:84.89   3rd Qu.:84.95  \n Max.   :89.19   Max.   :89.46   Max.   :89.69   Max.   :89.76  \n   2022-06-30      Object_Id     Village_Code         Village         \n Min.   :78.31   Min.   :25384   Length:261         Length:261        \n 1st Qu.:83.18   1st Qu.:25449   Class :character   Class :character  \n Median :84.03   Median :25514   Mode  :character   Mode  :character  \n Mean   :84.08   Mean   :25514                                        \n 3rd Qu.:85.05   3rd Qu.:25579                                        \n Max.   :89.78   Max.   :25644                                        \n      Code          Province             City             District        \n Min.   :317101   Length:261         Length:261         Length:261        \n 1st Qu.:317204   Class :character   Class :character   Class :character  \n Median :317308   Mode  :character   Mode  :character   Mode  :character  \n Mean   :317334                                                           \n 3rd Qu.:317410                                                           \n Max.   :317510                                                           \n Total_Population          geometry  \n Min.   :  3088   MULTIPOLYGON :261  \n 1st Qu.: 26177   epsg:23845   :  0  \n Median : 38845   +proj=tmer...:  0  \n Mean   : 42082                      \n 3rd Qu.: 52424                      \n Max.   :167523                      \n\n\n\n# based on the above results, the breakpoints are as such\nbreakpoints = c(37, 55, 75, 80, 85, 90)\n\n\n\n5.3.2 Breakpoint Function\n\nbreak_plot <- function(df, date) {\n  tm_shape(vaccination_rate) +\n    tm_polygons() +\n  tm_shape(df) +\n    tm_fill(date, \n          breaks= breakpoints,\n          palette = \"Blues\",\n          title = \"Vaccination Rate\") +\n    tm_layout(main.title = date) +\n    tm_borders(alpha = 0.5)\n}\n\n\n\n5.3.3 Plotting of Breakpoints\n\ntmap_mode(\"plot\")\ntmap_arrange(break_plot(vaccination_rate, \"2021-07-31\"),\n             break_plot(vaccination_rate, \"2021-08-31\")\n)\n\n\n\n\n\ntmap_mode(\"plot\")\ntmap_arrange(break_plot(vaccination_rate, \"2021-09-30\"),\n             break_plot(vaccination_rate, \"2021-10-31\")\n)\n\n\n\n\n\ntmap_mode(\"plot\")\ntmap_arrange(break_plot(vaccination_rate, \"2021-11-30\"),\n             break_plot(vaccination_rate, \"2021-12-31\")\n)\n\n\n\n\n\ntmap_mode(\"plot\")\ntmap_arrange(break_plot(vaccination_rate, \"2022-01-31\"),\n             break_plot(vaccination_rate, \"2022-02-27\")\n)\n\n\n\n\n\ntmap_mode(\"plot\")\ntmap_arrange(break_plot(vaccination_rate, \"2022-03-31\"),\n             break_plot(vaccination_rate, \"2022-04-30\")\n)\n\n\n\n\n\ntmap_mode(\"plot\")\ntmap_arrange(break_plot(vaccination_rate, \"2022-05-31\"),\n             break_plot(vaccination_rate, \"2022-06-30\")\n)\n\n\n\n\n\n\n\n\n\n\nObservations from Breakpoints\n\n\n\nAs observed, in July 2021, there’s a higher vaccination rate in the Northern and Central part of Jakarta given the darker shade.\n\nIn August 2021, the entire Jakarta seems to be on the same rate of vaccination based on the shade of blue which shows improvement as compared to the previous month.\n\nFrom September 2021 to December 2021, there is an increase in the overall vacination rate, but there is more when it comes to the Southern side of Jakarta. Overall, there’s a uniform distribution.\nFrom January 2022 onwards, there is a clear indication that some sub-districts have a higher rate of vaccination. Based on the Jenks Choropleth, it is clear that the Southern and Eastern districts have a higher vaccination rate as compared to the Northern, Central and Western."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#computing-local-gi-for-monthly-vaccination-rate",
    "href": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#computing-local-gi-for-monthly-vaccination-rate",
    "title": "Take-Home Exercise 2: Spatio-temporal Analysis of COVID-19 Vaccination Trends at the Sub-district Level, DKI Jakarta",
    "section": "6.1 Computing Local Gi* for Monthly Vaccination Rate",
    "text": "6.1 Computing Local Gi* for Monthly Vaccination Rate\n\n6.1.1 Creating an Attribute Table\n\nvacc_table <- combined_jakarta %>%\n  select(10, 8, 11, 12) %>%\n  st_drop_geometry()\n\nvacc_table$Vaccination_Rate <- ((vacc_table$Target - vacc_table$Not_Yet_Vaccinated) / vacc_table$Target) * 100\n\nvacc_table <- tibble(vacc_table %>%\n                       select(1, 2, 5))\n\n\nvacc_table\n\n# A tibble: 3,132 x 3\n   Date       Sub_District Vaccination_Rate\n   <date>     <chr>                   <dbl>\n 1 2022-02-27 KEAGUNGAN                84.2\n 2 2022-04-30 KEAGUNGAN                85.1\n 3 2022-06-30 KEAGUNGAN                85.3\n 4 2021-11-30 KEAGUNGAN                82.2\n 5 2021-09-30 KEAGUNGAN                75.8\n 6 2021-08-31 KEAGUNGAN                65.2\n 7 2021-12-31 KEAGUNGAN                83.2\n 8 2022-01-31 KEAGUNGAN                84.0\n 9 2021-07-31 KEAGUNGAN                53.3\n10 2022-03-31 KEAGUNGAN                84.6\n# ... with 3,122 more rows\n\n\n\n\n6.1.2 Creating a Time Series Cube\n\nvacc_rate_st <- spacetime(vacc_table, jar_main,\n                          .loc_col = \"Sub_District\",\n                          .time_col = \"Date\")\n\n\n\n6.1.3 Deriving the Spatial Weights\n\nvacc_rate_nb <- vacc_rate_st %>%\n  activate(\"geometry\") %>%\n  mutate(nb = include_self(st_contiguity(geometry)),\n         wt = st_inverse_distance(nb, geometry, scale = 1, alpha = 1),\n         .before = 1) %>%\n  set_nbs(\"nb\") %>%\n  set_wts(\"wt\")\n\n\n\n6.1.4 Setting Seed\n\nset.seed(1234)\n\n\n\n6.1.5 Computing Gi* Value\n\ngi_value <- vacc_rate_nb %>%\n  group_by(Date) %>%\n  mutate(gi_value = local_gstar_perm(\n    Vaccination_Rate, nb, wt, nsim = 99)) %>%\n    tidyr::unnest(gi_value)\n\n\ngi_value\n\n# A tibble: 3,132 x 13\n# Groups:   Date [12]\n   Date       Sub_District Vacci~1 nb    wt    gi_star    e_gi   var_gi  p_value\n   <date>     <chr>          <dbl> <lis> <lis>   <dbl>   <dbl>    <dbl>    <dbl>\n 1 2021-07-31 KEAGUNGAN       53.3 <int> <dbl>   -5.13 3.17e-4 2.95e-10 2.83e- 7\n 2 2021-07-31 GLODOK          61.6 <int> <dbl>   -4.91 3.18e-4 2.81e-10 9.04e- 7\n 3 2021-07-31 HARAPAN MUL~    49.7 <int> <dbl>   -6.54 3.19e-4 2.69e-10 6.18e-11\n 4 2021-07-31 CEMPAKA BARU    46.7 <int> <dbl>   -7.88 3.21e-4 2.25e-10 3.23e-15\n 5 2021-07-31 PASAR BARU      59.3 <int> <dbl>   -6.98 3.20e-4 1.78e-10 3.04e-12\n 6 2021-07-31 KARANG ANYAR    52.2 <int> <dbl>   -7.22 3.20e-4 1.82e-10 5.30e-13\n 7 2021-07-31 MANGGA DUA ~    51.6 <int> <dbl>   -8.12 3.20e-4 1.50e-10 4.83e-16\n 8 2021-07-31 PETOJO UTARA    47.2 <int> <dbl>   -6.69 3.19e-4 2.77e-10 2.22e-11\n 9 2021-07-31 SENEN           54.4 <int> <dbl>   -7.75 3.19e-4 1.69e-10 9.44e-15\n10 2021-07-31 BUNGUR          52.8 <int> <dbl>   -7.79 3.20e-4 1.80e-10 6.86e-15\n# ... with 3,122 more rows, 4 more variables: p_sim <dbl>, p_folded_sim <dbl>,\n#   skewness <dbl>, kurtosis <dbl>, and abbreviated variable name\n#   1: Vaccination_Rate"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#joining-gi-value-to-combined_jakarta",
    "href": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#joining-gi-value-to-combined_jakarta",
    "title": "Take-Home Exercise 2: Spatio-temporal Analysis of COVID-19 Vaccination Trends at the Sub-district Level, DKI Jakarta",
    "section": "6.2 Joining Gi* Value to Combined_Jakarta",
    "text": "6.2 Joining Gi* Value to Combined_Jakarta\n\njakarta_gi <- combined_jakarta %>%\n  left_join(gi_value)\n\n\njakarta_gi\n\nSimple feature collection with 3132 features and 23 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: -3644407 ymin: 663658 xmax: -3606364 ymax: 701158.1\nProjected CRS: DGN95 / Indonesia TM-3 zone 54.1\nFirst 10 features:\n   Object_Id Village_Code   Village   Code    Province          City   District\n1      25477   3173031006 KEAGUNGAN 317303 DKI JAKARTA JAKARTA BARAT TAMAN SARI\n2      25477   3173031006 KEAGUNGAN 317303 DKI JAKARTA JAKARTA BARAT TAMAN SARI\n3      25477   3173031006 KEAGUNGAN 317303 DKI JAKARTA JAKARTA BARAT TAMAN SARI\n4      25477   3173031006 KEAGUNGAN 317303 DKI JAKARTA JAKARTA BARAT TAMAN SARI\n5      25477   3173031006 KEAGUNGAN 317303 DKI JAKARTA JAKARTA BARAT TAMAN SARI\n6      25477   3173031006 KEAGUNGAN 317303 DKI JAKARTA JAKARTA BARAT TAMAN SARI\n7      25477   3173031006 KEAGUNGAN 317303 DKI JAKARTA JAKARTA BARAT TAMAN SARI\n8      25477   3173031006 KEAGUNGAN 317303 DKI JAKARTA JAKARTA BARAT TAMAN SARI\n9      25477   3173031006 KEAGUNGAN 317303 DKI JAKARTA JAKARTA BARAT TAMAN SARI\n10     25477   3173031006 KEAGUNGAN 317303 DKI JAKARTA JAKARTA BARAT TAMAN SARI\n   Sub_District Total_Population       Date Target Not_Yet_Vaccinated\n1     KEAGUNGAN            21609 2022-02-27  17387               2755\n2     KEAGUNGAN            21609 2022-04-30  17387               2593\n3     KEAGUNGAN            21609 2022-06-30  17387               2553\n4     KEAGUNGAN            21609 2021-11-30  17387               3099\n5     KEAGUNGAN            21609 2021-09-30  17387               4203\n6     KEAGUNGAN            21609 2021-08-31  17387               6054\n7     KEAGUNGAN            21609 2021-12-31  17387               2924\n8     KEAGUNGAN            21609 2022-01-31  17387               2783\n9     KEAGUNGAN            21609 2021-07-31  17387               8126\n10    KEAGUNGAN            21609 2022-03-31  17387               2675\n   Vaccination_Rate                      nb\n1          84.15483 1, 2, 39, 152, 158, 166\n2          85.08656 1, 2, 39, 152, 158, 166\n3          85.31662 1, 2, 39, 152, 158, 166\n4          82.17634 1, 2, 39, 152, 158, 166\n5          75.82677 1, 2, 39, 152, 158, 166\n6          65.18088 1, 2, 39, 152, 158, 166\n7          83.18284 1, 2, 39, 152, 158, 166\n8          83.99379 1, 2, 39, 152, 158, 166\n9          53.26393 1, 2, 39, 152, 158, 166\n10         84.61494 1, 2, 39, 152, 158, 166\n                                                                             wt\n1  0.000000000, 0.001071741, 0.001039078, 0.001417547, 0.001110431, 0.001297072\n2  0.000000000, 0.001071741, 0.001039078, 0.001417547, 0.001110431, 0.001297072\n3  0.000000000, 0.001071741, 0.001039078, 0.001417547, 0.001110431, 0.001297072\n4  0.000000000, 0.001071741, 0.001039078, 0.001417547, 0.001110431, 0.001297072\n5  0.000000000, 0.001071741, 0.001039078, 0.001417547, 0.001110431, 0.001297072\n6  0.000000000, 0.001071741, 0.001039078, 0.001417547, 0.001110431, 0.001297072\n7  0.000000000, 0.001071741, 0.001039078, 0.001417547, 0.001110431, 0.001297072\n8  0.000000000, 0.001071741, 0.001039078, 0.001417547, 0.001110431, 0.001297072\n9  0.000000000, 0.001071741, 0.001039078, 0.001417547, 0.001110431, 0.001297072\n10 0.000000000, 0.001071741, 0.001039078, 0.001417547, 0.001110431, 0.001297072\n     gi_star         e_gi       var_gi      p_value p_sim p_folded_sim\n1  -4.148510 0.0003184021 2.953413e-10 3.346461e-05  0.02         0.01\n2  -4.730787 0.0003186086 2.249538e-10 2.236511e-06  0.02         0.01\n3  -5.112686 0.0003204174 2.017972e-10 3.176099e-07  0.02         0.01\n4  -4.660924 0.0003188878 2.448973e-10 3.147932e-06  0.02         0.01\n5  -5.791609 0.0003181470 1.718401e-10 6.971549e-09  0.02         0.01\n6  -4.940322 0.0003191377 2.832933e-10 7.799349e-07  0.02         0.01\n7  -4.270179 0.0003169345 2.717739e-10 1.953157e-05  0.02         0.01\n8  -5.200118 0.0003188126 1.906391e-10 1.991626e-07  0.02         0.01\n9  -5.134422 0.0003172134 2.951801e-10 2.830127e-07  0.02         0.01\n10 -5.684511 0.0003221341 1.729464e-10 1.311876e-08  0.02         0.01\n     skewness   kurtosis                       geometry\n1  -0.7361674 -0.1454841 MULTIPOLYGON (((-3627004 69...\n2  -0.3317697 -0.5930501 MULTIPOLYGON (((-3627004 69...\n3  -0.2461323 -0.8701698 MULTIPOLYGON (((-3627004 69...\n4  -0.9926916  1.5306415 MULTIPOLYGON (((-3627004 69...\n5  -0.1422052 -0.5629658 MULTIPOLYGON (((-3627004 69...\n6  -0.6632312 -0.4379797 MULTIPOLYGON (((-3627004 69...\n7  -0.7170277  0.2119119 MULTIPOLYGON (((-3627004 69...\n8  -0.2851140 -0.5277670 MULTIPOLYGON (((-3627004 69...\n9  -0.7029525 -0.1907527 MULTIPOLYGON (((-3627004 69...\n10 -0.6200221  0.4378114 MULTIPOLYGON (((-3627004 69..."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#visualising-gi-value-vaccination-rate",
    "href": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#visualising-gi-value-vaccination-rate",
    "title": "Take-Home Exercise 2: Spatio-temporal Analysis of COVID-19 Vaccination Trends at the Sub-district Level, DKI Jakarta",
    "section": "6.3 Visualising Gi* Value Vaccination Rate",
    "text": "6.3 Visualising Gi* Value Vaccination Rate\n\n6.3.1 Function to Plot Gi* Value Map\n\ngi_plot <- function(date, month) {\n  \n  map1 = tm_shape(filter(jakarta_gi, Date == date)) +\n    tm_fill(\"gi_star\") +\n    tm_borders(alpha = 0.5) +\n    tm_view(set.zoom.limits = c(6, 8)) +\n    tm_layout(main.title = paste(\"Gi* of Vaccination Rate\", month), main.title.size = 0.8)\n  \n  map2 = tm_shape(filter(jakarta_gi, Date == date)) +\n    tm_fill(\"p_sim\", breaks = c(0, 0.001, 0.01, 0.05, 1)) +\n    tm_borders(alpha = 0.5) +\n    tm_layout(main.title = paste(\"p-value of Vaccination Rate\", month), main.title.size = 0.8)\n  \n  tmap_arrange(map1, map2)\n}\n\n\n\n6.3.2 Plotting of Gi* Value Map\n\ntmap_mode(\"plot\")\ngi_plot(\"2021-07-31\", \"July 2021\")\n\n\n\n\n\ntmap_mode(\"plot\")\ngi_plot(\"2021-08-31\", \"August 2021\")\n\n\n\n\n\ntmap_mode(\"plot\")\ngi_plot(\"2021-09-30\", \"September 2021\")\n\n\n\n\n\ntmap_mode(\"plot\")\ngi_plot(\"2021-10-31\", \"October 2021\")\n\n\n\n\n\ntmap_mode(\"plot\")\ngi_plot(\"2021-11-30\", \"November 2021\")\n\n\n\n\n\ntmap_mode(\"plot\")\ngi_plot(\"2021-12-31\", \"December 2021\")\n\n\n\n\n\ntmap_mode(\"plot\")\ngi_plot(\"2022-01-31\", \"January 2022\")\n\n\n\n\n\ntmap_mode(\"plot\")\ngi_plot(\"2022-02-27\", \"Feburary 2022\")\n\n\n\n\n\ntmap_mode(\"plot\")\ngi_plot(\"2022-03-31\", \"March 2022\")\n\n\n\n\n\ntmap_mode(\"plot\")\ngi_plot(\"2022-04-30\", \"April 2022\")\n\n\n\n\n\ntmap_mode(\"plot\")\ngi_plot(\"2022-05-31\", \"May 2022\")\n\n\n\n\n\ntmap_mode(\"plot\")\ngi_plot(\"2022-06-30\", \"June 2022\")"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#visualising-hot-spot-and-cold-spot-areas",
    "href": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#visualising-hot-spot-and-cold-spot-areas",
    "title": "Take-Home Exercise 2: Spatio-temporal Analysis of COVID-19 Vaccination Trends at the Sub-district Level, DKI Jakarta",
    "section": "6.4 Visualising Hot Spot and Cold Spot Areas",
    "text": "6.4 Visualising Hot Spot and Cold Spot Areas\n\njakarta_sig <- jakarta_gi %>%\n  filter(p_sim < 0.05)\ntmap_mode(\"plot\")\ntm_shape(jakarta_gi) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\ntm_shape(jakarta_sig) +\n  tm_fill(\"gi_star\") +\n  tm_borders(alpha = 0.4)\n\n\n\n\n\n\n\n\n\n\nObservations from Gi* Value\n\n\n\nBased on the figure above, it shows that there are multiple hot spot areas and cold spot areas. The hot spot areas are located mostly in the Northern and Southern parts of Jakarta. The cold spots are located near the Central and at the top right and left corner of Jakarta."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#mann-kendall-test",
    "href": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#mann-kendall-test",
    "title": "Take-Home Exercise 2: Spatio-temporal Analysis of COVID-19 Vaccination Trends at the Sub-district Level, DKI Jakarta",
    "section": "7.1 Mann-Kendall Test",
    "text": "7.1 Mann-Kendall Test\n\n7.1.1 Sub-District 1 - Baru\n\ncbg <- gi_value %>%\n  ungroup() %>%\n  filter(Sub_District == \"BARU\") %>%\n  select(Sub_District, Date, gi_star)\n\n\np <- ggplot(data = cbg,\n       aes(x = Date,\n           y = gi_star)) +\n  geom_line() +\n  theme_light()\nggplotly(p)\n\n\n\n\n\n\ncbg %>%\n  summarise(mk = list(\n    unclass(\n      Kendall::MannKendall(gi_star)))) %>%\n  tidyr::unnest_wider(mk)\n\n# A tibble: 1 x 5\n    tau     sl     S     D  varS\n  <dbl>  <dbl> <dbl> <dbl> <dbl>\n1 0.515 0.0236    34  66.0  213.\n\n\n\n\n\n\n\n\nSub-District - Baru Analysis\n\n\n\nThe p-value is 0.0005 which is <0.05 hence the null hypothesis of no trend is rejected in favour of the alternative hypothesis that there is a trend in the data.\n\n\n\n\n7.1.2 Sub-District 2 - Lagoa\n\ncbg <- gi_value %>%\n  ungroup() %>%\n  filter(Sub_District == \"LAGOA\") %>%\n  select(Sub_District, Date, gi_star)\n\n\np <- ggplot(data = cbg,\n       aes(x = Date,\n           y = gi_star)) +\n  geom_line() +\n  theme_light()\nggplotly(p)\n\n\n\n\n\n\ncbg %>%\n  summarise(mk = list(\n    unclass(\n      Kendall::MannKendall(gi_star)))) %>%\n  tidyr::unnest_wider(mk)\n\n# A tibble: 1 x 5\n    tau     sl     S     D  varS\n  <dbl>  <dbl> <dbl> <dbl> <dbl>\n1 0.394 0.0865    26  66.0  213.\n\n\n\n\n\n\n\n\nSub-District - Lagoa Analysis\n\n\n\nThe p-value is 0.3 which is >0.05 hence there is insufficient evidence to reject the null hypothesis of no trend. However, it does not necessarily mean there isn’t any trend.\n\n\n\n\n7.1.3 Sub-District 3 - Petamburan\n\ncbg <- gi_value %>%\n  ungroup() %>%\n  filter(Sub_District == \"PETAMBURAN\") %>%\n  select(Sub_District, Date, gi_star)\n\n\np <- ggplot(data = cbg,\n       aes(x = Date,\n           y = gi_star)) +\n  geom_line() +\n  theme_light()\nggplotly(p)\n\n\n\n\n\n\ncbg %>%\n  summarise(mk = list(\n    unclass(\n      Kendall::MannKendall(gi_star)))) %>%\n  tidyr::unnest_wider(mk)\n\n# A tibble: 1 x 5\n    tau    sl     S     D  varS\n  <dbl> <dbl> <dbl> <dbl> <dbl>\n1 0.121 0.631     8  66.0  213.\n\n\n\n\n\n\n\n\nSub-District - Petamburan Analysis\n\n\n\nThe p-value is 0.6 which is >0.05 hence there is insufficient evidence to reject the null hypothesis of no trend. However, it does not necessarily mean there isn’t any trend."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#ehsa-for-all-sub-districts",
    "href": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#ehsa-for-all-sub-districts",
    "title": "Take-Home Exercise 2: Spatio-temporal Analysis of COVID-19 Vaccination Trends at the Sub-district Level, DKI Jakarta",
    "section": "7.2 EHSA for All Sub-Districts",
    "text": "7.2 EHSA for All Sub-Districts\n\n7.2.1 EHSA Using group_by() dplyr Package\n\nehsa <- gi_value %>%\n  group_by(Sub_District) %>%\n  summarise(mk = list(\n    unclass(\n      Kendall::MannKendall(gi_star)))) %>%\n  tidyr::unnest_wider(mk)\n\n\n\n7.2.2 Arrange to Show Significant Hot & Cold Spots\n\nemerging <- ehsa %>%\n  arrange(sl, abs(tau)) %>%\n  slice(1:5)\n\n\n\n7.2.3 Performing Emerging Hotspot Analysis\n\nehsa <- emerging_hotspot_analysis(\n  x = vacc_rate_st,\n  .var = \"Vaccination_Rate\",\n  k = 1,\n  nsim = 99\n)\n\n\n\n7.2.4 Visualising the Distribution of EHSA Classes\n\nggplot(data = ehsa,\n       aes(x = classification, fill = classification)) +\n  geom_bar()\n\n\n\n\n\n\n7.2.5 Visualising EHSA\n\njakarta_ehsa <- combined_jakarta %>%\n  left_join(ehsa,\n            by = c(\"Sub_District\" = \"location\"))\n\n\nehsa_sig <- jakarta_ehsa %>%\n  filter(p_value < 0.05)\ntmap_mode(\"plot\")\ntm_shape(jakarta_ehsa) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\ntm_shape(ehsa_sig) +\n  tm_fill(\"classification\") +\n  tm_borders(alpha = 0.4)\n\n\n\n\n\n\n\n\n\n\nEHSA Analysis\n\n\n\nBased on the map above, it is clear that there are more locations classified as Oscillating Hotspot which are uniformly spread out throughout the whole of Jakarta.\nFollowed by the Sporadic Coldspot which is mostly located in the Central of Jakarta.\nNext would be the Oscillating Coldspot which are widely spread out, but mainly nearer to the outskirts of Jakarta.\nNext would be the No Pattern Detected which is mostly in the Central Region of Jakarta.\nThe grey spots on the map shows insufficient results, hence it is not classified and are mainly located in the Central Region."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex03/data/geospatial/MPSZ-2019.html",
    "href": "Take-Home_Ex/Take-Home_Ex03/data/geospatial/MPSZ-2019.html",
    "title": "Leon's IS415 (GAA) Journey",
    "section": "",
    "text": "<!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’>     dataset\n\n\n        0 0     false"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html",
    "href": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html",
    "title": "Take-home Exercise 3: Predicting HDB Public Housing Resale Pricies using Geographically Weighted Methods",
    "section": "",
    "text": "Housing is an essential component of household wealth worldwide. Buying a housing has always been a major investment for most people. The price of housing is affected by many factors. Some of them are global in nature such as the general economy of a country or inflation rate. Others can be more specific to the properties themselves. These factors can be further divided to structural and locational factors. Structural factors are variables related to the property themselves such as the size, fitting, and tenure of the property. Locational factors are variables related to the neighbourhood of the properties such as proximity to childcare centre, public transport service and shopping centre.\nConventional, housing resale prices predictive models were built by using Ordinary Least Square (OLS) method. However, this method failed to take into consideration that spatial autocorrelation and spatial heterogeneity exist in geographic data sets such as housing transactions. With the existence of spatial autocorrelation, the OLS estimation of predictive housing resale pricing models could lead to biased, inconsistent, or inefficient results (Anselin 1998). In view of this limitation, Geographical Weighted Models were introduced for calibrating predictive model for housing resale prices.\n\n\n\nIn this take-home exercise, you are tasked to predict HDB resale prices at the sub-market level (i.e. HDB 3-room, HDB 4-room and HDB 5-room) for the month of January and February 2023 in Singapore. The predictive models must be built by using by using conventional OLS method and GWR methods. You are also required to compare the performance of the conventional OLS method versus the geographical weighted methods.\n\n\n\nFor the purpose of this take-home exercise, HDB Resale Flat Prices provided by Data.gov.sg should be used as the core data set. The study should focus on either three-room, four-room or five-room flat and transaction period should be from 1st January 2021 to 31st December 2022. The test data should be January and February 2023 resale prices.\n\n\n\nAspatial Data Set\nSource\n\n\n\n\nHDB Resale Data\nData.gov.sg\n\n\n\n\n\n\nGeospatial Data Set\nSource\n\n\n\n\nMaster Plan 2019 Sub-Zone Boundary\nProf. Kam\n\n\nHawker Centres\nOneMap\n\n\nChildcare Centres\nOneMap\n\n\nKindergartens\nOneMap\n\n\nNParks Parks and Nature Reserves\nOneMap\n\n\nShopping Malls\nWikipedia; GitHub - ValaryLim\n\n\nSupermarket\nData.gov.sg\n\n\nEldercare\nData.gov.sg\n\n\nMRT Stations\nLTA DataMall\n\n\nBus Stops\nLTA DataMall\n\n\n\n\n\n\n\n\n\nName\nSource\n\n\n\n\nProf. Kam\nHands-On Ex 8; In-Class Ex 9\n\n\nMegan Sim\nTake-Home Ex 3\n\n\nNor Aisyah Binte Ajit\nTake-Home Ex 3"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#import-packages",
    "href": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#import-packages",
    "title": "Take-home Exercise 3: Predicting HDB Public Housing Resale Pricies using Geographically Weighted Methods",
    "section": "2.1 Import Packages",
    "text": "2.1 Import Packages\n\npackages <- c('sf', 'tidyverse', 'tmap', 'httr', 'jsonlite', 'rvest', \n              'sp', 'ggpubr', 'corrplot', 'broom',  'olsrr', 'spdep', \n              'GWmodel', 'devtools', 'rgeos', 'lwgeom', 'maptools', 'matrixStats',\n              'units', 'gtsummary', 'Metrics', 'rsample', 'SpatialML')\n\nfor(p in packages){\n  if(!require(p, character.only = T)){\n    install.packages(p, repos = \"http://cran.us.r-project.org\")\n  }\n  library(p, character.only = T)\n}"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#importing-aspatial-data",
    "href": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#importing-aspatial-data",
    "title": "Take-home Exercise 3: Predicting HDB Public Housing Resale Pricies using Geographically Weighted Methods",
    "section": "2.2 Importing Aspatial Data",
    "text": "2.2 Importing Aspatial Data\n\nresale <- read_csv(\"data/aspatial/resale-flat-prices-based-on-registration-date-from-jan-2017-onwards.csv\")\n\n\nhead(resale)\n\n# A tibble: 6 × 11\n  month   town     flat_…¹ block stree…² store…³ floor…⁴ flat_…⁵ lease…⁶ remai…⁷\n  <chr>   <chr>    <chr>   <chr> <chr>   <chr>     <dbl> <chr>     <dbl> <chr>  \n1 2017-01 ANG MO … 2 ROOM  406   ANG MO… 10 TO …      44 Improv…    1979 61 yea…\n2 2017-01 ANG MO … 3 ROOM  108   ANG MO… 01 TO …      67 New Ge…    1978 60 yea…\n3 2017-01 ANG MO … 3 ROOM  602   ANG MO… 01 TO …      67 New Ge…    1980 62 yea…\n4 2017-01 ANG MO … 3 ROOM  465   ANG MO… 04 TO …      68 New Ge…    1980 62 yea…\n5 2017-01 ANG MO … 3 ROOM  601   ANG MO… 01 TO …      67 New Ge…    1980 62 yea…\n6 2017-01 ANG MO … 3 ROOM  150   ANG MO… 01 TO …      68 New Ge…    1981 63 yea…\n# … with 1 more variable: resale_price <dbl>, and abbreviated variable names\n#   ¹​flat_type, ²​street_name, ³​storey_range, ⁴​floor_area_sqm, ⁵​flat_model,\n#   ⁶​lease_commence_date, ⁷​remaining_lease\n\n\n\n2.2.1 Filter Resale Data\nResale Data filter includes both training data and test data set\n\nresale_filter <- filter(resale, flat_type == \"4 ROOM\") %>%\n  filter(month >= \"2021-01\" & month <= \"2023-02\")\n\n\n2.2.1.1 Glimpse Filtered Resale Data\n\nglimpse(resale_filter)\n\nRows: 25,502\nColumns: 11\n$ month               <chr> \"2021-01\", \"2021-01\", \"2021-01\", \"2021-01\", \"2021-…\n$ town                <chr> \"ANG MO KIO\", \"ANG MO KIO\", \"ANG MO KIO\", \"ANG MO …\n$ flat_type           <chr> \"4 ROOM\", \"4 ROOM\", \"4 ROOM\", \"4 ROOM\", \"4 ROOM\", …\n$ block               <chr> \"547\", \"414\", \"509\", \"467\", \"571\", \"134\", \"204\", \"…\n$ street_name         <chr> \"ANG MO KIO AVE 10\", \"ANG MO KIO AVE 10\", \"ANG MO …\n$ storey_range        <chr> \"04 TO 06\", \"01 TO 03\", \"01 TO 03\", \"07 TO 09\", \"0…\n$ floor_area_sqm      <dbl> 92, 92, 91, 92, 92, 98, 92, 92, 92, 92, 92, 109, 9…\n$ flat_model          <chr> \"New Generation\", \"New Generation\", \"New Generatio…\n$ lease_commence_date <dbl> 1981, 1979, 1980, 1979, 1979, 1978, 1977, 1978, 19…\n$ remaining_lease     <chr> \"59 years\", \"57 years 09 months\", \"58 years 06 mon…\n$ resale_price        <dbl> 370000, 375000, 380000, 385000, 410000, 410000, 41…\n\n\n\n\n2.2.1.2 Check for Correct Time Period\n\nunique(resale_filter$month)\n\n [1] \"2021-01\" \"2021-02\" \"2021-03\" \"2021-04\" \"2021-05\" \"2021-06\" \"2021-07\"\n [8] \"2021-08\" \"2021-09\" \"2021-10\" \"2021-11\" \"2021-12\" \"2022-01\" \"2022-02\"\n[15] \"2022-03\" \"2022-04\" \"2022-05\" \"2022-06\" \"2022-07\" \"2022-08\" \"2022-09\"\n[22] \"2022-10\" \"2022-11\" \"2022-12\" \"2023-01\" \"2023-02\"\n\n\n\n\n2.2.1.3 Check for Correct Flat Type\n\nunique(resale_filter$flat_type)\n\n[1] \"4 ROOM\"\n\n\n\n\n\n2.2.2 Transform Resale Data\n\n2.2.2.1 Adding New Columns\n\nresale_transform <- resale_filter %>%\n  mutate(resale_filter, address = paste(block,street_name)) %>%\n  mutate(resale_filter, remaining_lease_yr = as.integer(str_sub(remaining_lease, 0, 2))) %>%\n  mutate(resale_filter, remaining_lease_mth = as.integer(str_sub(remaining_lease, 9, 11)))\n\n\n\n2.2.2.2 Replace NA Values in “remaining_lease_mth”\n\nresale_transform$remaining_lease_mth[is.na(resale_transform$remaining_lease_mth)] <- 0\n\n\n\n2.2.2.3 Convert “remaining_lease_yr” to Months\n\nresale_transform$remaining_lease_yr <- resale_transform$remaining_lease_yr * 12\nresale_transform <- resale_transform %>%\n  mutate(resale_transform, remaining_lease_mths = rowSums(resale_transform[, c(\"remaining_lease_yr\", \"remaining_lease_mth\")])) %>%\n  select(month, town, address, block, street_name, flat_type, storey_range, floor_area_sqm, flat_model, \n         lease_commence_date, remaining_lease_mths, resale_price)\n\n\n\n\n2.2.3 Getting Unique Addresses\n\naddress <- sort(unique(resale_transform$address))\n\n\nhead(address)\n\n[1] \"1 CHAI CHEE RD\"    \"1 PINE CL\"         \"1 ST. GEORGE'S RD\"\n[4] \"1 TECK WHYE AVE\"   \"1 TOH YI DR\"       \"10 CHAI CHEE RD\"  \n\n\n\n\n2.2.4 Getting LAT & LONG from OneMap.sg API\n\nget_coords <- function(add_list){\n  \n  # Create a data frame to store all retrieved coordinates\n  postal_coords <- data.frame()\n    \n  for (i in add_list){\n    #print(i)\n\n    r <- GET('https://developers.onemap.sg/commonapi/search?',\n           query=list(searchVal=i,\n                     returnGeom='Y',\n                     getAddrDetails='Y'))\n    data <- fromJSON(rawToChar(r$content))\n    found <- data$found\n    res <- data$results\n    \n    # Create a new data frame for each address\n    new_row <- data.frame()\n    \n    # If single result, append \n    if (found == 1){\n      postal <- res$POSTAL \n      lat <- res$LATITUDE\n      lng <- res$LONGITUDE\n      new_row <- data.frame(address= i, postal = postal, latitude = lat, longitude = lng)\n    }\n    \n    # If multiple results, drop NIL and append top 1\n    else if (found > 1){\n      # Remove those with NIL as postal\n      res_sub <- res[res$POSTAL != \"NIL\", ]\n      \n      # Set as NA first if no Postal\n      if (nrow(res_sub) == 0) {\n          new_row <- data.frame(address= i, postal = NA, latitude = NA, longitude = NA)\n      }\n      \n      else{\n        top1 <- head(res_sub, n = 1)\n        postal <- top1$POSTAL \n        lat <- top1$LATITUDE\n        lng <- top1$LONGITUDE\n        new_row <- data.frame(address= i, postal = postal, latitude = lat, longitude = lng)\n      }\n    }\n\n    else {\n      new_row <- data.frame(address= i, postal = NA, latitude = NA, longitude = NA)\n    }\n    \n    # Add the row\n    postal_coords <- rbind(postal_coords, new_row)\n  }\n  return(postal_coords)\n}\n\n\n2.2.4.1 Calling Function\n\nlatlong <- get_coords(address)\n\n\n\n2.2.4.2 Check for Missing Value\n\nlatlong[(is.na(latlong))]\n\ncharacter(0)\n\n\n\n\n\n2.2.5 Combine Resale and LAT & LONG\n\nresale_latlong <- left_join(resale_transform, latlong, by = c('address' = 'address'))\n\n\nhead(resale_latlong)\n\n# A tibble: 6 × 15\n  month   town     address block stree…¹ flat_…² store…³ floor…⁴ flat_…⁵ lease…⁶\n  <chr>   <chr>    <chr>   <chr> <chr>   <chr>   <chr>     <dbl> <chr>     <dbl>\n1 2021-01 ANG MO … 547 AN… 547   ANG MO… 4 ROOM  04 TO …      92 New Ge…    1981\n2 2021-01 ANG MO … 414 AN… 414   ANG MO… 4 ROOM  01 TO …      92 New Ge…    1979\n3 2021-01 ANG MO … 509 AN… 509   ANG MO… 4 ROOM  01 TO …      91 New Ge…    1980\n4 2021-01 ANG MO … 467 AN… 467   ANG MO… 4 ROOM  07 TO …      92 New Ge…    1979\n5 2021-01 ANG MO … 571 AN… 571   ANG MO… 4 ROOM  07 TO …      92 New Ge…    1979\n6 2021-01 ANG MO … 134 AN… 134   ANG MO… 4 ROOM  07 TO …      98 New Ge…    1978\n# … with 5 more variables: remaining_lease_mths <dbl>, resale_price <dbl>,\n#   postal <chr>, latitude <chr>, longitude <chr>, and abbreviated variable\n#   names ¹​street_name, ²​flat_type, ³​storey_range, ⁴​floor_area_sqm,\n#   ⁵​flat_model, ⁶​lease_commence_date\n\n\n\n\n2.2.6 Check for NA\n\nresale_latlong[(is.na(resale_latlong))]\n\n<unspecified> [0]\n\n\n\n\n2.2.7 Write File to rds\n\nresale_latlong.rds <- write_rds(resale_latlong, \"data/model/resale_latlong.rds\")\n\n\n\n2.2.8 Read resale_rds File\n\nresale_main <- read_rds(\"data/model/resale_latlong.rds\")\n\n\nhead(resale_main)\n\n# A tibble: 6 × 15\n  month   town     address block stree…¹ flat_…² store…³ floor…⁴ flat_…⁵ lease…⁶\n  <chr>   <chr>    <chr>   <chr> <chr>   <chr>   <chr>     <dbl> <chr>     <dbl>\n1 2021-01 ANG MO … 547 AN… 547   ANG MO… 4 ROOM  04 TO …      92 New Ge…    1981\n2 2021-01 ANG MO … 414 AN… 414   ANG MO… 4 ROOM  01 TO …      92 New Ge…    1979\n3 2021-01 ANG MO … 509 AN… 509   ANG MO… 4 ROOM  01 TO …      91 New Ge…    1980\n4 2021-01 ANG MO … 467 AN… 467   ANG MO… 4 ROOM  07 TO …      92 New Ge…    1979\n5 2021-01 ANG MO … 571 AN… 571   ANG MO… 4 ROOM  07 TO …      92 New Ge…    1979\n6 2021-01 ANG MO … 134 AN… 134   ANG MO… 4 ROOM  07 TO …      98 New Ge…    1978\n# … with 5 more variables: remaining_lease_mths <dbl>, resale_price <dbl>,\n#   postal <chr>, latitude <chr>, longitude <chr>, and abbreviated variable\n#   names ¹​street_name, ²​flat_type, ³​storey_range, ⁴​floor_area_sqm,\n#   ⁵​flat_model, ⁶​lease_commence_date\n\n\n\n\n2.2.9 Transform to sf and Assign CRS\n\nresale_main_sf <- st_as_sf(resale_main,\n                    coords = c(\"longitude\", \n                               \"latitude\"),\n                    crs=4326) %>%\n  st_transform(crs = 3414)\n\n\nst_crs(resale_main_sf)\n\nCoordinate Reference System:\n  User input: EPSG:3414 \n  wkt:\nPROJCRS[\"SVY21 / Singapore TM\",\n    BASEGEOGCRS[\"SVY21\",\n        DATUM[\"SVY21\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4757]],\n    CONVERSION[\"Singapore Transverse Mercator\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"northing (N)\",north,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"easting (E)\",east,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Cadastre, engineering survey, topographic mapping.\"],\n        AREA[\"Singapore - onshore and offshore.\"],\n        BBOX[1.13,103.59,1.47,104.07]],\n    ID[\"EPSG\",3414]]\n\n\n\n\n2.2.10 Check for Invalid Geometries\n\nlength(which(st_is_valid(resale_main_sf) == FALSE))\n\n[1] 0"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#importing-geospatial-data",
    "href": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#importing-geospatial-data",
    "title": "Take-home Exercise 3: Predicting HDB Public Housing Resale Pricies using Geographically Weighted Methods",
    "section": "2.3 Importing Geospatial Data",
    "text": "2.3 Importing Geospatial Data\nImporting Master Plan 2019 Subzone\n\nmpsz <- st_read(dsn = \"data/geospatial\", layer = \"MPSZ-2019\")\n\nReading layer `MPSZ-2019' from data source \n  `C:\\Users\\la935\\Desktop\\IS415 - GAA\\IS415 - GAA (New)\\Take-Home_Ex\\Take-Home_Ex03\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 332 features and 6 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 103.6057 ymin: 1.158699 xmax: 104.0885 ymax: 1.470775\nGeodetic CRS:  WGS 84\n\n\nCheck for Invalid Geometry\n\nlength(which(st_is_valid(mpsz) == FALSE))\n\n[1] 6\n\n\nMake Geometry Valid and Check for Invalid Geometry Again\n\nmpsz <- st_make_valid(mpsz)\nlength(which(st_is_valid(mpsz) == FALSE))\n\n[1] 0\n\n\nAssign ESPG Code\n\nmpsz <- st_transform(mpsz, 3414)\nst_crs(mpsz)\n\nCoordinate Reference System:\n  User input: EPSG:3414 \n  wkt:\nPROJCRS[\"SVY21 / Singapore TM\",\n    BASEGEOGCRS[\"SVY21\",\n        DATUM[\"SVY21\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4757]],\n    CONVERSION[\"Singapore Transverse Mercator\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"northing (N)\",north,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"easting (E)\",east,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Cadastre, engineering survey, topographic mapping.\"],\n        AREA[\"Singapore - onshore and offshore.\"],\n        BBOX[1.13,103.59,1.47,104.07]],\n    ID[\"EPSG\",3414]]\n\n\n\n2.3.1 Data With LAT & LONG\n\n2.3.1.1 Elderly Care\n\nelder_sf <- st_read(dsn = \"data/geospatial\", layer = \"ELDERCARE\")\n\nReading layer `ELDERCARE' from data source \n  `C:\\Users\\la935\\Desktop\\IS415 - GAA\\IS415 - GAA (New)\\Take-Home_Ex\\Take-Home_Ex03\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 133 features and 18 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 14481.92 ymin: 28218.43 xmax: 41665.14 ymax: 46804.9\nProjected CRS: SVY21\n\n# Assign EPSG Code\nelder_sf <- st_transform(elder_sf, 3414)\n\n\n\n2.3.1.2 Bus Stops\n\nBusStop_sf <- st_read(dsn = \"data/geospatial\", layer = \"BusStop\")\n\nReading layer `BusStop' from data source \n  `C:\\Users\\la935\\Desktop\\IS415 - GAA\\IS415 - GAA (New)\\Take-Home_Ex\\Take-Home_Ex03\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 5159 features and 3 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 3970.122 ymin: 26482.1 xmax: 48284.56 ymax: 52983.82\nProjected CRS: SVY21\n\n# Assign EPSG Code\nBusStop_sf <- st_transform(BusStop_sf, 3414)\n\n\n\n2.3.1.3 MRT Stations\n\nmrt <- read.csv(\"data/geospatial/mrtsg.csv\")\n\nmrt_sf <- st_as_sf(mrt,\n                   coords = c(\"Longitude\",\n                              \"Latitude\"),\n                              crs = 4326) %>%\n  st_transform(crs = 3414)\n\n\n\n2.3.1.4 Childcare Center\n\nchildcare_sf <- st_read(dsn = \"data/geospatial\", layer = \"CHILDCARE\")\n\nReading layer `CHILDCARE' from data source \n  `C:\\Users\\la935\\Desktop\\IS415 - GAA\\IS415 - GAA (New)\\Take-Home_Ex\\Take-Home_Ex03\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 1545 features and 15 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 11203.01 ymin: 25667.6 xmax: 45404.24 ymax: 49300.88\nProjected CRS: WGS_1984_Transverse_Mercator\n\n# Assign EPSG Code\nchildcare_sf <- st_transform(childcare_sf, 3414)\n\n\n\n2.3.1.5 Kindergarten\n\nkindergarten_sf <- st_read(dsn = \"data/geospatial\", layer = \"KINDERGARTENS\")\n\nReading layer `KINDERGARTENS' from data source \n  `C:\\Users\\la935\\Desktop\\IS415 - GAA\\IS415 - GAA (New)\\Take-Home_Ex\\Take-Home_Ex03\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 448 features and 15 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 11909.7 ymin: 25596.33 xmax: 43395.47 ymax: 48562.06\nProjected CRS: SVY21\n\n# Assign EPSG Code\nkindergarten_sf <- st_transform(kindergarten_sf, 3414)\n\n\n\n2.3.1.6 Parks\n\nparks_sf <- st_read(dsn = \"data/geospatial\", layer = \"NATIONALPARKS\")\n\nReading layer `NATIONALPARKS' from data source \n  `C:\\Users\\la935\\Desktop\\IS415 - GAA\\IS415 - GAA (New)\\Take-Home_Ex\\Take-Home_Ex03\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 352 features and 15 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 12373.11 ymin: 21869.93 xmax: 46735.95 ymax: 49231.09\nProjected CRS: SVY21\n\n# Assign EPSG Code\nparks_sf <- st_transform(parks_sf, 3414)\n\n\n\n2.3.1.6 Hawker Centre\n\nhawker_sf <- st_read(dsn = \"data/geospatial\", layer = \"HAWKERCENTRE\")\n\nReading layer `HAWKERCENTRE' from data source \n  `C:\\Users\\la935\\Desktop\\IS415 - GAA\\IS415 - GAA (New)\\Take-Home_Ex\\Take-Home_Ex03\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 125 features and 21 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 12874.19 ymin: 28355.97 xmax: 45241.4 ymax: 47872.53\nProjected CRS: SVY21\n\n# Assign EPSG Code\nhawker_sf <- st_transform(hawker_sf, 3414)\n\n\n\n2.3.1.7 Supermarkets\n\nsupermarket_sf <- st_read(dsn = \"data/geospatial\", layer = \"SUPERMARKETS\")\n\nReading layer `SUPERMARKETS' from data source \n  `C:\\Users\\la935\\Desktop\\IS415 - GAA\\IS415 - GAA (New)\\Take-Home_Ex\\Take-Home_Ex03\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 526 features and 8 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 4901.188 ymin: 25529.08 xmax: 46948.22 ymax: 49233.6\nProjected CRS: SVY21\n\n# Assign EPSG Code\nsupermarket_sf <- st_transform(supermarket_sf, 3414)\n\n\n\n\n2.3.2 Data Without LAT & LONG\n\n2.3.2.1 CBD (Downtown Core, Singapore)\n\n# Storing LAT & LONG for CBD as Dataframe\nname <- c('CBD')\nlatitude = c(1.287953)\nlongitude = c(103.851784)\ncbd <- data.frame(name, latitude, longitude)\n\n\n# Convert to sf and Assign EPSG\ncbd_sf <- st_as_sf(cbd,\n                   coords = c(\"longitude\",\n                              \"latitude\"),\n                   crs = 4326) %>%\n  st_transform(crs = 3414)\n\nst_crs(cbd_sf)\n\nCoordinate Reference System:\n  User input: EPSG:3414 \n  wkt:\nPROJCRS[\"SVY21 / Singapore TM\",\n    BASEGEOGCRS[\"SVY21\",\n        DATUM[\"SVY21\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4757]],\n    CONVERSION[\"Singapore Transverse Mercator\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"northing (N)\",north,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"easting (E)\",east,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Cadastre, engineering survey, topographic mapping.\"],\n        AREA[\"Singapore - onshore and offshore.\"],\n        BBOX[1.13,103.59,1.47,104.07]],\n    ID[\"EPSG\",3414]]\n\n\n\n\n2.3.2.2 Primary Schools\n\nprimary <- read.csv(\"data/geospatial/general-information-of-schools.csv\")\n\nprimary <- primary %>%\n  filter(mainlevel_code == \"PRIMARY\") %>%\n  select(school_name, address, postal_code, mainlevel_code)\n\nglimpse(primary)\n\nRows: 183\nColumns: 4\n$ school_name    <chr> \"ADMIRALTY PRIMARY SCHOOL\", \"AHMAD IBRAHIM PRIMARY SCHO…\n$ address        <chr> \"11   WOODLANDS CIRCLE\", \"10   YISHUN STREET 11\", \"100 …\n$ postal_code    <int> 738907, 768643, 579646, 159016, 544969, 569785, 569920,…\n$ mainlevel_code <chr> \"PRIMARY\", \"PRIMARY\", \"PRIMARY\", \"PRIMARY\", \"PRIMARY\", …\n\n\nConverting postal codes to LAT & LONG\n\n# Store Primary School Postal and Retrieve LAT & LONG\nprimary_postal <- unique(primary$postal_code)\n\nprimary_latlong <- get_coords(primary_postal)\n\nCheck for NA\n\nprimary_latlong[(is.na(primary_latlong))]\n\n[1] NA NA NA NA NA NA NA NA NA\n\n\nError found for postal with 0 at the start, replace the postal code with 0 at the front\n\nprimary$postal_code[primary$postal_code == '88256'] <- '088256'\nprimary$postal_code[primary$postal_code == '99757'] <- '099757'\nprimary$postal_code[primary$postal_code == '99840'] <- '099840'\n\nRe-run converting postal code to LAT & LONG\n\nprimary_postal <- unique(primary$postal_code)\n\nprimary_latlong <- get_coords(primary_postal)\n\nCheck for NA\n\nprimary_latlong[(is.na(primary_latlong))]\n\ncharacter(0)\n\n\nCombine LAT & LONG with primary file\n\nprimary_school <- left_join(primary, primary_latlong, by = c('postal_code' = 'postal'))\n\nConvert to sf object and transform CRS\n\nprimary_school_sf <- st_as_sf(primary_school,\n                              coords = c(\"longitude\",\n                                         \"latitude\"),\n                              crs = 4326) %>%\n  st_transform(crs = 3414)\n\n\n\n2.3.2.3 Good Primary Schools\nGot the top 10 schools based on a website\n\ngood_primary_school <- primary_school %>%\n  filter(school_name %in%\n           c(\"PEI HWA PRESBYTERIAN PRIMARY SCHOOL\",\n             \"GONGSHANG PRIMARY SCHOOL\",\n             \"RIVERSIDE PRIMARY SCHOOL\",\n             \"RED SWASTIKA SCHOOL\",\n             \"PUNGGOL GREEN PRIMARY SCHOOL\",\n             \"PRINCESS ELIZABETH PRIMARY SCHOOL\",\n             \"WESTWOOD PRIMARY SCHOOL\",\n             \"AI TONG SCHOOL\",\n             \"FRONTIER PRIMARY SCHOOL\",\n             \"OASIS PRIMARY SCHOOL\"))\n\nConvert to sf object and transform CRS\n\ngood_primary_school_sf <- st_as_sf(good_primary_school,\n                              coords = c(\"longitude\",\n                                         \"latitude\"),\n                              crs = 4326) %>%\n  st_transform(crs = 3414)\n\n\n\n2.3.2.4 Shopping Malls\n\nshopping <- read.csv(\"data/geospatial/mall_coordinates.csv\")\n\nshopping <- shopping %>%\n  select(name, latitude, longitude)\n\nglimpse(shopping)\n\nRows: 199\nColumns: 3\n$ name      <chr> \"100 AM\", \"i12 Katong\", \"313@SOMERSET\", \"321 CLEMENTI\", \"600…\n$ latitude  <dbl> 1.274588, 1.305087, 1.301385, 1.312025, 1.334042, 1.437131, …\n$ longitude <dbl> 103.8435, 103.9051, 103.8377, 103.7650, 103.8510, 103.7953, …\n\n\n\nshopping_sf <- st_as_sf(shopping,\n                              coords = c(\"longitude\",\n                                         \"latitude\"),\n                              crs = 4326) %>%\n  st_transform(crs = 3414)"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#calculation-function",
    "href": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#calculation-function",
    "title": "Take-home Exercise 3: Predicting HDB Public Housing Resale Pricies using Geographically Weighted Methods",
    "section": "3.1 Calculation Function",
    "text": "3.1 Calculation Function\n\nprox_cal <- function(df1, df2, col_name) {\n  dist_matrix <- st_distance(df1, df2)\n  df1[,col_name] <- rowMins(dist_matrix) / 1000\n  return(df1)\n}"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#calculation-of-locational-factors",
    "href": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#calculation-of-locational-factors",
    "title": "Take-home Exercise 3: Predicting HDB Public Housing Resale Pricies using Geographically Weighted Methods",
    "section": "3.2 Calculation of Locational Factors",
    "text": "3.2 Calculation of Locational Factors\n\nresale_main_sf <- prox_cal(resale_main_sf, cbd_sf, \"PROX_CBD\")\nresale_main_sf <- prox_cal(resale_main_sf, BusStop_sf, \"PROX_BUS\")\nresale_main_sf <- prox_cal(resale_main_sf, childcare_sf, \"PROX_CHILDCARE\")\nresale_main_sf <- prox_cal(resale_main_sf, elder_sf, \"PROX_ELDERCARE\")\nresale_main_sf <- prox_cal(resale_main_sf, hawker_sf, \"PROX_HAWKER\")\nresale_main_sf <- prox_cal(resale_main_sf, good_primary_school_sf, \"PROX_GOODPRIMARY\")\nresale_main_sf <- prox_cal(resale_main_sf, parks_sf, \"PROX_PARK\")\nresale_main_sf <- prox_cal(resale_main_sf, supermarket_sf, \"PROX_SUPERMARKET\")\nresale_main_sf <- prox_cal(resale_main_sf, shopping_sf, \"PROX_SHOPPING\")\nresale_main_sf <- prox_cal(resale_main_sf, mrt_sf, \"PROX_MRT\")"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#calculation-function-with-radius",
    "href": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#calculation-function-with-radius",
    "title": "Take-home Exercise 3: Predicting HDB Public Housing Resale Pricies using Geographically Weighted Methods",
    "section": "3.3 Calculation Function With Radius",
    "text": "3.3 Calculation Function With Radius\n\nprox_cal_radius <- function(df1, df2, col_name, radius) {\n  dist_matrix <- st_distance(df1, df2) %>%\n    drop_units() %>%\n    as.data.frame()\n  df1[,col_name] <- rowSums(dist_matrix <= radius)\n  return(df1)\n}"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#calculation-of-locational-factors-with-radius",
    "href": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#calculation-of-locational-factors-with-radius",
    "title": "Take-home Exercise 3: Predicting HDB Public Housing Resale Pricies using Geographically Weighted Methods",
    "section": "3.4 Calculation of Locational Factors With Radius",
    "text": "3.4 Calculation of Locational Factors With Radius\n\nresale_main_sf <- prox_cal_radius(resale_main_sf, kindergarten_sf, \"WITHIN_350M_KINDERGARTEN\", 350)\nresale_main_sf <- prox_cal_radius(resale_main_sf, childcare_sf, \"WITHIN_350M_CHILDCARE\", 350)\nresale_main_sf <- prox_cal_radius(resale_main_sf, BusStop_sf, \"WITHIN_350M_BUS\", 350)\nresale_main_sf <- prox_cal_radius(resale_main_sf, primary_school_sf, \"WITHIN_1KM_PRIMARY\", 1000)"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#saving-dataset",
    "href": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#saving-dataset",
    "title": "Take-home Exercise 3: Predicting HDB Public Housing Resale Pricies using Geographically Weighted Methods",
    "section": "3.5 Saving Dataset",
    "text": "3.5 Saving Dataset\n\nresale_main_sf <- resale_main_sf %>%\n  mutate() %>%\n  rename(\"AREA_SQM\" = \"floor_area_sqm\",\n         \"LEASE_MTHS\" = \"remaining_lease_mths\",\n         \"PRICE\" = \"resale_price\",\n         \"STOREY\" = \"storey_range\")\n\n\nresale_main.rds <- write_rds(resale_main_sf, \"data/model/resale_main.rds\")"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#read-resale_main_rds-file",
    "href": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#read-resale_main_rds-file",
    "title": "Take-home Exercise 3: Predicting HDB Public Housing Resale Pricies using Geographically Weighted Methods",
    "section": "4.1 Read resale_main_rds file",
    "text": "4.1 Read resale_main_rds file\n\nresale_main_sf <- read_rds(\"data/model/resale_main.rds\")\n\n\nglimpse(resale_main_sf)\n\nRows: 25,502\nColumns: 28\n$ month                    <chr> \"2021-01\", \"2021-01\", \"2021-01\", \"2021-01\", \"…\n$ town                     <chr> \"ANG MO KIO\", \"ANG MO KIO\", \"ANG MO KIO\", \"AN…\n$ address                  <chr> \"547 ANG MO KIO AVE 10\", \"414 ANG MO KIO AVE …\n$ block                    <chr> \"547\", \"414\", \"509\", \"467\", \"571\", \"134\", \"20…\n$ street_name              <chr> \"ANG MO KIO AVE 10\", \"ANG MO KIO AVE 10\", \"AN…\n$ flat_type                <chr> \"4 ROOM\", \"4 ROOM\", \"4 ROOM\", \"4 ROOM\", \"4 RO…\n$ STOREY                   <chr> \"04 TO 06\", \"01 TO 03\", \"01 TO 03\", \"07 TO 09…\n$ AREA_SQM                 <dbl> 92, 92, 91, 92, 92, 98, 92, 92, 92, 92, 92, 1…\n$ flat_model               <chr> \"New Generation\", \"New Generation\", \"New Gene…\n$ lease_commence_date      <dbl> 1981, 1979, 1980, 1979, 1979, 1978, 1977, 197…\n$ LEASE_MTHS               <dbl> 708, 693, 702, 695, 689, 681, 661, 682, 692, …\n$ PRICE                    <dbl> 370000, 375000, 380000, 385000, 410000, 41000…\n$ postal                   <chr> \"560547\", \"560414\", \"560509\", \"560467\", \"5605…\n$ geometry                 <POINT [m]> POINT (30770.07 39578.64), POINT (30292…\n$ PROX_CBD                 <dbl> 9.564575, 8.401690, 9.516492, 8.580908, 9.084…\n$ PROX_BUS                 <dbl> 0.16157609, 0.16740841, 0.07424143, 0.0887911…\n$ PROX_CHILDCARE           <dbl> 2.493662e-01, 6.715056e-02, 1.385583e-01, 1.4…\n$ PROX_ELDERCARE           <dbl> 1.08567795, 0.15039052, 0.72242472, 0.0981628…\n$ PROX_HAWKER              <dbl> 0.4442515, 0.2050009, 0.4495734, 0.3190679, 0…\n$ PROX_GOODPRIMARY         <dbl> 3.182527, 2.354024, 2.414729, 2.699653, 2.648…\n$ PROX_PARK                <dbl> 0.8291527, 0.7847864, 0.3796058, 0.9242129, 0…\n$ PROX_SUPERMARKET         <dbl> 0.4184204, 0.1946009, 0.4435109, 0.4269715, 0…\n$ PROX_SHOPPING            <dbl> 1.1817959, 0.8444986, 0.2966736, 0.9304149, 0…\n$ PROX_MRT                 <dbl> 1.0731215, 0.8245176, 0.4544926, 0.9503956, 0…\n$ WITHIN_350M_KINDERGARTEN <dbl> 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, …\n$ WITHIN_350M_CHILDCARE    <dbl> 2, 3, 3, 3, 3, 2, 6, 3, 3, 3, 3, 3, 5, 2, 3, …\n$ WITHIN_350M_BUS          <dbl> 4, 7, 10, 4, 8, 2, 8, 7, 6, 7, 7, 7, 8, 8, 11…\n$ WITHIN_1KM_PRIMARY       <dbl> 1, 3, 2, 3, 2, 2, 3, 2, 3, 3, 1, 2, 3, 2, 2, …"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#statistical-graphics",
    "href": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#statistical-graphics",
    "title": "Take-home Exercise 3: Predicting HDB Public Housing Resale Pricies using Geographically Weighted Methods",
    "section": "4.2 Statistical Graphics",
    "text": "4.2 Statistical Graphics\n\n4.2.1 Histogram - Distribution of 4-Room Resale Prices\n\nggplot(data = resale_main_sf, aes(x = `PRICE`)) +\n  geom_histogram(bins = 20, color = \"black\", fill = \"light green\") +\n  labs(title = \"Distribution of 4-Room Resale Prices\",\n       x = \"Resale Prices\",\n       y = \"Frequency\")\n\n\n\n\n\n\n\n\n\n\nAnalysis:\n\n\n\nBased on the above graph, the histogram is skewed towards the right, meaning that 4-room HDB flats were sold at relatively lower prices.\n\n\n\n\n4.2.2 Boxplots - Distribution of 4-Room Resale Prices\n\nggplot(data = resale_main_sf, aes(x = '', y = PRICE)) +\n  geom_boxplot() +\n  labs(x = '', y = 'Resale Prices')\n\n\n\nsummary(resale_main_sf$PRICE)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n 250000  445000  495000  529142  570000 1370000 \n\n\n\n\n\n\n\n\nAnalysis:\n\n\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n 250000  445000  495000  529142  570000 1370000 \nFrom the graph above, it is clear that there’s a number of outliers at the higher end, and there’s one at the lower end. Most 4-rooms are sold between $445,000 to $570,000, with the lowest sold at $250,000 and the highest at $1,370,000.\n\n\n\n\n4.2.3 Multiple Histogram Plots Distribution of Locational Factors\n\nAREA_SQM <- ggplot(data = resale_main_sf, aes(x = `AREA_SQM`)) +\n  geom_histogram(bins = 20, color = \"black\", fill = \"light green\")\n\nLEASE_MTHS <- ggplot(data = resale_main_sf, aes(x = `LEASE_MTHS`)) +\n  geom_histogram(bins = 20, color = \"black\", fill = \"light green\")\n\nPROX_CBD <- ggplot(data = resale_main_sf, aes(x = `PROX_CBD`)) +\n  geom_histogram(bins = 20, color = \"black\", fill = \"light green\")\n\nPROX_BUS <- ggplot(data = resale_main_sf, aes(x = `PROX_BUS`)) +\n  geom_histogram(bins = 20, color = \"black\", fill = \"light green\")\n\nPROX_CHILDCARE <- ggplot(data = resale_main_sf, aes(x = `PROX_CHILDCARE`)) +\n  geom_histogram(bins = 20, color = \"black\", fill = \"light green\")\n\nPROX_ELDERCARE <- ggplot(data = resale_main_sf, aes(x = `PROX_ELDERCARE`)) +\n  geom_histogram(bins = 20, color = \"black\", fill = \"light green\")\n\nPROX_HAWKER <- ggplot(data = resale_main_sf, aes(x = `PROX_HAWKER`)) +\n  geom_histogram(bins = 20, color = \"black\", fill = \"light green\")\n\nPROX_GOODPRIMARY <- ggplot(data = resale_main_sf, aes(x = `PROX_GOODPRIMARY`)) +\n  geom_histogram(bins = 20, color = \"black\", fill = \"light green\")\n\nPROX_PARK <- ggplot(data = resale_main_sf, aes(x = `PROX_PARK`)) +\n  geom_histogram(bins = 20, color = \"black\", fill = \"light green\")\n\nPROX_SUPERMARKET <- ggplot(data = resale_main_sf, aes(x = `PROX_SUPERMARKET`)) +\n  geom_histogram(bins = 20, color = \"black\", fill = \"light green\")\n\nPROX_SHOPPING <- ggplot(data = resale_main_sf, aes(x = `PROX_SHOPPING`)) +\n  geom_histogram(bins = 20, color = \"black\", fill = \"light green\")\n\nPROX_MRT <- ggplot(data = resale_main_sf, aes(x = `PROX_MRT`)) +\n  geom_histogram(bins = 20, color = \"black\", fill = \"light green\")\n\nggarrange(AREA_SQM, LEASE_MTHS, PROX_CBD, PROX_BUS, PROX_CHILDCARE, PROX_ELDERCARE, PROX_HAWKER, PROX_GOODPRIMARY, PROX_PARK, PROX_SUPERMARKET, PROX_SHOPPING, PROX_MRT, ncol = 3, nrow = 4)\n\n\n\n\n\n\n4.2.3 Multiple Histogram Plots Distribution of Locational Factors With Radius\n\nWITHIN_350M_KINDERGARTEN <- ggplot(data = resale_main_sf, aes(x = `WITHIN_350M_KINDERGARTEN`)) +\n  geom_histogram(bins = 20, color = \"black\", fill = \"light green\")\n\nWITHIN_350M_CHILDCARE <- ggplot(data = resale_main_sf, aes(x = `WITHIN_350M_CHILDCARE`)) +\n  geom_histogram(bins = 20, color = \"black\", fill = \"light green\")\n\nWITHIN_350M_BUS <- ggplot(data = resale_main_sf, aes(x = `WITHIN_350M_BUS`)) +\n  geom_histogram(bins = 20, color = \"black\", fill = \"light green\")\n\nWITHIN_1KM_PRIMARY <- ggplot(data = resale_main_sf, aes(x = `WITHIN_1KM_PRIMARY`)) +\n  geom_histogram(bins = 20, color = \"black\", fill = \"light green\")\n\nggarrange(WITHIN_350M_KINDERGARTEN, WITHIN_350M_CHILDCARE, WITHIN_350M_BUS, WITHIN_1KM_PRIMARY, ncol = 2, nrow = 2)\n\n\n\n\n\n\n4.2.4 Point Map\n\ntmap_mode(\"view\")\ntmap_options(check.and.fix = TRUE)\ntm_shape(resale_main_sf)+\n  tm_dots(col = \"PRICE\",\n          alpha = 0.6,\n          style = \"quantile\",\n             popup.vars=c(\"block\"=\"block\", \"street_name\"=\"street_name\", \"flat_model\" = \"flat_model\", \"town\" = \"town\", \"PRICE\" = \"PRICE\", \"LEASE_MTHS\", \"LEASE_MTHS\")) +\n  tm_view(set.zoom.limits = c(11, 16))\n\n\n\n\n\n\nFrom the above, it seems that the concentration of higher resale price for 4-room is located either the Central Area or Southern Area of Singapore\n\ntown_mean <- aggregate(resale_main_sf[, \"PRICE\"], list(resale_main_sf$town), mean)\ntown_top10 = top_n(town_mean, 10, `PRICE`) %>%\n  arrange(desc(`PRICE`))\ntown_top10\n\nSimple feature collection with 10 features and 2 fields\nGeometry type: MULTIPOINT\nDimension:     XY\nBounding box:  xmin: 19536.43 ymin: 28217.39 xmax: 35958.92 ymax: 41493.47\nProjected CRS: SVY21 / Singapore TM\n           Group.1    PRICE                       geometry\n1     CENTRAL AREA 857591.2 MULTIPOINT ((28640.73 29932...\n2       QUEENSTOWN 783287.3 MULTIPOINT ((22133.07 32910...\n3      BUKIT MERAH 717229.0 MULTIPOINT ((25024.14 28462...\n4  KALLANG/WHAMPOA 703112.0 MULTIPOINT ((19536.43 41493...\n5        TOA PAYOH 655306.9 MULTIPOINT ((29021.66 34720...\n6         CLEMENTI 646121.4 MULTIPOINT ((19863.73 32474...\n7      BUKIT TIMAH 638823.0 MULTIPOINT ((21224.71 35657...\n8           BISHAN 609267.0 MULTIPOINT ((27638.13 37842...\n9          GEYLANG 590617.2 MULTIPOINT ((32749.43 33252...\n10      ANG MO KIO 558339.2 MULTIPOINT ((28070.74 38987...\n\n\n\n\n\n\n\n\nAnalysis:\n\n\n\nFrom the above, it is clear that my analysis initially was correct, with Central Area being the most concentrated of higher resale price for 4-room at $857,591and Queenstown right behind at $783,287."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#visualising-the-relationships-of-the-independent-variables",
    "href": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#visualising-the-relationships-of-the-independent-variables",
    "title": "Take-home Exercise 3: Predicting HDB Public Housing Resale Pricies using Geographically Weighted Methods",
    "section": "5.1 Visualising The Relationships of The Independent Variables",
    "text": "5.1 Visualising The Relationships of The Independent Variables\nUsing the correlation matrix to examine if there is sign of multicolinearity.\n\nresale_main_nogeo <- resale_main_sf %>%\n  st_drop_geometry() %>%\n  dplyr::select(c(7, 8, 11, 12, 14:27)) %>%\n  mutate(STOREY = as.character(STOREY))\n\n\nglimpse(resale_main_nogeo)\n\nRows: 25,502\nColumns: 18\n$ STOREY                   <chr> \"04 TO 06\", \"01 TO 03\", \"01 TO 03\", \"07 TO 09…\n$ AREA_SQM                 <dbl> 92, 92, 91, 92, 92, 98, 92, 92, 92, 92, 92, 1…\n$ LEASE_MTHS               <dbl> 708, 693, 702, 695, 689, 681, 661, 682, 692, …\n$ PRICE                    <dbl> 370000, 375000, 380000, 385000, 410000, 41000…\n$ PROX_CBD                 <dbl> 9.564575, 8.401690, 9.516492, 8.580908, 9.084…\n$ PROX_BUS                 <dbl> 0.16157609, 0.16740841, 0.07424143, 0.0887911…\n$ PROX_CHILDCARE           <dbl> 2.493662e-01, 6.715056e-02, 1.385583e-01, 1.4…\n$ PROX_ELDERCARE           <dbl> 1.08567795, 0.15039052, 0.72242472, 0.0981628…\n$ PROX_HAWKER              <dbl> 0.4442515, 0.2050009, 0.4495734, 0.3190679, 0…\n$ PROX_GOODPRIMARY         <dbl> 3.182527, 2.354024, 2.414729, 2.699653, 2.648…\n$ PROX_PARK                <dbl> 0.8291527, 0.7847864, 0.3796058, 0.9242129, 0…\n$ PROX_SUPERMARKET         <dbl> 0.4184204, 0.1946009, 0.4435109, 0.4269715, 0…\n$ PROX_SHOPPING            <dbl> 1.1817959, 0.8444986, 0.2966736, 0.9304149, 0…\n$ PROX_MRT                 <dbl> 1.0731215, 0.8245176, 0.4544926, 0.9503956, 0…\n$ WITHIN_350M_KINDERGARTEN <dbl> 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, …\n$ WITHIN_350M_CHILDCARE    <dbl> 2, 3, 3, 3, 3, 2, 6, 3, 3, 3, 3, 3, 5, 2, 3, …\n$ WITHIN_350M_BUS          <dbl> 4, 7, 10, 4, 8, 2, 8, 7, 6, 7, 7, 7, 8, 8, 11…\n$ WITHIN_1KM_PRIMARY       <dbl> 1, 3, 2, 3, 2, 2, 3, 2, 3, 3, 1, 2, 3, 2, 2, …\n\n\n\ncorrplot(cor(resale_main_nogeo[, 2:18]), diag = FALSE, order = \"AOE\",\n         t1.pos = \"td\",\n         t1.cex = 0.5,\n         method = \"number\",\n         type = \"upper\")\n\n\n\n\n\n\n\n\n\n\nAnalysis:\n\n\n\nFrom above, there a few correlated variables and it’s within the acceptable range. All variables can be included in the regression."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#preparing-publication-quality-table-olsrr-method",
    "href": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#preparing-publication-quality-table-olsrr-method",
    "title": "Take-home Exercise 3: Predicting HDB Public Housing Resale Pricies using Geographically Weighted Methods",
    "section": "5.2 Preparing Publication Quality Table: olsrr method",
    "text": "5.2 Preparing Publication Quality Table: olsrr method\nThe code chunk below using lm() to calibrate the multiple linear regression model\n\nresale.mlr <- lm(formula = PRICE ~ STOREY + AREA_SQM + PROX_BUS + PROX_CBD +\n                   PROX_CHILDCARE + PROX_ELDERCARE + PROX_GOODPRIMARY +\n                   PROX_HAWKER + PROX_MRT + PROX_PARK + PROX_SHOPPING +\n                   PROX_SUPERMARKET + WITHIN_1KM_PRIMARY + WITHIN_350M_BUS +\n                   WITHIN_350M_CHILDCARE + WITHIN_350M_KINDERGARTEN + LEASE_MTHS,\n                 data = resale_main_nogeo)\nsummary(resale.mlr)\n\n\nCall:\nlm(formula = PRICE ~ STOREY + AREA_SQM + PROX_BUS + PROX_CBD + \n    PROX_CHILDCARE + PROX_ELDERCARE + PROX_GOODPRIMARY + PROX_HAWKER + \n    PROX_MRT + PROX_PARK + PROX_SHOPPING + PROX_SUPERMARKET + \n    WITHIN_1KM_PRIMARY + WITHIN_350M_BUS + WITHIN_350M_CHILDCARE + \n    WITHIN_350M_KINDERGARTEN + LEASE_MTHS, data = resale_main_nogeo)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-366081  -45763   -1688   44765  366746 \n\nCoefficients:\n                           Estimate Std. Error  t value Pr(>|t|)    \n(Intercept)              120014.669   8258.128   14.533  < 2e-16 ***\nSTOREY04 TO 06            18174.045   1415.338   12.841  < 2e-16 ***\nSTOREY07 TO 09            33293.452   1433.951   23.218  < 2e-16 ***\nSTOREY10 TO 12            42205.423   1465.693   28.796  < 2e-16 ***\nSTOREY13 TO 15            46506.923   1732.282   26.847  < 2e-16 ***\nSTOREY16 TO 18            57642.699   2237.856   25.758  < 2e-16 ***\nSTOREY19 TO 21            81000.888   3229.399   25.082  < 2e-16 ***\nSTOREY22 TO 24            93152.163   3729.839   24.975  < 2e-16 ***\nSTOREY25 TO 27           129017.648   4162.388   30.996  < 2e-16 ***\nSTOREY28 TO 30           191972.634   5073.291   37.840  < 2e-16 ***\nSTOREY31 TO 33           200784.072   6147.604   32.661  < 2e-16 ***\nSTOREY34 TO 36           229694.831   6128.617   37.479  < 2e-16 ***\nSTOREY37 TO 39           237916.273   7247.254   32.828  < 2e-16 ***\nSTOREY40 TO 42           254342.952  10061.970   25.278  < 2e-16 ***\nSTOREY43 TO 45           306318.117  13356.989   22.933  < 2e-16 ***\nSTOREY46 TO 48           363573.767  22972.861   15.826  < 2e-16 ***\nSTOREY49 TO 51           486732.032  39689.742   12.263  < 2e-16 ***\nAREA_SQM                   3337.357     66.666   50.061  < 2e-16 ***\nPROX_BUS                    560.743   8367.314    0.067   0.9466    \nPROX_CBD                 -16334.883    157.010 -104.037  < 2e-16 ***\nPROX_CHILDCARE           -28447.588   5842.370   -4.869 1.13e-06 ***\nPROX_ELDERCARE            -7618.521    766.757   -9.936  < 2e-16 ***\nPROX_GOODPRIMARY          -1106.698    276.047   -4.009 6.11e-05 ***\nPROX_HAWKER              -22254.694    912.079  -24.400  < 2e-16 ***\nPROX_MRT                 -23445.396   1273.357  -18.412  < 2e-16 ***\nPROX_PARK                  2133.165   1051.654    2.028   0.0425 *  \nPROX_SHOPPING            -24191.278   1462.249  -16.544  < 2e-16 ***\nPROX_SUPERMARKET           8280.425   2994.998    2.765   0.0057 ** \nWITHIN_1KM_PRIMARY        -9076.876    341.628  -26.569  < 2e-16 ***\nWITHIN_350M_BUS            1086.401    169.483    6.410 1.48e-10 ***\nWITHIN_350M_CHILDCARE     -3914.981    256.907  -15.239  < 2e-16 ***\nWITHIN_350M_KINDERGARTEN   6513.794    468.411   13.906  < 2e-16 ***\nLEASE_MTHS                  359.103      3.123  114.989  < 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 68620 on 25469 degrees of freedom\nMultiple R-squared:  0.722, Adjusted R-squared:  0.7216 \nF-statistic:  2067 on 32 and 25469 DF,  p-value: < 2.2e-16\n\n\n\nresale.mlr <- lm(formula = PRICE ~ STOREY + AREA_SQM + PROX_BUS + PROX_CBD +\n                   PROX_CHILDCARE + PROX_ELDERCARE + PROX_GOODPRIMARY +\n                   PROX_HAWKER + PROX_MRT + PROX_PARK + PROX_SHOPPING +\n                   PROX_SUPERMARKET + WITHIN_1KM_PRIMARY + WITHIN_350M_BUS +\n                   WITHIN_350M_CHILDCARE + WITHIN_350M_KINDERGARTEN + LEASE_MTHS,\n                 data = resale_main_nogeo)\nols_regress(resale.mlr)\n\n                            Model Summary                              \n----------------------------------------------------------------------\nR                       0.850       RMSE                    68623.970 \nR-Squared               0.722       Coef. Var                  12.969 \nAdj. R-Squared          0.722       MSE                4709249303.857 \nPred R-Squared          0.721       MAE                     53943.596 \n----------------------------------------------------------------------\n RMSE: Root Mean Square Error \n MSE: Mean Square Error \n MAE: Mean Absolute Error \n\n                                     ANOVA                                       \n--------------------------------------------------------------------------------\n                    Sum of                                                      \n                   Squares           DF       Mean Square       F          Sig. \n--------------------------------------------------------------------------------\nRegression    3.114971e+14           32      9.734283e+12    2067.056    0.0000 \nResidual      1.199399e+14        25469    4709249303.857                       \nTotal         4.314369e+14        25501                                         \n--------------------------------------------------------------------------------\n\n                                                Parameter Estimates                                                 \n-------------------------------------------------------------------------------------------------------------------\n                   model          Beta    Std. Error    Std. Beta       t         Sig          lower         upper \n-------------------------------------------------------------------------------------------------------------------\n             (Intercept)    120014.669      8258.128                   14.533    0.000    103828.267    136201.072 \n          STOREY04 TO 06     18174.045      1415.338        0.057      12.841    0.000     15399.902     20948.188 \n          STOREY07 TO 09     33293.452      1433.951        0.103      23.218    0.000     30482.826     36104.078 \n          STOREY10 TO 12     42205.423      1465.693        0.126      28.796    0.000     39332.581     45078.266 \n          STOREY13 TO 15     46506.923      1732.282        0.111      26.847    0.000     43111.552     49902.294 \n          STOREY16 TO 18     57642.699      2237.856        0.098      25.758    0.000     53256.374     62029.024 \n          STOREY19 TO 21     81000.888      3229.399        0.089      25.082    0.000     74671.081     87330.694 \n          STOREY22 TO 24     93152.163      3729.839        0.088      24.975    0.000     85841.465    100462.861 \n          STOREY25 TO 27    129017.648      4162.388        0.108      30.996    0.000    120859.129    137176.166 \n          STOREY28 TO 30    191972.634      5073.291        0.130      37.840    0.000    182028.693    201916.575 \n          STOREY31 TO 33    200784.072      6147.604        0.111      32.661    0.000    188734.416    212833.727 \n          STOREY34 TO 36    229694.831      6128.617        0.128      37.479    0.000    217682.391    241707.271 \n          STOREY37 TO 39    237916.273      7247.254        0.111      32.828    0.000    223711.240    252121.305 \n          STOREY40 TO 42    254342.952     10061.970        0.085      25.278    0.000    234620.916    274064.988 \n          STOREY43 TO 45    306318.117     13356.989        0.077      22.933    0.000    280137.656    332498.579 \n          STOREY46 TO 48    363573.767     22972.861        0.053      15.826    0.000    318545.648    408601.887 \n          STOREY49 TO 51    486732.032     39689.742        0.041      12.263    0.000    408937.869    564526.194 \n                AREA_SQM      3337.357        66.666        0.176      50.061    0.000      3206.688      3468.027 \n                PROX_BUS       560.743      8367.314        0.000       0.067    0.947    -15839.670     16961.157 \n                PROX_CBD    -16334.883       157.010       -0.528    -104.037    0.000    -16642.633    -16027.134 \n          PROX_CHILDCARE    -28447.588      5842.370       -0.017      -4.869    0.000    -39898.967    -16996.208 \n          PROX_ELDERCARE     -7618.521       766.757       -0.036      -9.936    0.000     -9121.409     -6115.634 \n        PROX_GOODPRIMARY     -1106.698       276.047       -0.017      -4.009    0.000     -1647.766      -565.631 \n             PROX_HAWKER    -22254.694       912.079       -0.090     -24.400    0.000    -24042.421    -20466.967 \n                PROX_MRT    -23445.396      1273.357       -0.068     -18.412    0.000    -25941.248    -20949.544 \n               PROX_PARK      2133.165      1051.654        0.007       2.028    0.043        71.864      4194.466 \n           PROX_SHOPPING    -24191.278      1462.249       -0.066     -16.544    0.000    -27057.370    -21325.187 \n        PROX_SUPERMARKET      8280.425      2994.998        0.010       2.765    0.006      2410.059     14150.791 \n      WITHIN_1KM_PRIMARY     -9076.876       341.628       -0.111     -26.569    0.000     -9746.487     -8407.265 \n         WITHIN_350M_BUS      1086.401       169.483        0.024       6.410    0.000       754.205      1418.598 \n   WITHIN_350M_CHILDCARE     -3914.981       256.907       -0.060     -15.239    0.000     -4418.533     -3411.428 \nWITHIN_350M_KINDERGARTEN      6513.794       468.411        0.049      13.906    0.000      5595.682      7431.906 \n              LEASE_MTHS       359.103         3.123        0.455     114.989    0.000       352.982       365.224 \n-------------------------------------------------------------------------------------------------------------------"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#preparing-publication-quality-table-gtsummary-method",
    "href": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#preparing-publication-quality-table-gtsummary-method",
    "title": "Take-home Exercise 3: Predicting HDB Public Housing Resale Pricies using Geographically Weighted Methods",
    "section": "5.3 Preparing Publication Quality Table: gtsummary method",
    "text": "5.3 Preparing Publication Quality Table: gtsummary method\n\ntbl_regression(resale.mlr, intercept = TRUE)\n\n\n\n\n\n  \n  \n    \n      Characteristic\n      Beta\n      95% CI1\n      p-value\n    \n  \n  \n    (Intercept)\n120,015\n103,828, 136,201\n<0.001\n    STOREY\n\n\n\n        01 TO 03\n—\n—\n\n        04 TO 06\n18,174\n15,400, 20,948\n<0.001\n        07 TO 09\n33,293\n30,483, 36,104\n<0.001\n        10 TO 12\n42,205\n39,333, 45,078\n<0.001\n        13 TO 15\n46,507\n43,112, 49,902\n<0.001\n        16 TO 18\n57,643\n53,256, 62,029\n<0.001\n        19 TO 21\n81,001\n74,671, 87,331\n<0.001\n        22 TO 24\n93,152\n85,841, 100,463\n<0.001\n        25 TO 27\n129,018\n120,859, 137,176\n<0.001\n        28 TO 30\n191,973\n182,029, 201,917\n<0.001\n        31 TO 33\n200,784\n188,734, 212,834\n<0.001\n        34 TO 36\n229,695\n217,682, 241,707\n<0.001\n        37 TO 39\n237,916\n223,711, 252,121\n<0.001\n        40 TO 42\n254,343\n234,621, 274,065\n<0.001\n        43 TO 45\n306,318\n280,138, 332,499\n<0.001\n        46 TO 48\n363,574\n318,546, 408,602\n<0.001\n        49 TO 51\n486,732\n408,938, 564,526\n<0.001\n    AREA_SQM\n3,337\n3,207, 3,468\n<0.001\n    PROX_BUS\n561\n-15,840, 16,961\n>0.9\n    PROX_CBD\n-16,335\n-16,643, -16,027\n<0.001\n    PROX_CHILDCARE\n-28,448\n-39,899, -16,996\n<0.001\n    PROX_ELDERCARE\n-7,619\n-9,121, -6,116\n<0.001\n    PROX_GOODPRIMARY\n-1,107\n-1,648, -566\n<0.001\n    PROX_HAWKER\n-22,255\n-24,042, -20,467\n<0.001\n    PROX_MRT\n-23,445\n-25,941, -20,950\n<0.001\n    PROX_PARK\n2,133\n72, 4,194\n0.043\n    PROX_SHOPPING\n-24,191\n-27,057, -21,325\n<0.001\n    PROX_SUPERMARKET\n8,280\n2,410, 14,151\n0.006\n    WITHIN_1KM_PRIMARY\n-9,077\n-9,746, -8,407\n<0.001\n    WITHIN_350M_BUS\n1,086\n754, 1,419\n<0.001\n    WITHIN_350M_CHILDCARE\n-3,915\n-4,419, -3,411\n<0.001\n    WITHIN_350M_KINDERGARTEN\n6,514\n5,596, 7,432\n<0.001\n    LEASE_MTHS\n359\n353, 365\n<0.001\n  \n  \n  \n    \n      1 CI = Confidence Interval"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#checking-for-multicolinearity",
    "href": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#checking-for-multicolinearity",
    "title": "Take-home Exercise 3: Predicting HDB Public Housing Resale Pricies using Geographically Weighted Methods",
    "section": "5.4 Checking for Multicolinearity",
    "text": "5.4 Checking for Multicolinearity\n\nols_vif_tol(resale.mlr)\n\n                  Variables Tolerance      VIF\n1            STOREY04 TO 06 0.5453259 1.833766\n2            STOREY07 TO 09 0.5526886 1.809337\n3            STOREY10 TO 12 0.5661245 1.766396\n4            STOREY13 TO 15 0.6433468 1.554372\n5            STOREY16 TO 18 0.7594335 1.316771\n6            STOREY19 TO 21 0.8589673 1.164189\n7            STOREY22 TO 24 0.8859272 1.128761\n8            STOREY25 TO 27 0.9019700 1.108684\n9            STOREY28 TO 30 0.9220648 1.084522\n10           STOREY31 TO 33 0.9418010 1.061795\n11           STOREY34 TO 36 0.9406107 1.063139\n12           STOREY37 TO 39 0.9573717 1.044526\n13           STOREY40 TO 42 0.9708734 1.030000\n14           STOREY43 TO 45 0.9786577 1.021808\n15           STOREY46 TO 48 0.9918187 1.008249\n16           STOREY49 TO 51 0.9966094 1.003402\n17                 AREA_SQM 0.8811246 1.134913\n18                 PROX_BUS 0.8620575 1.160015\n19                 PROX_CBD 0.4244658 2.355902\n20           PROX_CHILDCARE 0.8721396 1.146605\n21           PROX_ELDERCARE 0.8365748 1.195350\n22         PROX_GOODPRIMARY 0.5928120 1.686875\n23              PROX_HAWKER 0.8029681 1.245380\n24                 PROX_MRT 0.8000420 1.249934\n25                PROX_PARK 0.8580656 1.165412\n26            PROX_SHOPPING 0.6879710 1.453550\n27         PROX_SUPERMARKET 0.8865753 1.127936\n28       WITHIN_1KM_PRIMARY 0.6199215 1.613107\n29          WITHIN_350M_BUS 0.7671970 1.303446\n30    WITHIN_350M_CHILDCARE 0.7114620 1.405556\n31 WITHIN_350M_KINDERGARTEN 0.8882120 1.125857\n32               LEASE_MTHS 0.6974027 1.433892\n\n\n\n\n\n\n\n\nAnalysis:\n\n\n\nSince the VIF of the independent variables are less than 10, it is safe to say that there are no sign of multicollinearity among the independent variables."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#test-for-non-linearity",
    "href": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#test-for-non-linearity",
    "title": "Take-home Exercise 3: Predicting HDB Public Housing Resale Pricies using Geographically Weighted Methods",
    "section": "5.5 Test for Non-Linearity",
    "text": "5.5 Test for Non-Linearity\n\nols_plot_resid_fit(resale.mlr)\n\n\n\n\n\n\n\n\n\n\nAnalysis:\n\n\n\nFrom the figure above, most of the data points are scattered around the 0 line. This shows that the relationship between the dependent variable and the independent variables are linear."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#test-for-normality-assumption",
    "href": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#test-for-normality-assumption",
    "title": "Take-home Exercise 3: Predicting HDB Public Housing Resale Pricies using Geographically Weighted Methods",
    "section": "5.6 Test for Normality Assumption",
    "text": "5.6 Test for Normality Assumption\n\nols_plot_resid_hist(resale.mlr)\n\n\n\n\n\n\n\n\n\n\nAnalysis:\n\n\n\nFrom the figure above, it shows that the residual of the multiple linear regression model is normally distributed."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#testing-for-spatial-autocorrelation",
    "href": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#testing-for-spatial-autocorrelation",
    "title": "Take-home Exercise 3: Predicting HDB Public Housing Resale Pricies using Geographically Weighted Methods",
    "section": "5.7 Testing for Spatial Autocorrelation",
    "text": "5.7 Testing for Spatial Autocorrelation\n\n5.7.1 Export the Residual and Save as a Data Frame\n\nmlr.output <- as.data.frame(resale.mlr$residuals)\n\n\n\n5.7.2 Join Data Frame with resale_main_sf Object\n\nresale.res.sf <- cbind(resale_main_sf,\n                       resale.mlr$residuals) %>%\n  rename(`MLR_RES` = resale.mlr.residuals)\n\n\n\n5.7.3 Convert from sf to sp\n\nresale.sp <- as_Spatial(resale.res.sf)\nresale.sp\n\nclass       : SpatialPointsDataFrame \nfeatures    : 25502 \nextent      : 11519.79, 42645.18, 28217.39, 48741.06  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \nvariables   : 28\nnames       :   month,       town,          address, block,   street_name, flat_type,   STOREY, AREA_SQM,    flat_model, lease_commence_date, LEASE_MTHS,   PRICE, postal,          PROX_CBD,           PROX_BUS, ... \nmin values  : 2021-01, ANG MO KIO,   1 CHAI CHEE RD,     1,  ADMIRALTY DR,    4 ROOM, 01 TO 03,       70, Adjoined flat,                1967,        517,  250000, 052335, 0.999393538715878, 0.0158480216214286, ... \nmax values  : 2023-02,     YISHUN, 9B BOON TIONG RD,    9B, YUNG SHENG RD,    4 ROOM, 49 TO 51,      145,       Type S1,                2019,       1168, 1370000,    NIL,  19.6500691667807,  0.391470769487539, ... \n\n\n\n\n5.7.4 Visualise the Distribution of Residuals\n\ntm_shape(mpsz)+\n  tmap_options(check.and.fix = TRUE) +\n  tm_polygons(alpha = 0.4) +\ntm_shape(resale.res.sf) +  \n  tm_dots(col = \"MLR_RES\",\n          alpha = 0.6,\n          style=\"quantile\") +\n  tm_view(set.zoom.limits = c(11,14))"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#morans-i-test",
    "href": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#morans-i-test",
    "title": "Take-home Exercise 3: Predicting HDB Public Housing Resale Pricies using Geographically Weighted Methods",
    "section": "5.8 Moran’s I Test",
    "text": "5.8 Moran’s I Test\n\n5.8.1 Computing Distance-Based Weight Matrix\n\nnb <- dnearneigh(coordinates(resale.sp), 0, 1500, longlat = FALSE)\nsummary(nb)\n\nNeighbour list object:\nNumber of regions: 25502 \nNumber of nonzero links: 26961048 \nPercentage nonzero weights: 4.145609 \nAverage number of links: 1057.213 \nLink number distribution:\n\n   5   28   33   40   85   88   91   93  111  112  135  150  153  155  156  162 \n   6   29   25    9    3   84   11    5    1    3    3  129   19    3    1    1 \n 164  167  168  172  179  181  184  185  193  195  197  198  199  200  201  203 \n   1    2    5    3    5    5    1    1   10    3   10    6   20    2   48    5 \n 204  205  206  208  210  211  212  214  215  217  218  219  220  221  222  223 \n   5   91   15   21    1    3    1   13   13    8    5    2   29    8    3   14 \n 224  226  227  228  230  232  234  235  236  238  239  240  241  242  243  244 \n   6    5   41   15    2   18   19    1   17    6    6    6   17   18    8    4 \n 245  246  247  248  249  250  251  252  254  256  257  258  259  260  262  263 \n  39   10   26   35    7    2    9   14   26    7   25    3    2    2   28   24 \n 264  265  266  267  268  269  270  271  272  273  274  275  276  277  278  279 \n  36   13   16   10   17   22    2   12   21   17    9    5   22   14    9   24 \n 280  281  282  283  284  285  286  287  289  290  291  292  293  294  295  296 \n  17    6   36   13   50    3   31   21   16   10    9   33   11   11    8   12 \n 297  298  299  300  301  302  306  307  308  310  311  312  313  314  315  316 \n  40   57   29    6   26   11   14    5   18    4    9    9    8    7   32   10 \n 317  318  319  320  321  322  323  324  325  326  327  328  329  330  331  332 \n  46   14    6   15   13    9   15   19   13    7   12   50    5    6   32    7 \n 333  334  335  336  337  338  339  340  341  342  343  344  345  346  347  348 \n   8   43    7   15    7   14    6   12   11   20   15    6    5   25   13    9 \n 349  350  351  352  353  354  355  356  357  358  359  360  361  362  363  364 \n  13   14   16    3   19    8    6   16    6   14    7   17    7   27    9    2 \n 365  366  367  368  369  370  371  372  373  374  375  376  377  378  379  380 \n   2   18   31   13    9   39   23   13    8   23   26   10   16    5    6   16 \n 382  383  384  385  386  387  388  389  390  391  392  393  394  395  396  397 \n   8    9    2   13   14   11   18   32   32    7   18   12    8   17   33    4 \n 398  399  400  401  402  403  404  405  406  407  408  409  410  411  412  413 \n  16   12    4   39   19    6   25   11   19   33   19   58   16   27    4    7 \n 414  415  416  417  418  419  420  421  422  423  424  425  426  427  428  429 \n   4    5   30   19   34   13   10    9   29   16   14   10   13   23    6   30 \n 430  431  432  433  434  435  436  437  438  439  440  441  442  443  444  445 \n  18   18   20    9   13   15   18   10   31    8    9    6   16   25   17   29 \n 446  447  448  449  450  451  452  453  454  455  456  457  458  459  460  461 \n  20   17   28   16    7   28    9   43   20   40   27   20   22    7   45   24 \n 462  463  464  465  466  467  468  469  470  471  472  473  474  475  476  477 \n  27   20   51   13   19    3    8   16   10   16   11   17   52   20   65   14 \n 478  479  480  481  482  483  484  485  486  487  488  489  490  491  492  493 \n  14   17   20   21   70   31  107   22   24   15   30   14   11   16   30    9 \n 494  495  496  497  498  499  500  501  502  503  504  505  506  507  508  509 \n  27   12    4   20   24   18   18   23   19   22   10   15   16    3    9   15 \n 510  511  512  513  514  515  516  517  518  519  520  521  522  523  524  525 \n   3   10   15   29    8    6   26   12    6    7   54   21   15    7   16   16 \n 526  527  528  529  530  531  532  533  534  535  536  537  538  539  540  541 \n  10    9   23   39   15   29   47    8   14   20   16   22    9   19   35   48 \n 542  543  544  545  546  547  548  549  550  551  552  553  554  555  556  557 \n  45   27    6   21   14   32   24   15   15    8   80   13    8   40   13    8 \n 558  559  560  561  562  563  564  565  566  567  568  569  570  571  572  573 \n  32   27   24   18   16    5   25   54   11   27    8   48    6   34   18   10 \n 574  575  576  577  578  579  580  581  582  583  584  585  586  587  588  589 \n  36   14   31   10   16   40   22   14   48   39   67   20   24   24   25   18 \n 590  591  592  593  594  595  596  597  598  599  600  601  602  603  604  605 \n  29   22   22   18   23    5   32   13   18   22   27   21    7   38   12   22 \n 606  607  608  609  610  611  612  613  614  615  616  617  618  619  620  621 \n  22   23   49   35   27   10   13   22   41    7   20   18   12   18   31   80 \n 622  623  624  625  626  627  628  629  630  631  632  633  634  635  636  637 \n  53   27   67    7   47   18   22    1   22   27   15    8   25   47   47   13 \n 638  639  640  641  642  643  644  645  646  647  648  649  650  651  652  653 \n  36   18   25   11   14   22   40   25   35   35   66   88    2   73   19   14 \n 654  655  656  657  658  659  660  661  662  663  664  665  666  667  668  669 \n   6   16   30   22   20   22    5   17   13   43   16   10   17   25   20   33 \n 670  671  672  673  674  675  676  677  678  679  680  681  682  683  684  685 \n  62   19    9   30   31   13   17    8   19   28   17   10   43   17   13   15 \n 686  687  688  689  690  691  692  693  694  695  696  697  698  699  700  701 \n   7    8   24   18   19   25   40   59   42   30   13   31   25    7   18   20 \n 702  703  704  705  706  707  708  709  710  711  712  713  714  715  716  717 \n  56   34   39   32   64   31   19   23   33   19   35   42   12   15   21    7 \n 718  719  720  721  722  723  724  725  726  727  728  729  730  731  732  733 \n  11   11    5   16   11    9    7   29   32   35    8   30    4   10   18    1 \n 734  735  736  737  738  739  740  741  742  743  744  745  746  747  748  749 \n   5   17   17    8   22   39   15    5   12   28   44    8   21   43    7   17 \n 750  751  752  753  754  755  756  757  758  759  760  761  762  763  764  765 \n   5   24   46   42   10   47    6   19   41   10    8    7   14   21   27    7 \n 766  767  768  769  770  771  772  773  774  775  776  777  779  780  781  782 \n  14    4    6   33    6    4   27   15   23   26   23   22   34    6   10    5 \n 783  784  785  786  787  788  789  790  791  792  793  794  795  796  797  798 \n   6    7   22   41   15   27   34   15    2    2    9   20   41   20    7   20 \n 799  800  801  802  803  804  805  806  807  808  809  810  812  813  814  815 \n  10   12    6   43    7   17   12   11    9   13   22    4    8   14   11   16 \n 816  817  818  820  821  822  823  824  825  826  827  829  830  831  832  833 \n   8   24    5    2    3    8    4    2    3   35   18   14   12    8    5    1 \n 834  835  836  837  839  840  841  842  843  844  845  846  847  848  849  850 \n  24    8   49    6   20    2   15    9   16   13    3   12   17    4   12    8 \n 851  852  854  855  857  858  859  860  861  863  864  865  866  868  869  870 \n   5   21    8    7    4    2    8   10   14   22    9    9   15   21    7   13 \n 872  873  874  875  876  877  878  879  880  881  882  883  884  885  886  887 \n   6   12    1   10    4   24   14   31   51   21    8   51   15    1    3   12 \n 888  889  890  891  892  893  894  895  896  898  899  900  901  902  903  904 \n  14    4   21   33   14    6   32    4   22    7   20   29    7    7   33   12 \n 905  907  908  909  910  911  912  913  914  915  916  917  918  919  920  921 \n  13   10    3    3   15   14    8   10    7   28    2    6   14    5   29   29 \n 922  923  924  925  926  927  928  929  930  931  932  933  934  935  936  937 \n  16   29    2    3   22   15    3    3    7   24    9   19   26   13   12   17 \n 938  939  940  941  942  943  944  945  946  947  948  949  950  951  952  953 \n  12    6   37   39   10   10   10   13   21   15   21   10   23   27    6   21 \n 955  956  958  959  960  961  962  963  964  965  966  967  968  969  970  971 \n   5   16   28   59   15    5   23   26    7   18    4    2    8    1   24   23 \n 972  973  974  975  976  977  978  979  980  981  982  983  984  985  986  987 \n   8   21   21    8   18   13   28   10   14    8    9    9    2   18    2    7 \n 988  989  990  991  992  993  994  995  996  997  999 1000 1001 1002 1004 1005 \n  10   15   11   12    2   11   79    8    6    6    9    1   36    7   15    6 \n1006 1007 1008 1009 1010 1011 1012 1013 1014 1015 1016 1017 1018 1019 1020 1021 \n  13    3   15    6   33   16   14   17   16    9   15   17   16    1   10    1 \n1022 1023 1024 1025 1026 1027 1028 1030 1031 1032 1033 1034 1035 1036 1037 1038 \n  19   54   17    7   13    4   23   16   25   18   15   26    1   18   19   19 \n1039 1040 1041 1042 1043 1044 1045 1048 1051 1052 1053 1054 1055 1056 1057 1058 \n  23    7    4    4   15    9   14   10   14   19   14    5   34   11    5   15 \n1059 1060 1061 1062 1063 1064 1065 1066 1067 1068 1069 1070 1071 1072 1073 1074 \n  18   10   12    8    9    6    7   24   10   19   16    6   10    8   11    3 \n1075 1076 1077 1078 1079 1080 1081 1082 1083 1084 1085 1086 1087 1088 1089 1090 \n  21    8   20    9   12   17    5   12   27   13   12   15   12   19   18    7 \n1091 1092 1094 1095 1096 1097 1098 1099 1100 1101 1102 1104 1105 1106 1107 1108 \n  45    6   11   18   38    2   10   10   13    7    8   12   17    6   16    9 \n1110 1111 1112 1113 1114 1115 1116 1117 1118 1119 1120 1121 1123 1124 1125 1126 \n   2    8   26   21   19   14   12   33    2   32    9   26    1   15    8   13 \n1127 1128 1129 1130 1131 1132 1133 1134 1135 1136 1137 1138 1139 1140 1141 1143 \n  27   33   19   10   16   29   16   19   26   19   35   22    2    1   12    9 \n1144 1145 1146 1147 1148 1149 1150 1151 1152 1153 1154 1155 1156 1157 1158 1159 \n   5    2   11   28   15   12    9   18    6   34    6   13   21   13    7    5 \n1160 1161 1162 1163 1164 1165 1166 1167 1168 1169 1170 1171 1172 1173 1174 1175 \n   7   14    9   23   17   21    9   19   11   19   24    1   25   37    7   14 \n1176 1177 1178 1179 1180 1181 1182 1183 1184 1185 1186 1187 1188 1189 1190 1191 \n   7   10   11    8    8   11    1   24    9    7   30   20   11    1    3   15 \n1192 1193 1194 1195 1196 1197 1198 1199 1200 1201 1202 1203 1204 1205 1206 1207 \n  29   28    2   23   10    7   15   11    8    4   14    5    3   21    3    7 \n1208 1209 1210 1211 1212 1213 1214 1215 1216 1217 1218 1219 1221 1222 1223 1224 \n  14    5    3    7   10    2   13    7    6   30   18   14   28   24   10    7 \n1225 1226 1227 1228 1229 1230 1231 1232 1233 1234 1235 1236 1238 1239 1240 1241 \n  19    2   34    3   14    9   12   11   10   24    2   24    3   15   20    6 \n1242 1243 1244 1245 1246 1247 1248 1249 1251 1252 1253 1254 1255 1256 1257 1258 \n  15   14    7    9    2    8   10    9   16    5   16   22   15   30   25   19 \n1259 1260 1261 1262 1263 1264 1265 1266 1267 1269 1270 1271 1273 1274 1275 1276 \n   3   17   16   29    6   12   17    1   25   35   12    1    8   19    2   10 \n1277 1279 1280 1281 1282 1283 1284 1285 1286 1287 1288 1289 1290 1291 1292 1293 \n  38    5    4   37    3   16    2   15   16   10   25    4   20   11   11    1 \n1295 1296 1297 1298 1299 1300 1302 1303 1304 1306 1307 1308 1309 1310 1311 1313 \n  17   56    5   16    5    9    4   14   22    3   29   22    7   11   12    8 \n1314 1315 1316 1317 1318 1319 1320 1321 1323 1324 1325 1326 1327 1328 1329 1330 \n  77   24    3   31   10   12   27    8   29   16    2   12    8   16   22    8 \n1332 1333 1334 1336 1337 1338 1339 1340 1342 1343 1344 1345 1346 1347 1348 1349 \n   9    1    6   28    7   40    1    6   14    7   31    9    2   56   30   24 \n1350 1351 1352 1353 1354 1355 1356 1358 1359 1360 1361 1362 1363 1364 1365 1368 \n   7    5   15   10    1    5   18    7   19   26   12   48   38   26   13   10 \n1369 1370 1371 1372 1373 1374 1375 1376 1377 1378 1379 1381 1382 1383 1385 1386 \n  13    9   35    4    4    9   15    9   13   14   11   13    1   16   20   13 \n1387 1388 1389 1391 1392 1395 1396 1397 1398 1400 1401 1402 1403 1404 1405 1406 \n   9    5    4   17    9   19   20    1    4   16    4    1    1   21   22   15 \n1407 1408 1409 1410 1411 1412 1413 1416 1417 1418 1421 1424 1425 1426 1427 1428 \n  17   14    3   14    1    3   10    7    9    3    5    3    2   13    8   21 \n1429 1430 1431 1433 1434 1435 1436 1437 1438 1439 1441 1443 1444 1445 1446 1447 \n  13   23    4    6    4    2   11    2    3    1    5    1    2    2   12    4 \n1448 1450 1451 1452 1453 1454 1455 1456 1458 1459 1460 1462 1463 1465 1466 1467 \n   8    4    2    4   11   13    3    2    6    5    2    1   10   17   15   24 \n1468 1469 1470 1471 1473 1474 1475 1477 1478 1479 1480 1481 1482 1483 1484 1485 \n   3    5    2    7    1   10   14    3    6    2    6    8    1    2    2    2 \n1487 1489 1490 1492 1493 1494 1495 1496 1497 1499 1501 1502 1504 1505 1507 1510 \n   4   18    1    2    7    1    4    1    9   14   12    1    7    7   23    4 \n1513 1514 1515 1516 1517 1518 1523 1524 1525 1526 1528 1531 1532 1535 1536 1538 \n  11   13    8    5   14    2    1    3    1   13    4    9   18    1    3    1 \n1539 1540 1543 1544 1545 1548 1549 1551 1552 1554 1555 1556 1558 1559 1560 1565 \n   3   19    2    3    9    7    6   16    7   15   24   28    3    1   14    3 \n1566 1567 1568 1571 1576 1580 1582 1583 1585 1586 1587 1589 1590 1591 1593 1595 \n  10    6    3    7    5    5   13    4    9    1    5    3    5   12    9    2 \n1597 1599 1600 1602 1603 1604 1605 1606 1607 1608 1609 1610 1612 1615 1617 1618 \n   6    3    3    6    3   13    4   11    3    3   11   14   21   13   15    2 \n1619 1620 1624 1626 1630 1632 1634 1636 1637 1643 1647 1648 1649 1650 1652 1656 \n   2   20    8   11   16    3   18   20   20    1   13    4   10    8    5    8 \n1658 1659 1660 1662 1663 1667 1673 1674 1675 1677 1681 1684 1686 1687 1690 1697 \n   1   12    1    2    8   18    4    1    1    5    4   10    1    2    8    4 \n1702 1703 1705 1706 1707 1710 1715 1717 1718 1720 1721 1722 1723 1725 1727 1728 \n  13    6   27    8    1   11    4    6    9    8    1    2   10    2    2    5 \n1729 1731 1732 1734 1735 1737 1743 1744 1745 1746 1747 1748 1751 1754 1757 1758 \n   4    2    1    3    1    4    4    6   13    1    2    3    7    8    3   10 \n1759 1761 1762 1763 1764 1765 1766 1767 1768 1769 1771 1772 1773 1778 1779 1781 \n   9    5    1   11    8   21    2    3    6    3    9    2    6   24    1   11 \n1786 1787 1788 1789 1790 1791 1792 1793 1794 1795 1796 1799 1800 1801 1803 1804 \n   3    5    6    7    4    4    1    3   16    1   10    4    8    7    2    3 \n1805 1809 1811 1812 1817 1819 1820 1824 1826 1827 1829 1830 1831 1834 1836 1838 \n   5    2   16    3    1    8   11    4    1    1   10   18    1   15    9    3 \n1839 1840 1841 1842 1843 1845 1846 1847 1848 1849 1850 1851 1855 1856 1857 1858 \n   9    5    3    6    9    6   13    8   15    1    5   11    6    9    2   11 \n1859 1860 1862 1863 1864 1865 1867 1868 1869 1870 1871 1872 1873 1874 1875 1876 \n   2    8   28   17    2    5    3    6    5    5    4    3    3    3    4    5 \n1878 1881 1887 1889 1890 1892 1894 1896 1897 1899 1900 1905 1907 1908 1911 1912 \n  23   10    4    1   18    1    4    7   22    3    4   19    1   10    7    6 \n1913 1914 1915 1916 1917 1919 1922 1923 1924 1926 1929 1930 1932 1934 1935 1936 \n  12    7   14    1    2   10   13    7    7    2    2    9    2   10   66    9 \n1940 1941 1945 1953 1955 1958 1959 1960 1962 1963 1965 1972 1973 1976 1979 1980 \n   6   12   11    4   18    4    5    5    7   12    6   11   18    7    5    6 \n1982 1984 1986 1988 1989 1994 1995 2002 2003 2006 2007 2017 2025 2026 2029 2031 \n  13    7    6    6    2   11    2    3   37   11    8   17    2    6   20   10 \n2032 2033 2034 2035 2037 2039 2040 2042 2044 2045 2046 2047 2048 2049 2051 2054 \n   3   11    5    6    4   14   26    1    2    4    3   17   12    1    7    1 \n2055 2057 2063 2065 2066 2067 2068 2070 2071 2074 2075 2076 2077 2078 2080 2083 \n   2   14    5   14    4    6   38   11    9    4    4   13    1   20    4   23 \n2084 2085 2088 2089 2091 2092 2093 2094 2098 2100 2102 2103 2106 2108 2109 2110 \n  11   34    2   13    6   17    8   10    4    7    6   19    3    1    7   18 \n2111 2112 2115 2116 2118 2120 2121 2122 2123 2125 2126 2128 2131 2132 2133 2135 \n   1    9   11   44    8   14   28   27    3   17   11   21   12    3   11    5 \n2137 2139 2140 2141 2145 2146 2147 2148 2149 2150 2152 2153 2155 2157 2158 2160 \n  19   14    3   19   17    1    1   21    3    3    8    8    7   36    4   15 \n2162 2163 2164 2165 2167 2171 2172 2175 2176 2179 2180 2181 2186 2189 2191 2193 \n  17    4    8    4   14    9   12   18    6    7    2    3   14    3    6   10 \n2194 2195 2197 2198 2199 2203 2205 2206 2209 2212 2213 2215 2217 2220 2222 2224 \n  48   18    6    1    3    5    6    8   28   11    8    5   17    6    2    3 \n2227 2228 2229 2230 2234 2238 2242 2247 2249 2251 2252 2253 2254 2256 2258 2262 \n   7    4   12   11    3    6    3    2   21    3    1   13    2   28    5    2 \n2264 2266 2267 2271 2272 2273 2275 2276 2277 2279 2283 2287 2292 2298 2299 2301 \n   2    9    1    3    3    6    2    4   16    2    6   16    2    1   50    2 \n2302 2303 2305 2306 2307 2310 2315 2317 2318 2324 2328 2330 2332 2335 2337 2338 \n   8    5    6    6    4    3    3    1    2    6    1    3    3    3   11    2 \n2346 2349 2350 2351 2352 2354 2355 2362 2363 2366 2369 2370 2373 2374 2379 2381 \n  10    4    5    4    7   11   10    2   10   22    3    1    2    7    2    2 \n2385 2389 2391 2393 2395 2396 2406 2416 2417 2421 2422 2423 2424 2426 2427 2429 \n   1   20    6    8   11    7    3    1   11    2    1   11    6    5    2    1 \n2430 2434 2436 2438 2440 2444 2446 2447 2455 2456 2458 2460 2462 2463 2468 2473 \n   3   10    3   16    5    8    3    2    6    5   14    4   28    2    4    8 \n2474 2483 2491 2495 2496 2501 2510 2515 2521 2526 2531 2534 2538 2542 2547 2548 \n  13   14    8    3    4   20    7    5   15    3    1    1    9   10    2    4 \n2552 2561 2562 2567 2569 2576 2585 2587 2593 2597 2598 2601 2606 2609 2611 2612 \n   8    2    1   15    7    7    1    9    1    9   20    7    5   11   12    6 \n2617 2632 2647 2651 2653 2654 2655 2659 2665 2672 2674 2675 2678 2682 2688 2689 \n  26    5    2    3    4    1    7   11    8   18    2    7    2   15   15    3 \n2694 2700 2703 2710 2717 2722 2727 2730 2733 2734 2739 2744 2750 2751 2754 2755 \n  16   20    4   13    6   25    3    3    2   20    2    8   14    4    6    9 \n2762 2764 2765 2774 2782 2783 2788 2789 2790 2791 2792 2793 2800 2801 2803 2804 \n   4    1   14   10   15    5    8   14    9   13   13    2    4    8   10    3 \n2805 2811 2822 2827 2829 2830 2833 2834 2840 2841 2842 2845 2847 2852 2856 2859 \n  11    4    9   10   10    4    3    1    4   10    3    1    4   18   10    5 \n2864 2866 2870 2872 2877 2881 2886 2898 2900 2914 2918 2925 2926 2927 2930 2932 \n   5    2   13    2    6   19    6    7    7    1    6   12    3   13    2    5 \n2936 2942 2943 2950 2953 2955 2959 2967 2968 2974 2975 2976 2982 2986 2987 2994 \n   5   24    1    4    2    8    9    5    5    5    6    2    3   17    4   10 \n2996 3002 3007 3008 3012 3017 3026 3031 3037 3040 3054 3058 3067 3068 3069 3071 \n   2   18   15    8    2    3    7    4    2    2    4    3    4    5    5    3 \n3074 3076 3086 3095 3105 3111 3115 3135 3138 3139 3142 3144 3146 3155 3156 3168 \n   3    2    2    5    3    9    1    3    7    2    8    6    4    2    2    6 \n3175 3176 3178 3182 3185 3187 3189 3194 3196 3203 3212 3221 3229 3241 3244 3245 \n   3    2    1    8    2    3    9    4    3    3    1    4   10    4   12    3 \n3252 3255 3264 3265 3267 3278 3285 3291 3307 3310 3313 3317 3322 3328 3331 3333 \n   3   10   10   13    4    3    6    2    4    7    2    6    1    2    1    2 \n3338 3343 3357 3405 3424 3441 3452 3473 3486 \n   6    2    1    1    6    4    2    1    1 \n6 least connected regions:\n5233 5270 5273 14652 22145 22146 with 5 links\n1 most connected region:\n6060 with 3486 links\n\n\n\n\n5.8.2 Convert the Output Neighbours Lists into Spatial Weights\n\nnb_lw <- nb2listw(nb, style = 'W', zero.policy = TRUE)\nsummary(nb_lw)\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 25502 \nNumber of nonzero links: 26961048 \nPercentage nonzero weights: 4.145609 \nAverage number of links: 1057.213 \nLink number distribution:\n\n   5   28   33   40   85   88   91   93  111  112  135  150  153  155  156  162 \n   6   29   25    9    3   84   11    5    1    3    3  129   19    3    1    1 \n 164  167  168  172  179  181  184  185  193  195  197  198  199  200  201  203 \n   1    2    5    3    5    5    1    1   10    3   10    6   20    2   48    5 \n 204  205  206  208  210  211  212  214  215  217  218  219  220  221  222  223 \n   5   91   15   21    1    3    1   13   13    8    5    2   29    8    3   14 \n 224  226  227  228  230  232  234  235  236  238  239  240  241  242  243  244 \n   6    5   41   15    2   18   19    1   17    6    6    6   17   18    8    4 \n 245  246  247  248  249  250  251  252  254  256  257  258  259  260  262  263 \n  39   10   26   35    7    2    9   14   26    7   25    3    2    2   28   24 \n 264  265  266  267  268  269  270  271  272  273  274  275  276  277  278  279 \n  36   13   16   10   17   22    2   12   21   17    9    5   22   14    9   24 \n 280  281  282  283  284  285  286  287  289  290  291  292  293  294  295  296 \n  17    6   36   13   50    3   31   21   16   10    9   33   11   11    8   12 \n 297  298  299  300  301  302  306  307  308  310  311  312  313  314  315  316 \n  40   57   29    6   26   11   14    5   18    4    9    9    8    7   32   10 \n 317  318  319  320  321  322  323  324  325  326  327  328  329  330  331  332 \n  46   14    6   15   13    9   15   19   13    7   12   50    5    6   32    7 \n 333  334  335  336  337  338  339  340  341  342  343  344  345  346  347  348 \n   8   43    7   15    7   14    6   12   11   20   15    6    5   25   13    9 \n 349  350  351  352  353  354  355  356  357  358  359  360  361  362  363  364 \n  13   14   16    3   19    8    6   16    6   14    7   17    7   27    9    2 \n 365  366  367  368  369  370  371  372  373  374  375  376  377  378  379  380 \n   2   18   31   13    9   39   23   13    8   23   26   10   16    5    6   16 \n 382  383  384  385  386  387  388  389  390  391  392  393  394  395  396  397 \n   8    9    2   13   14   11   18   32   32    7   18   12    8   17   33    4 \n 398  399  400  401  402  403  404  405  406  407  408  409  410  411  412  413 \n  16   12    4   39   19    6   25   11   19   33   19   58   16   27    4    7 \n 414  415  416  417  418  419  420  421  422  423  424  425  426  427  428  429 \n   4    5   30   19   34   13   10    9   29   16   14   10   13   23    6   30 \n 430  431  432  433  434  435  436  437  438  439  440  441  442  443  444  445 \n  18   18   20    9   13   15   18   10   31    8    9    6   16   25   17   29 \n 446  447  448  449  450  451  452  453  454  455  456  457  458  459  460  461 \n  20   17   28   16    7   28    9   43   20   40   27   20   22    7   45   24 \n 462  463  464  465  466  467  468  469  470  471  472  473  474  475  476  477 \n  27   20   51   13   19    3    8   16   10   16   11   17   52   20   65   14 \n 478  479  480  481  482  483  484  485  486  487  488  489  490  491  492  493 \n  14   17   20   21   70   31  107   22   24   15   30   14   11   16   30    9 \n 494  495  496  497  498  499  500  501  502  503  504  505  506  507  508  509 \n  27   12    4   20   24   18   18   23   19   22   10   15   16    3    9   15 \n 510  511  512  513  514  515  516  517  518  519  520  521  522  523  524  525 \n   3   10   15   29    8    6   26   12    6    7   54   21   15    7   16   16 \n 526  527  528  529  530  531  532  533  534  535  536  537  538  539  540  541 \n  10    9   23   39   15   29   47    8   14   20   16   22    9   19   35   48 \n 542  543  544  545  546  547  548  549  550  551  552  553  554  555  556  557 \n  45   27    6   21   14   32   24   15   15    8   80   13    8   40   13    8 \n 558  559  560  561  562  563  564  565  566  567  568  569  570  571  572  573 \n  32   27   24   18   16    5   25   54   11   27    8   48    6   34   18   10 \n 574  575  576  577  578  579  580  581  582  583  584  585  586  587  588  589 \n  36   14   31   10   16   40   22   14   48   39   67   20   24   24   25   18 \n 590  591  592  593  594  595  596  597  598  599  600  601  602  603  604  605 \n  29   22   22   18   23    5   32   13   18   22   27   21    7   38   12   22 \n 606  607  608  609  610  611  612  613  614  615  616  617  618  619  620  621 \n  22   23   49   35   27   10   13   22   41    7   20   18   12   18   31   80 \n 622  623  624  625  626  627  628  629  630  631  632  633  634  635  636  637 \n  53   27   67    7   47   18   22    1   22   27   15    8   25   47   47   13 \n 638  639  640  641  642  643  644  645  646  647  648  649  650  651  652  653 \n  36   18   25   11   14   22   40   25   35   35   66   88    2   73   19   14 \n 654  655  656  657  658  659  660  661  662  663  664  665  666  667  668  669 \n   6   16   30   22   20   22    5   17   13   43   16   10   17   25   20   33 \n 670  671  672  673  674  675  676  677  678  679  680  681  682  683  684  685 \n  62   19    9   30   31   13   17    8   19   28   17   10   43   17   13   15 \n 686  687  688  689  690  691  692  693  694  695  696  697  698  699  700  701 \n   7    8   24   18   19   25   40   59   42   30   13   31   25    7   18   20 \n 702  703  704  705  706  707  708  709  710  711  712  713  714  715  716  717 \n  56   34   39   32   64   31   19   23   33   19   35   42   12   15   21    7 \n 718  719  720  721  722  723  724  725  726  727  728  729  730  731  732  733 \n  11   11    5   16   11    9    7   29   32   35    8   30    4   10   18    1 \n 734  735  736  737  738  739  740  741  742  743  744  745  746  747  748  749 \n   5   17   17    8   22   39   15    5   12   28   44    8   21   43    7   17 \n 750  751  752  753  754  755  756  757  758  759  760  761  762  763  764  765 \n   5   24   46   42   10   47    6   19   41   10    8    7   14   21   27    7 \n 766  767  768  769  770  771  772  773  774  775  776  777  779  780  781  782 \n  14    4    6   33    6    4   27   15   23   26   23   22   34    6   10    5 \n 783  784  785  786  787  788  789  790  791  792  793  794  795  796  797  798 \n   6    7   22   41   15   27   34   15    2    2    9   20   41   20    7   20 \n 799  800  801  802  803  804  805  806  807  808  809  810  812  813  814  815 \n  10   12    6   43    7   17   12   11    9   13   22    4    8   14   11   16 \n 816  817  818  820  821  822  823  824  825  826  827  829  830  831  832  833 \n   8   24    5    2    3    8    4    2    3   35   18   14   12    8    5    1 \n 834  835  836  837  839  840  841  842  843  844  845  846  847  848  849  850 \n  24    8   49    6   20    2   15    9   16   13    3   12   17    4   12    8 \n 851  852  854  855  857  858  859  860  861  863  864  865  866  868  869  870 \n   5   21    8    7    4    2    8   10   14   22    9    9   15   21    7   13 \n 872  873  874  875  876  877  878  879  880  881  882  883  884  885  886  887 \n   6   12    1   10    4   24   14   31   51   21    8   51   15    1    3   12 \n 888  889  890  891  892  893  894  895  896  898  899  900  901  902  903  904 \n  14    4   21   33   14    6   32    4   22    7   20   29    7    7   33   12 \n 905  907  908  909  910  911  912  913  914  915  916  917  918  919  920  921 \n  13   10    3    3   15   14    8   10    7   28    2    6   14    5   29   29 \n 922  923  924  925  926  927  928  929  930  931  932  933  934  935  936  937 \n  16   29    2    3   22   15    3    3    7   24    9   19   26   13   12   17 \n 938  939  940  941  942  943  944  945  946  947  948  949  950  951  952  953 \n  12    6   37   39   10   10   10   13   21   15   21   10   23   27    6   21 \n 955  956  958  959  960  961  962  963  964  965  966  967  968  969  970  971 \n   5   16   28   59   15    5   23   26    7   18    4    2    8    1   24   23 \n 972  973  974  975  976  977  978  979  980  981  982  983  984  985  986  987 \n   8   21   21    8   18   13   28   10   14    8    9    9    2   18    2    7 \n 988  989  990  991  992  993  994  995  996  997  999 1000 1001 1002 1004 1005 \n  10   15   11   12    2   11   79    8    6    6    9    1   36    7   15    6 \n1006 1007 1008 1009 1010 1011 1012 1013 1014 1015 1016 1017 1018 1019 1020 1021 \n  13    3   15    6   33   16   14   17   16    9   15   17   16    1   10    1 \n1022 1023 1024 1025 1026 1027 1028 1030 1031 1032 1033 1034 1035 1036 1037 1038 \n  19   54   17    7   13    4   23   16   25   18   15   26    1   18   19   19 \n1039 1040 1041 1042 1043 1044 1045 1048 1051 1052 1053 1054 1055 1056 1057 1058 \n  23    7    4    4   15    9   14   10   14   19   14    5   34   11    5   15 \n1059 1060 1061 1062 1063 1064 1065 1066 1067 1068 1069 1070 1071 1072 1073 1074 \n  18   10   12    8    9    6    7   24   10   19   16    6   10    8   11    3 \n1075 1076 1077 1078 1079 1080 1081 1082 1083 1084 1085 1086 1087 1088 1089 1090 \n  21    8   20    9   12   17    5   12   27   13   12   15   12   19   18    7 \n1091 1092 1094 1095 1096 1097 1098 1099 1100 1101 1102 1104 1105 1106 1107 1108 \n  45    6   11   18   38    2   10   10   13    7    8   12   17    6   16    9 \n1110 1111 1112 1113 1114 1115 1116 1117 1118 1119 1120 1121 1123 1124 1125 1126 \n   2    8   26   21   19   14   12   33    2   32    9   26    1   15    8   13 \n1127 1128 1129 1130 1131 1132 1133 1134 1135 1136 1137 1138 1139 1140 1141 1143 \n  27   33   19   10   16   29   16   19   26   19   35   22    2    1   12    9 \n1144 1145 1146 1147 1148 1149 1150 1151 1152 1153 1154 1155 1156 1157 1158 1159 \n   5    2   11   28   15   12    9   18    6   34    6   13   21   13    7    5 \n1160 1161 1162 1163 1164 1165 1166 1167 1168 1169 1170 1171 1172 1173 1174 1175 \n   7   14    9   23   17   21    9   19   11   19   24    1   25   37    7   14 \n1176 1177 1178 1179 1180 1181 1182 1183 1184 1185 1186 1187 1188 1189 1190 1191 \n   7   10   11    8    8   11    1   24    9    7   30   20   11    1    3   15 \n1192 1193 1194 1195 1196 1197 1198 1199 1200 1201 1202 1203 1204 1205 1206 1207 \n  29   28    2   23   10    7   15   11    8    4   14    5    3   21    3    7 \n1208 1209 1210 1211 1212 1213 1214 1215 1216 1217 1218 1219 1221 1222 1223 1224 \n  14    5    3    7   10    2   13    7    6   30   18   14   28   24   10    7 \n1225 1226 1227 1228 1229 1230 1231 1232 1233 1234 1235 1236 1238 1239 1240 1241 \n  19    2   34    3   14    9   12   11   10   24    2   24    3   15   20    6 \n1242 1243 1244 1245 1246 1247 1248 1249 1251 1252 1253 1254 1255 1256 1257 1258 \n  15   14    7    9    2    8   10    9   16    5   16   22   15   30   25   19 \n1259 1260 1261 1262 1263 1264 1265 1266 1267 1269 1270 1271 1273 1274 1275 1276 \n   3   17   16   29    6   12   17    1   25   35   12    1    8   19    2   10 \n1277 1279 1280 1281 1282 1283 1284 1285 1286 1287 1288 1289 1290 1291 1292 1293 \n  38    5    4   37    3   16    2   15   16   10   25    4   20   11   11    1 \n1295 1296 1297 1298 1299 1300 1302 1303 1304 1306 1307 1308 1309 1310 1311 1313 \n  17   56    5   16    5    9    4   14   22    3   29   22    7   11   12    8 \n1314 1315 1316 1317 1318 1319 1320 1321 1323 1324 1325 1326 1327 1328 1329 1330 \n  77   24    3   31   10   12   27    8   29   16    2   12    8   16   22    8 \n1332 1333 1334 1336 1337 1338 1339 1340 1342 1343 1344 1345 1346 1347 1348 1349 \n   9    1    6   28    7   40    1    6   14    7   31    9    2   56   30   24 \n1350 1351 1352 1353 1354 1355 1356 1358 1359 1360 1361 1362 1363 1364 1365 1368 \n   7    5   15   10    1    5   18    7   19   26   12   48   38   26   13   10 \n1369 1370 1371 1372 1373 1374 1375 1376 1377 1378 1379 1381 1382 1383 1385 1386 \n  13    9   35    4    4    9   15    9   13   14   11   13    1   16   20   13 \n1387 1388 1389 1391 1392 1395 1396 1397 1398 1400 1401 1402 1403 1404 1405 1406 \n   9    5    4   17    9   19   20    1    4   16    4    1    1   21   22   15 \n1407 1408 1409 1410 1411 1412 1413 1416 1417 1418 1421 1424 1425 1426 1427 1428 \n  17   14    3   14    1    3   10    7    9    3    5    3    2   13    8   21 \n1429 1430 1431 1433 1434 1435 1436 1437 1438 1439 1441 1443 1444 1445 1446 1447 \n  13   23    4    6    4    2   11    2    3    1    5    1    2    2   12    4 \n1448 1450 1451 1452 1453 1454 1455 1456 1458 1459 1460 1462 1463 1465 1466 1467 \n   8    4    2    4   11   13    3    2    6    5    2    1   10   17   15   24 \n1468 1469 1470 1471 1473 1474 1475 1477 1478 1479 1480 1481 1482 1483 1484 1485 \n   3    5    2    7    1   10   14    3    6    2    6    8    1    2    2    2 \n1487 1489 1490 1492 1493 1494 1495 1496 1497 1499 1501 1502 1504 1505 1507 1510 \n   4   18    1    2    7    1    4    1    9   14   12    1    7    7   23    4 \n1513 1514 1515 1516 1517 1518 1523 1524 1525 1526 1528 1531 1532 1535 1536 1538 \n  11   13    8    5   14    2    1    3    1   13    4    9   18    1    3    1 \n1539 1540 1543 1544 1545 1548 1549 1551 1552 1554 1555 1556 1558 1559 1560 1565 \n   3   19    2    3    9    7    6   16    7   15   24   28    3    1   14    3 \n1566 1567 1568 1571 1576 1580 1582 1583 1585 1586 1587 1589 1590 1591 1593 1595 \n  10    6    3    7    5    5   13    4    9    1    5    3    5   12    9    2 \n1597 1599 1600 1602 1603 1604 1605 1606 1607 1608 1609 1610 1612 1615 1617 1618 \n   6    3    3    6    3   13    4   11    3    3   11   14   21   13   15    2 \n1619 1620 1624 1626 1630 1632 1634 1636 1637 1643 1647 1648 1649 1650 1652 1656 \n   2   20    8   11   16    3   18   20   20    1   13    4   10    8    5    8 \n1658 1659 1660 1662 1663 1667 1673 1674 1675 1677 1681 1684 1686 1687 1690 1697 \n   1   12    1    2    8   18    4    1    1    5    4   10    1    2    8    4 \n1702 1703 1705 1706 1707 1710 1715 1717 1718 1720 1721 1722 1723 1725 1727 1728 \n  13    6   27    8    1   11    4    6    9    8    1    2   10    2    2    5 \n1729 1731 1732 1734 1735 1737 1743 1744 1745 1746 1747 1748 1751 1754 1757 1758 \n   4    2    1    3    1    4    4    6   13    1    2    3    7    8    3   10 \n1759 1761 1762 1763 1764 1765 1766 1767 1768 1769 1771 1772 1773 1778 1779 1781 \n   9    5    1   11    8   21    2    3    6    3    9    2    6   24    1   11 \n1786 1787 1788 1789 1790 1791 1792 1793 1794 1795 1796 1799 1800 1801 1803 1804 \n   3    5    6    7    4    4    1    3   16    1   10    4    8    7    2    3 \n1805 1809 1811 1812 1817 1819 1820 1824 1826 1827 1829 1830 1831 1834 1836 1838 \n   5    2   16    3    1    8   11    4    1    1   10   18    1   15    9    3 \n1839 1840 1841 1842 1843 1845 1846 1847 1848 1849 1850 1851 1855 1856 1857 1858 \n   9    5    3    6    9    6   13    8   15    1    5   11    6    9    2   11 \n1859 1860 1862 1863 1864 1865 1867 1868 1869 1870 1871 1872 1873 1874 1875 1876 \n   2    8   28   17    2    5    3    6    5    5    4    3    3    3    4    5 \n1878 1881 1887 1889 1890 1892 1894 1896 1897 1899 1900 1905 1907 1908 1911 1912 \n  23   10    4    1   18    1    4    7   22    3    4   19    1   10    7    6 \n1913 1914 1915 1916 1917 1919 1922 1923 1924 1926 1929 1930 1932 1934 1935 1936 \n  12    7   14    1    2   10   13    7    7    2    2    9    2   10   66    9 \n1940 1941 1945 1953 1955 1958 1959 1960 1962 1963 1965 1972 1973 1976 1979 1980 \n   6   12   11    4   18    4    5    5    7   12    6   11   18    7    5    6 \n1982 1984 1986 1988 1989 1994 1995 2002 2003 2006 2007 2017 2025 2026 2029 2031 \n  13    7    6    6    2   11    2    3   37   11    8   17    2    6   20   10 \n2032 2033 2034 2035 2037 2039 2040 2042 2044 2045 2046 2047 2048 2049 2051 2054 \n   3   11    5    6    4   14   26    1    2    4    3   17   12    1    7    1 \n2055 2057 2063 2065 2066 2067 2068 2070 2071 2074 2075 2076 2077 2078 2080 2083 \n   2   14    5   14    4    6   38   11    9    4    4   13    1   20    4   23 \n2084 2085 2088 2089 2091 2092 2093 2094 2098 2100 2102 2103 2106 2108 2109 2110 \n  11   34    2   13    6   17    8   10    4    7    6   19    3    1    7   18 \n2111 2112 2115 2116 2118 2120 2121 2122 2123 2125 2126 2128 2131 2132 2133 2135 \n   1    9   11   44    8   14   28   27    3   17   11   21   12    3   11    5 \n2137 2139 2140 2141 2145 2146 2147 2148 2149 2150 2152 2153 2155 2157 2158 2160 \n  19   14    3   19   17    1    1   21    3    3    8    8    7   36    4   15 \n2162 2163 2164 2165 2167 2171 2172 2175 2176 2179 2180 2181 2186 2189 2191 2193 \n  17    4    8    4   14    9   12   18    6    7    2    3   14    3    6   10 \n2194 2195 2197 2198 2199 2203 2205 2206 2209 2212 2213 2215 2217 2220 2222 2224 \n  48   18    6    1    3    5    6    8   28   11    8    5   17    6    2    3 \n2227 2228 2229 2230 2234 2238 2242 2247 2249 2251 2252 2253 2254 2256 2258 2262 \n   7    4   12   11    3    6    3    2   21    3    1   13    2   28    5    2 \n2264 2266 2267 2271 2272 2273 2275 2276 2277 2279 2283 2287 2292 2298 2299 2301 \n   2    9    1    3    3    6    2    4   16    2    6   16    2    1   50    2 \n2302 2303 2305 2306 2307 2310 2315 2317 2318 2324 2328 2330 2332 2335 2337 2338 \n   8    5    6    6    4    3    3    1    2    6    1    3    3    3   11    2 \n2346 2349 2350 2351 2352 2354 2355 2362 2363 2366 2369 2370 2373 2374 2379 2381 \n  10    4    5    4    7   11   10    2   10   22    3    1    2    7    2    2 \n2385 2389 2391 2393 2395 2396 2406 2416 2417 2421 2422 2423 2424 2426 2427 2429 \n   1   20    6    8   11    7    3    1   11    2    1   11    6    5    2    1 \n2430 2434 2436 2438 2440 2444 2446 2447 2455 2456 2458 2460 2462 2463 2468 2473 \n   3   10    3   16    5    8    3    2    6    5   14    4   28    2    4    8 \n2474 2483 2491 2495 2496 2501 2510 2515 2521 2526 2531 2534 2538 2542 2547 2548 \n  13   14    8    3    4   20    7    5   15    3    1    1    9   10    2    4 \n2552 2561 2562 2567 2569 2576 2585 2587 2593 2597 2598 2601 2606 2609 2611 2612 \n   8    2    1   15    7    7    1    9    1    9   20    7    5   11   12    6 \n2617 2632 2647 2651 2653 2654 2655 2659 2665 2672 2674 2675 2678 2682 2688 2689 \n  26    5    2    3    4    1    7   11    8   18    2    7    2   15   15    3 \n2694 2700 2703 2710 2717 2722 2727 2730 2733 2734 2739 2744 2750 2751 2754 2755 \n  16   20    4   13    6   25    3    3    2   20    2    8   14    4    6    9 \n2762 2764 2765 2774 2782 2783 2788 2789 2790 2791 2792 2793 2800 2801 2803 2804 \n   4    1   14   10   15    5    8   14    9   13   13    2    4    8   10    3 \n2805 2811 2822 2827 2829 2830 2833 2834 2840 2841 2842 2845 2847 2852 2856 2859 \n  11    4    9   10   10    4    3    1    4   10    3    1    4   18   10    5 \n2864 2866 2870 2872 2877 2881 2886 2898 2900 2914 2918 2925 2926 2927 2930 2932 \n   5    2   13    2    6   19    6    7    7    1    6   12    3   13    2    5 \n2936 2942 2943 2950 2953 2955 2959 2967 2968 2974 2975 2976 2982 2986 2987 2994 \n   5   24    1    4    2    8    9    5    5    5    6    2    3   17    4   10 \n2996 3002 3007 3008 3012 3017 3026 3031 3037 3040 3054 3058 3067 3068 3069 3071 \n   2   18   15    8    2    3    7    4    2    2    4    3    4    5    5    3 \n3074 3076 3086 3095 3105 3111 3115 3135 3138 3139 3142 3144 3146 3155 3156 3168 \n   3    2    2    5    3    9    1    3    7    2    8    6    4    2    2    6 \n3175 3176 3178 3182 3185 3187 3189 3194 3196 3203 3212 3221 3229 3241 3244 3245 \n   3    2    1    8    2    3    9    4    3    3    1    4   10    4   12    3 \n3252 3255 3264 3265 3267 3278 3285 3291 3307 3310 3313 3317 3322 3328 3331 3333 \n   3   10   10   13    4    3    6    2    4    7    2    6    1    2    1    2 \n3338 3343 3357 3405 3424 3441 3452 3473 3486 \n   6    2    1    1    6    4    2    1    1 \n6 least connected regions:\n5233 5270 5273 14652 22145 22146 with 5 links\n1 most connected region:\n6060 with 3486 links\n\nWeights style: W \nWeights constants summary:\n      n        nn    S0       S1       S2\nW 25502 650352004 25502 79.06603 102796.2\n\n\n\n\n5.8.3 Perform Moran’s I Test for Residual Spatial Autocorrelation\n\nlm.morantest(resale.mlr, nb_lw)\n\n\n    Global Moran I for regression residuals\n\ndata:  \nmodel: lm(formula = PRICE ~ STOREY + AREA_SQM + PROX_BUS + PROX_CBD +\nPROX_CHILDCARE + PROX_ELDERCARE + PROX_GOODPRIMARY + PROX_HAWKER +\nPROX_MRT + PROX_PARK + PROX_SHOPPING + PROX_SUPERMARKET +\nWITHIN_1KM_PRIMARY + WITHIN_350M_BUS + WITHIN_350M_CHILDCARE +\nWITHIN_350M_KINDERGARTEN + LEASE_MTHS, data = resale_main_nogeo)\nweights: nb_lw\n\nMoran I statistic standard deviate = 895.35, p-value < 2.2e-16\nalternative hypothesis: greater\nsample estimates:\nObserved Moran I      Expectation         Variance \n    2.778070e-01    -2.755883e-04     9.646277e-08 \n\n\n\n\n\n\n\n\nAnalysis:\n\n\n\nThe Global Moran’s I Test for regression residuals shows that the p-value is less than the alpha value of 0.05. Hence, we will reject the null hypothesis that the residuals are randomly distributed.\nSince the Observed Global Moran I = 0.277807 which is greater than 0, we can infer that the residuals resemble cluster distribution."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#preparing-data",
    "href": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#preparing-data",
    "title": "Take-home Exercise 3: Predicting HDB Public Housing Resale Pricies using Geographically Weighted Methods",
    "section": "6.1 Preparing Data",
    "text": "6.1 Preparing Data\n\n6.1.1 Read resale_main.rds File\n\nmdata <- read_rds(\"data/model/resale_main.rds\")\n\n\nglimpse(mdata)\n\nRows: 25,502\nColumns: 28\n$ month                    <chr> \"2021-01\", \"2021-01\", \"2021-01\", \"2021-01\", \"…\n$ town                     <chr> \"ANG MO KIO\", \"ANG MO KIO\", \"ANG MO KIO\", \"AN…\n$ address                  <chr> \"547 ANG MO KIO AVE 10\", \"414 ANG MO KIO AVE …\n$ block                    <chr> \"547\", \"414\", \"509\", \"467\", \"571\", \"134\", \"20…\n$ street_name              <chr> \"ANG MO KIO AVE 10\", \"ANG MO KIO AVE 10\", \"AN…\n$ flat_type                <chr> \"4 ROOM\", \"4 ROOM\", \"4 ROOM\", \"4 ROOM\", \"4 RO…\n$ STOREY                   <chr> \"04 TO 06\", \"01 TO 03\", \"01 TO 03\", \"07 TO 09…\n$ AREA_SQM                 <dbl> 92, 92, 91, 92, 92, 98, 92, 92, 92, 92, 92, 1…\n$ flat_model               <chr> \"New Generation\", \"New Generation\", \"New Gene…\n$ lease_commence_date      <dbl> 1981, 1979, 1980, 1979, 1979, 1978, 1977, 197…\n$ LEASE_MTHS               <dbl> 708, 693, 702, 695, 689, 681, 661, 682, 692, …\n$ PRICE                    <dbl> 370000, 375000, 380000, 385000, 410000, 41000…\n$ postal                   <chr> \"560547\", \"560414\", \"560509\", \"560467\", \"5605…\n$ geometry                 <POINT [m]> POINT (30770.07 39578.64), POINT (30292…\n$ PROX_CBD                 <dbl> 9.564575, 8.401690, 9.516492, 8.580908, 9.084…\n$ PROX_BUS                 <dbl> 0.16157609, 0.16740841, 0.07424143, 0.0887911…\n$ PROX_CHILDCARE           <dbl> 2.493662e-01, 6.715056e-02, 1.385583e-01, 1.4…\n$ PROX_ELDERCARE           <dbl> 1.08567795, 0.15039052, 0.72242472, 0.0981628…\n$ PROX_HAWKER              <dbl> 0.4442515, 0.2050009, 0.4495734, 0.3190679, 0…\n$ PROX_GOODPRIMARY         <dbl> 3.182527, 2.354024, 2.414729, 2.699653, 2.648…\n$ PROX_PARK                <dbl> 0.8291527, 0.7847864, 0.3796058, 0.9242129, 0…\n$ PROX_SUPERMARKET         <dbl> 0.4184204, 0.1946009, 0.4435109, 0.4269715, 0…\n$ PROX_SHOPPING            <dbl> 1.1817959, 0.8444986, 0.2966736, 0.9304149, 0…\n$ PROX_MRT                 <dbl> 1.0731215, 0.8245176, 0.4544926, 0.9503956, 0…\n$ WITHIN_350M_KINDERGARTEN <dbl> 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, …\n$ WITHIN_350M_CHILDCARE    <dbl> 2, 3, 3, 3, 3, 2, 6, 3, 3, 3, 3, 3, 5, 2, 3, …\n$ WITHIN_350M_BUS          <dbl> 4, 7, 10, 4, 8, 2, 8, 7, 6, 7, 7, 7, 8, 8, 11…\n$ WITHIN_1KM_PRIMARY       <dbl> 1, 3, 2, 3, 2, 2, 3, 2, 3, 3, 1, 2, 3, 2, 2, …\n\n\n\n\n6.1.2 Filter Training Data\n\ntrain_data <- filter(mdata) %>%\n  filter(month >= \"2021-01\" & month <= \"2022-12\")\n\n\n\n6.1.3 Filter Test Data\n\ntest_data <- filter(mdata) %>%\n  filter(month >= \"2023-01\" & month <= \"2023-02\")\n\n\n\n6.1.4 Check for Correct Time Period\n\nunique(train_data$month)\n\n [1] \"2021-01\" \"2021-02\" \"2021-03\" \"2021-04\" \"2021-05\" \"2021-06\" \"2021-07\"\n [8] \"2021-08\" \"2021-09\" \"2021-10\" \"2021-11\" \"2021-12\" \"2022-01\" \"2022-02\"\n[15] \"2022-03\" \"2022-04\" \"2022-05\" \"2022-06\" \"2022-07\" \"2022-08\" \"2022-09\"\n[22] \"2022-10\" \"2022-11\" \"2022-12\"\n\n\n\nunique(test_data$month)\n\n[1] \"2023-01\" \"2023-02\"\n\n\n\n\n6.1.5 Removing Unnecessary Columns\n\ntrain_data <- train_data %>%\n  dplyr::select(c(7, 8, 11, 12, 14:28))\n\ntest_data <- test_data %>%\n  dplyr::select(c(7, 8, 11, 12, 14:28))\n\n\nglimpse(train_data)\n\nRows: 23,656\nColumns: 19\n$ STOREY                   <chr> \"04 TO 06\", \"01 TO 03\", \"01 TO 03\", \"07 TO 09…\n$ AREA_SQM                 <dbl> 92, 92, 91, 92, 92, 98, 92, 92, 92, 92, 92, 1…\n$ LEASE_MTHS               <dbl> 708, 693, 702, 695, 689, 681, 661, 682, 692, …\n$ PRICE                    <dbl> 370000, 375000, 380000, 385000, 410000, 41000…\n$ geometry                 <POINT [m]> POINT (30770.07 39578.64), POINT (30292…\n$ PROX_CBD                 <dbl> 9.564575, 8.401690, 9.516492, 8.580908, 9.084…\n$ PROX_BUS                 <dbl> 0.16157609, 0.16740841, 0.07424143, 0.0887911…\n$ PROX_CHILDCARE           <dbl> 2.493662e-01, 6.715056e-02, 1.385583e-01, 1.4…\n$ PROX_ELDERCARE           <dbl> 1.08567795, 0.15039052, 0.72242472, 0.0981628…\n$ PROX_HAWKER              <dbl> 0.4442515, 0.2050009, 0.4495734, 0.3190679, 0…\n$ PROX_GOODPRIMARY         <dbl> 3.182527, 2.354024, 2.414729, 2.699653, 2.648…\n$ PROX_PARK                <dbl> 0.8291527, 0.7847864, 0.3796058, 0.9242129, 0…\n$ PROX_SUPERMARKET         <dbl> 0.4184204, 0.1946009, 0.4435109, 0.4269715, 0…\n$ PROX_SHOPPING            <dbl> 1.1817959, 0.8444986, 0.2966736, 0.9304149, 0…\n$ PROX_MRT                 <dbl> 1.0731215, 0.8245176, 0.4544926, 0.9503956, 0…\n$ WITHIN_350M_KINDERGARTEN <dbl> 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, …\n$ WITHIN_350M_CHILDCARE    <dbl> 2, 3, 3, 3, 3, 2, 6, 3, 3, 3, 3, 3, 5, 2, 3, …\n$ WITHIN_350M_BUS          <dbl> 4, 7, 10, 4, 8, 2, 8, 7, 6, 7, 7, 7, 8, 8, 11…\n$ WITHIN_1KM_PRIMARY       <dbl> 1, 3, 2, 3, 2, 2, 3, 2, 3, 3, 1, 2, 3, 2, 2, …\n\nglimpse(test_data)\n\nRows: 1,846\nColumns: 19\n$ STOREY                   <chr> \"07 TO 09\", \"07 TO 09\", \"07 TO 09\", \"10 TO 12…\n$ AREA_SQM                 <dbl> 88, 91, 92, 92, 92, 92, 92, 92, 98, 92, 92, 9…\n$ LEASE_MTHS               <dbl> 1065, 698, 671, 668, 660, 660, 659, 657, 651,…\n$ PRICE                    <dbl> 735000, 480888, 470000, 486500, 505000, 50500…\n$ geometry                 <POINT [m]> POINT (29258.92 38653.1), POINT (30036.…\n$ PROX_CBD                 <dbl> 8.648990, 8.319957, 8.580908, 8.461580, 8.740…\n$ PROX_BUS                 <dbl> 0.06370299, 0.11817809, 0.08879118, 0.1286942…\n$ PROX_CHILDCARE           <dbl> 1.424212e-01, 1.526755e-01, 1.448160e-01, 8.1…\n$ PROX_ELDERCARE           <dbl> 0.21761827, 0.25976843, 0.09816285, 0.0854535…\n$ PROX_HAWKER              <dbl> 0.4465136, 0.3874107, 0.3190679, 0.2666457, 0…\n$ PROX_GOODPRIMARY         <dbl> 1.4167972, 2.0895381, 2.6996535, 2.3359500, 2…\n$ PROX_PARK                <dbl> 0.5681842, 0.5179204, 0.9242129, 0.7734256, 0…\n$ PROX_SUPERMARKET         <dbl> 0.34392765, 0.28490909, 0.42697146, 0.1283025…\n$ PROX_SHOPPING            <dbl> 0.5677569, 0.7529773, 0.9304149, 0.7819466, 0…\n$ PROX_MRT                 <dbl> 0.7106577, 0.7795685, 0.9503956, 0.7586304, 0…\n$ WITHIN_350M_KINDERGARTEN <dbl> 1, 1, 1, 0, 1, 1, 1, 1, 2, 1, 2, 1, 1, 1, 0, …\n$ WITHIN_350M_CHILDCARE    <dbl> 5, 3, 3, 3, 3, 4, 3, 4, 7, 3, 8, 7, 3, 3, 4, …\n$ WITHIN_350M_BUS          <dbl> 4, 7, 4, 7, 6, 6, 6, 6, 6, 6, 6, 6, 10, 7, 9,…\n$ WITHIN_1KM_PRIMARY       <dbl> 2, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 2, 2, …\n\n\n\n\n6.1.6 Write Train and Test Data\n\nwrite_rds(train_data, \"data/model/train_data.rds\")\nwrite_rds(test_data, \"data/model/test_data.rds\")"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#computing-correlation-matrix",
    "href": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#computing-correlation-matrix",
    "title": "Take-home Exercise 3: Predicting HDB Public Housing Resale Pricies using Geographically Weighted Methods",
    "section": "6.2 Computing Correlation Matrix",
    "text": "6.2 Computing Correlation Matrix\nBefore loading the predictors into a predictive model, it is always a good practice to use correlation matrix to examine if there is sign of multicolinearity.\n\nmdata_nogeo <- mdata %>%\n  dplyr::select(c(7, 8, 11, 12, 14:28)) %>%\n  st_drop_geometry() %>%\n  mutate(STOREY = as.character(STOREY))\n\n\ncorrplot::corrplot(cor(mdata_nogeo[, 2:18]), \n                   diag = FALSE, \n                   order = \"AOE\",\n                   tl.pos = \"td\", \n                   tl.cex = 0.5, \n                   method = \"number\", \n                   type = \"upper\")\n\n\n\n\n\n\n\n\n\n\nAnalysis:\n\n\n\nFrom above, there a few correlated variables and it’s within the acceptable range. All variables can be included in the regression."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#building-a-non-spatial-multiple-linear-regression",
    "href": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#building-a-non-spatial-multiple-linear-regression",
    "title": "Take-home Exercise 3: Predicting HDB Public Housing Resale Pricies using Geographically Weighted Methods",
    "section": "6.3 Building a Non-Spatial Multiple Linear Regression",
    "text": "6.3 Building a Non-Spatial Multiple Linear Regression\n\n6.3.1 Retrieving Stored Data\n\ntrain_data <- read_rds(\"data/model/train_data.rds\")\ntest_data <- read_rds(\"data/model/test_data.rds\")\n\n\n\n6.3.2 Summary of Multiple Linear Regression\n\nprice_mlr <- lm(formula = PRICE ~ STOREY + AREA_SQM + PROX_BUS + PROX_CBD +\n                   PROX_CHILDCARE + PROX_ELDERCARE + PROX_GOODPRIMARY +\n                   PROX_HAWKER + PROX_MRT + PROX_PARK + PROX_SHOPPING +\n                   PROX_SUPERMARKET + WITHIN_1KM_PRIMARY + WITHIN_350M_BUS +\n                   WITHIN_350M_CHILDCARE + WITHIN_350M_KINDERGARTEN + LEASE_MTHS,\n                 data = train_data)\nsummary(price_mlr)\n\n\nCall:\nlm(formula = PRICE ~ STOREY + AREA_SQM + PROX_BUS + PROX_CBD + \n    PROX_CHILDCARE + PROX_ELDERCARE + PROX_GOODPRIMARY + PROX_HAWKER + \n    PROX_MRT + PROX_PARK + PROX_SHOPPING + PROX_SUPERMARKET + \n    WITHIN_1KM_PRIMARY + WITHIN_350M_BUS + WITHIN_350M_CHILDCARE + \n    WITHIN_350M_KINDERGARTEN + LEASE_MTHS, data = train_data)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-358722  -44740   -1805   43766  367404 \n\nCoefficients:\n                           Estimate Std. Error  t value Pr(>|t|)    \n(Intercept)              117534.323   8447.235   13.914  < 2e-16 ***\nSTOREY04 TO 06            18819.414   1448.679   12.991  < 2e-16 ***\nSTOREY07 TO 09            32913.451   1471.928   22.361  < 2e-16 ***\nSTOREY10 TO 12            42124.788   1503.354   28.021  < 2e-16 ***\nSTOREY13 TO 15            46539.487   1770.176   26.291  < 2e-16 ***\nSTOREY16 TO 18            57792.485   2277.495   25.375  < 2e-16 ***\nSTOREY19 TO 21            83110.456   3285.789   25.294  < 2e-16 ***\nSTOREY22 TO 24            90026.901   3817.710   23.581  < 2e-16 ***\nSTOREY25 TO 27           127578.933   4286.717   29.761  < 2e-16 ***\nSTOREY28 TO 30           190839.103   5211.319   36.620  < 2e-16 ***\nSTOREY31 TO 33           202066.715   6183.606   32.678  < 2e-16 ***\nSTOREY34 TO 36           227966.101   6251.494   36.466  < 2e-16 ***\nSTOREY37 TO 39           236073.194   7303.119   32.325  < 2e-16 ***\nSTOREY40 TO 42           248879.827  10132.768   24.562  < 2e-16 ***\nSTOREY43 TO 45           291774.008  13950.940   20.914  < 2e-16 ***\nSTOREY46 TO 48           372521.834  24006.879   15.517  < 2e-16 ***\nSTOREY49 TO 51           489215.496  39105.531   12.510  < 2e-16 ***\nAREA_SQM                   3321.643     68.241   48.675  < 2e-16 ***\nPROX_BUS                   -151.012   8556.345   -0.018 0.985919    \nPROX_CBD                 -16449.767    160.874 -102.252  < 2e-16 ***\nPROX_CHILDCARE           -30020.250   5966.182   -5.032 4.90e-07 ***\nPROX_ELDERCARE            -7304.721    782.959   -9.330  < 2e-16 ***\nPROX_GOODPRIMARY           -989.700    282.399   -3.505 0.000458 ***\nPROX_HAWKER              -22093.698    933.964  -23.656  < 2e-16 ***\nPROX_MRT                 -23007.446   1299.264  -17.708  < 2e-16 ***\nPROX_PARK                  2929.195   1081.974    2.707 0.006789 ** \nPROX_SHOPPING            -25009.965   1500.391  -16.669  < 2e-16 ***\nPROX_SUPERMARKET          10272.325   3062.601    3.354 0.000797 ***\nWITHIN_1KM_PRIMARY        -9045.547    350.381  -25.816  < 2e-16 ***\nWITHIN_350M_BUS            1100.533    173.527    6.342 2.31e-10 ***\nWITHIN_350M_CHILDCARE     -3951.416    262.563  -15.049  < 2e-16 ***\nWITHIN_350M_KINDERGARTEN   6691.904    478.697   13.979  < 2e-16 ***\nLEASE_MTHS                  358.830      3.201  112.100  < 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 67600 on 23623 degrees of freedom\nMultiple R-squared:  0.7279,    Adjusted R-squared:  0.7275 \nF-statistic:  1974 on 32 and 23623 DF,  p-value: < 2.2e-16\n\n\n\n\n6.3.3 Write price_mlr as rds\n\nwrite_rds(price_mlr, \"data/model/price_mlr.rds\" )"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#computing-adaptive-bandwidth",
    "href": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#computing-adaptive-bandwidth",
    "title": "Take-home Exercise 3: Predicting HDB Public Housing Resale Pricies using Geographically Weighted Methods",
    "section": "6.4 Computing Adaptive Bandwidth",
    "text": "6.4 Computing Adaptive Bandwidth\nNext, bw.gwr() of GWmodel package will be used to determine the optimal bandwidth to be used.\n\n6.4.1 Converting Data Frame to sp\n\ntrain_data_sp <- as_Spatial(train_data)\ntrain_data_sp\n\nclass       : SpatialPointsDataFrame \nfeatures    : 23656 \nextent      : 11519.79, 42645.18, 28217.39, 48741.06  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \nvariables   : 18\nnames       :   STOREY, AREA_SQM, LEASE_MTHS,   PRICE,          PROX_CBD,           PROX_BUS,       PROX_CHILDCARE,       PROX_ELDERCARE,       PROX_HAWKER,   PROX_GOODPRIMARY,          PROX_PARK,     PROX_SUPERMARKET,      PROX_SHOPPING,           PROX_MRT, WITHIN_350M_KINDERGARTEN, ... \nmin values  : 01 TO 03,       70,        534,  250000, 0.999393538715878, 0.0158480216214286, 1.40841148620523e-08, 1.98943787433087e-08, 0.030603180648446, 0.0790226000235527, 0.0441643213745594, 6.15083813444168e-09, 0.0421144997725278, 0.0222985128432497,                        0, ... \nmax values  : 49 TO 51,      145,       1168, 1370000,  19.6500691667807,  0.391470769487539,      0.5864949302319,     3.30163731686804,  2.86763031231414,   9.62214922623055,   2.44018373848866,     1.57131703659268,   2.28478087425324,   2.12939260942018,                        7, ... \n\n\n\n\n6.4.2 Computing Adaptive Bandwidth\nThe code chunk below is used to determine adaptive bandwidth and CV method is used to determine the optimal bandwidth.\n\nbw_adaptive <- bw.gwr(PRICE ~ STOREY + AREA_SQM + PROX_BUS + PROX_CBD +\n                   PROX_CHILDCARE + PROX_ELDERCARE + PROX_GOODPRIMARY +\n                   PROX_HAWKER + PROX_MRT + PROX_PARK + PROX_SHOPPING +\n                   PROX_SUPERMARKET + WITHIN_1KM_PRIMARY + WITHIN_350M_BUS +\n                   WITHIN_350M_CHILDCARE + WITHIN_350M_KINDERGARTEN + LEASE_MTHS,\n                 data = train_data_sp,\n                 approach = \"CV\",\n                 kernel = \"gaussian\",\n                 adaptive = TRUE,\n                 longlat = FALSE)\n\n\n\n\n\n\n\nAnalysis:\n\n\n\n\nThe results shows that 660 neighbour points will be the optimal bandwidth to be used if adaptive bandwidth is used for this data set.\n\n\n\n\n6.4.3 Write bw_adaptive as rds\n\nwrite_rds(bw_adaptive, \"data/model/bw_adaptive.rds\")"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#constructing-the-adaptive-bandwidth-gwr-model",
    "href": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#constructing-the-adaptive-bandwidth-gwr-model",
    "title": "Take-home Exercise 3: Predicting HDB Public Housing Resale Pricies using Geographically Weighted Methods",
    "section": "6.5 Constructing the Adaptive Bandwidth gwr Model",
    "text": "6.5 Constructing the Adaptive Bandwidth gwr Model\n\n6.5.1 Read bw_adaptive\nFirst, let us call the save bandwidth by using the code chunk below.\n\nbw_adaptive <- read_rds(\"data/model/bw_adaptive.rds\")\n\n\n\n6.5.2 Calibrate the gwr Model\nNow, we can go ahead to calibrate the gwr-based hedonic pricing model by using adaptive bandwidth and Gaussian kernel as shown in the code chunk below.\n\ngwr_adaptive <- gwr.basic(PRICE ~ STOREY + AREA_SQM + PROX_BUS + PROX_CBD +\n                   PROX_CHILDCARE + PROX_ELDERCARE + PROX_GOODPRIMARY +\n                   PROX_HAWKER + PROX_MRT + PROX_PARK + PROX_SHOPPING +\n                   PROX_SUPERMARKET + WITHIN_1KM_PRIMARY + WITHIN_350M_BUS +\n                   WITHIN_350M_CHILDCARE + WITHIN_350M_KINDERGARTEN + LEASE_MTHS,\n                 data = train_data_sp,\n                 bw = bw_adaptive,\n                 kernel = \"gaussian\",\n                 adaptive = TRUE,\n                 longlat = FALSE)\n\n\n\n6.5.3 Write gwr_adaptive as rds\n\nwrite_rds(gwr_adaptive, \"data/model/gwr_adaptive.rds\")\n\n\n\n6.5.4 Read and Display Model Output\n\ngwr_adaptive <- read_rds(\"data/model/gwr_adaptive.rds\")\ngwr_adaptive\n\n   ***********************************************************************\n   *                       Package   GWmodel                             *\n   ***********************************************************************\n   Program starts at: 2023-03-17 20:03:15 \n   Call:\n   gwr.basic(formula = PRICE ~ STOREY + AREA_SQM + PROX_BUS + PROX_CBD + \n    PROX_CHILDCARE + PROX_ELDERCARE + PROX_GOODPRIMARY + PROX_HAWKER + \n    PROX_MRT + PROX_PARK + PROX_SHOPPING + PROX_SUPERMARKET + \n    WITHIN_1KM_PRIMARY + WITHIN_350M_BUS + WITHIN_350M_CHILDCARE + \n    WITHIN_350M_KINDERGARTEN + LEASE_MTHS, data = train_data_sp, \n    bw = bw_adaptive, kernel = \"gaussian\", adaptive = TRUE, longlat = FALSE)\n\n   Dependent (y) variable:  PRICE\n   Independent variables:  STOREY AREA_SQM PROX_BUS PROX_CBD PROX_CHILDCARE PROX_ELDERCARE PROX_GOODPRIMARY PROX_HAWKER PROX_MRT PROX_PARK PROX_SHOPPING PROX_SUPERMARKET WITHIN_1KM_PRIMARY WITHIN_350M_BUS WITHIN_350M_CHILDCARE WITHIN_350M_KINDERGARTEN LEASE_MTHS\n   Number of data points: 23656\n   ***********************************************************************\n   *                    Results of Global Regression                     *\n   ***********************************************************************\n\n   Call:\n    lm(formula = formula, data = data)\n\n   Residuals:\n    Min      1Q  Median      3Q     Max \n-358722  -44740   -1805   43766  367404 \n\n   Coefficients:\n                              Estimate Std. Error  t value Pr(>|t|)    \n   (Intercept)              117534.323   8447.235   13.914  < 2e-16 ***\n   STOREY04 TO 06            18819.414   1448.679   12.991  < 2e-16 ***\n   STOREY07 TO 09            32913.451   1471.928   22.361  < 2e-16 ***\n   STOREY10 TO 12            42124.788   1503.354   28.021  < 2e-16 ***\n   STOREY13 TO 15            46539.487   1770.176   26.291  < 2e-16 ***\n   STOREY16 TO 18            57792.485   2277.495   25.375  < 2e-16 ***\n   STOREY19 TO 21            83110.456   3285.789   25.294  < 2e-16 ***\n   STOREY22 TO 24            90026.901   3817.710   23.581  < 2e-16 ***\n   STOREY25 TO 27           127578.933   4286.717   29.761  < 2e-16 ***\n   STOREY28 TO 30           190839.103   5211.319   36.620  < 2e-16 ***\n   STOREY31 TO 33           202066.715   6183.606   32.678  < 2e-16 ***\n   STOREY34 TO 36           227966.101   6251.494   36.466  < 2e-16 ***\n   STOREY37 TO 39           236073.194   7303.119   32.325  < 2e-16 ***\n   STOREY40 TO 42           248879.827  10132.768   24.562  < 2e-16 ***\n   STOREY43 TO 45           291774.008  13950.940   20.914  < 2e-16 ***\n   STOREY46 TO 48           372521.834  24006.879   15.517  < 2e-16 ***\n   STOREY49 TO 51           489215.496  39105.531   12.510  < 2e-16 ***\n   AREA_SQM                   3321.643     68.241   48.675  < 2e-16 ***\n   PROX_BUS                   -151.012   8556.345   -0.018 0.985919    \n   PROX_CBD                 -16449.767    160.874 -102.252  < 2e-16 ***\n   PROX_CHILDCARE           -30020.250   5966.182   -5.032 4.90e-07 ***\n   PROX_ELDERCARE            -7304.721    782.959   -9.330  < 2e-16 ***\n   PROX_GOODPRIMARY           -989.700    282.399   -3.505 0.000458 ***\n   PROX_HAWKER              -22093.698    933.964  -23.656  < 2e-16 ***\n   PROX_MRT                 -23007.446   1299.264  -17.708  < 2e-16 ***\n   PROX_PARK                  2929.195   1081.974    2.707 0.006789 ** \n   PROX_SHOPPING            -25009.965   1500.391  -16.669  < 2e-16 ***\n   PROX_SUPERMARKET          10272.325   3062.601    3.354 0.000797 ***\n   WITHIN_1KM_PRIMARY        -9045.547    350.381  -25.816  < 2e-16 ***\n   WITHIN_350M_BUS            1100.533    173.527    6.342 2.31e-10 ***\n   WITHIN_350M_CHILDCARE     -3951.416    262.563  -15.049  < 2e-16 ***\n   WITHIN_350M_KINDERGARTEN   6691.904    478.697   13.979  < 2e-16 ***\n   LEASE_MTHS                  358.830      3.201  112.100  < 2e-16 ***\n\n   ---Significance stars\n   Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 \n   Residual standard error: 67600 on 23623 degrees of freedom\n   Multiple R-squared: 0.7279\n   Adjusted R-squared: 0.7275 \n   F-statistic:  1974 on 32 and 23623 DF,  p-value: < 2.2e-16 \n   ***Extra Diagnostic information\n   Residual sum of squares: 1.079661e+14\n   Sigma(hat): 67560.28\n   AIC:  593344.9\n   AICc:  593345\n   BIC:  570305.8\n   ***********************************************************************\n   *          Results of Geographically Weighted Regression              *\n   ***********************************************************************\n\n   *********************Model calibration information*********************\n   Kernel function: gaussian \n   Adaptive bandwidth: 660 (number of nearest neighbours)\n   Regression points: the same locations as observations are used.\n   Distance metric: Euclidean distance metric is used.\n\n   ****************Summary of GWR coefficient estimates:******************\n                                   Min.     1st Qu.      Median     3rd Qu.\n   Intercept                -1.1183e+06 -1.6480e+05  9.7373e+04  1.9643e+05\n   STOREY04.TO.06            7.3023e+03  1.3747e+04  1.6285e+04  2.3718e+04\n   STOREY07.TO.09            1.7927e+04  2.5179e+04  3.5446e+04  4.3125e+04\n   STOREY10.TO.12            2.3989e+04  3.3714e+04  4.4800e+04  5.3537e+04\n   STOREY13.TO.15            2.9791e+04  4.3869e+04  5.2539e+04  6.0581e+04\n   STOREY16.TO.18           -1.7291e+05  5.0694e+04  6.0136e+04  7.7027e+04\n   STOREY19.TO.21            7.9094e+03  5.5462e+04  7.8953e+04  1.0348e+05\n   STOREY22.TO.24           -1.1288e+05  3.9263e+04  7.2268e+04  9.8897e+04\n   STOREY25.TO.27           -1.2484e+05  3.6756e+04  8.2800e+04  1.1769e+05\n   STOREY28.TO.30           -1.0258e+04  9.4638e+04  1.5795e+05  2.8606e+05\n   STOREY31.TO.33           -8.0947e+03  1.1493e+05  1.8650e+05  3.0076e+05\n   STOREY34.TO.36            2.8995e+04  1.5065e+05  1.9605e+05  3.4434e+05\n   STOREY37.TO.39           -5.8788e+05  1.5649e+05  2.2636e+05  3.1997e+05\n   STOREY40.TO.42           -3.6570e+05  1.8819e+05  2.5783e+05  4.7685e+05\n   STOREY43.TO.45           -1.3811e+05  2.3936e+05  3.6953e+05  5.2688e+05\n   STOREY46.TO.48           -1.7869e+05  2.1867e+05  3.6884e+05  4.9424e+05\n   STOREY49.TO.51           -6.0484e+04  4.6170e+05  5.3945e+05  7.0890e+05\n   AREA_SQM                  1.0048e+03  1.9578e+03  2.6370e+03  4.4500e+03\n   PROX_BUS                 -1.1409e+05 -3.2160e+04  6.0175e+02  3.7830e+04\n   PROX_CBD                 -1.6789e+05 -2.6338e+04 -1.0992e+04 -1.9277e+03\n   PROX_CHILDCARE           -1.1167e+05 -4.6607e+04 -1.8262e+04  3.2867e+03\n   PROX_ELDERCARE           -6.1617e+04 -1.1421e+04  8.4106e+02  1.4051e+04\n   PROX_GOODPRIMARY         -1.3622e+05 -1.9292e+04 -5.0061e+03  3.4082e+03\n   PROX_HAWKER              -1.1497e+05 -3.0383e+04 -1.5337e+04  5.0468e+03\n   PROX_MRT                 -1.4965e+05 -6.6886e+04 -3.9145e+04 -2.3683e+04\n   PROX_PARK                -8.9552e+04 -2.6112e+04 -1.2344e+04  6.2669e+01\n   PROX_SHOPPING            -7.7650e+04 -2.2379e+04  4.0035e+02  1.7550e+04\n   PROX_SUPERMARKET         -1.1272e+05 -3.2530e+04  6.1451e+03  2.9493e+04\n   WITHIN_1KM_PRIMARY       -2.7753e+04 -5.0426e+03  1.1244e+03  6.0239e+03\n   WITHIN_350M_BUS          -4.6978e+03 -5.3193e+02  2.5353e+02  1.6309e+03\n   WITHIN_350M_CHILDCARE    -8.8468e+03 -2.3716e+03 -4.9878e+02  1.0532e+03\n   WITHIN_350M_KINDERGARTEN -1.2675e+04 -5.9119e+03 -3.2290e+03  1.6067e+03\n   LEASE_MTHS               -2.3604e+02  2.7674e+02  3.7027e+02  4.8226e+02\n                                  Max.\n   Intercept                2062147.72\n   STOREY04.TO.06             45193.24\n   STOREY07.TO.09             70967.81\n   STOREY10.TO.12             73659.14\n   STOREY13.TO.15             94513.29\n   STOREY16.TO.18            195075.84\n   STOREY19.TO.21            295940.48\n   STOREY22.TO.24            297305.08\n   STOREY25.TO.27            336471.72\n   STOREY28.TO.30            827653.60\n   STOREY31.TO.33            925714.20\n   STOREY34.TO.36            988033.81\n   STOREY37.TO.39           1167635.17\n   STOREY40.TO.42           1331308.13\n   STOREY43.TO.45           1324128.63\n   STOREY46.TO.48           1291557.95\n   STOREY49.TO.51           1404189.66\n   AREA_SQM                   13578.44\n   PROX_BUS                  142295.70\n   PROX_CBD                   49461.77\n   PROX_CHILDCARE             79463.63\n   PROX_ELDERCARE             88918.59\n   PROX_GOODPRIMARY           91069.10\n   PROX_HAWKER                68643.23\n   PROX_MRT                   71934.01\n   PROX_PARK                 113089.60\n   PROX_SHOPPING             120670.57\n   PROX_SUPERMARKET          119353.94\n   WITHIN_1KM_PRIMARY         14684.02\n   WITHIN_350M_BUS             8170.27\n   WITHIN_350M_CHILDCARE      11899.36\n   WITHIN_350M_KINDERGARTEN   16371.39\n   LEASE_MTHS                   658.18\n   ************************Diagnostic information*************************\n   Number of data points: 23656 \n   Effective number of parameters (2trace(S) - trace(S'S)): 617.6324 \n   Effective degrees of freedom (n-2trace(S) + trace(S'S)): 23038.37 \n   AICc (GWR book, Fotheringham, et al. 2002, p. 61, eq 2.33): 572931.6 \n   AIC (GWR book, Fotheringham, et al. 2002,GWR p. 96, eq. 4.22): 572432.1 \n   BIC (GWR book, Fotheringham, et al. 2002,GWR p. 61, eq. 2.34): 553109.6 \n   Residual sum of squares: 4.383611e+13 \n   R-square value:  0.8895057 \n   Adjusted R-square value:  0.8865433 \n\n   ***********************************************************************\n   Program stops at: 2023-03-17 20:14:57"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#preparing-coordinates-data",
    "href": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#preparing-coordinates-data",
    "title": "Take-home Exercise 3: Predicting HDB Public Housing Resale Pricies using Geographically Weighted Methods",
    "section": "6.6 Preparing Coordinates Data",
    "text": "6.6 Preparing Coordinates Data\n\n6.6.1 Extracting Coordinates Data\nThe code chunk below extract the x, y coordinates of the full, training and test data sets.\n\ncoords <- st_coordinates(mdata)\ncoords_train <- st_coordinates(train_data)\ncoords_test <- st_coordinates(test_data)\n\n\n\n6.6.2 Write Outputs into rds\n\ncoords <- write_rds(coords, \"data/model/coords.rds\" )\ncoords_train <- write_rds(coords_train, \"data/model/coords_train.rds\" )\ncoords_test <- write_rds(coords_test, \"data/model/coords_test.rds\" )\n\n\n\n6.6.3 Dropping Geometry Field\nWe will drop geometry column of the sf data.frame by using st_drop_geometry() of sf package.\n\ntrain_data <- train_data %>%\n  st_drop_geometry()"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#calibrating-random-forest-model",
    "href": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#calibrating-random-forest-model",
    "title": "Take-home Exercise 3: Predicting HDB Public Housing Resale Pricies using Geographically Weighted Methods",
    "section": "6.7 Calibrating Random Forest Model",
    "text": "6.7 Calibrating Random Forest Model\n\n6.7.1 Calibrate Model Using Ranger\nIn this section, we will calibrate a model to predict HDB resale price by using random forest function of ranger package.\n\nset.seed(1234)\nrf <- ranger(PRICE ~ STOREY + AREA_SQM + PROX_BUS + PROX_CBD +\n                   PROX_CHILDCARE + PROX_ELDERCARE + PROX_GOODPRIMARY +\n                   PROX_HAWKER + PROX_MRT + PROX_PARK + PROX_SHOPPING +\n                   PROX_SUPERMARKET + WITHIN_1KM_PRIMARY + WITHIN_350M_BUS +\n                   WITHIN_350M_CHILDCARE + WITHIN_350M_KINDERGARTEN + LEASE_MTHS,\n                 data = train_data)\n\n\n\n6.7.2 Print Ranger Result\n\nprint(rf)\n\nRanger result\n\nCall:\n ranger(PRICE ~ STOREY + AREA_SQM + PROX_BUS + PROX_CBD + PROX_CHILDCARE +      PROX_ELDERCARE + PROX_GOODPRIMARY + PROX_HAWKER + PROX_MRT +      PROX_PARK + PROX_SHOPPING + PROX_SUPERMARKET + WITHIN_1KM_PRIMARY +      WITHIN_350M_BUS + WITHIN_350M_CHILDCARE + WITHIN_350M_KINDERGARTEN +      LEASE_MTHS, data = train_data) \n\nType:                             Regression \nNumber of trees:                  500 \nSample size:                      23656 \nNumber of independent variables:  17 \nMtry:                             4 \nTarget node size:                 5 \nVariable importance mode:         none \nSplitrule:                        variance \nOOB prediction error (MSE):       1077227530 \nR squared (OOB):                  0.9357699"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#calibrating-geographical-random-forest-model",
    "href": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#calibrating-geographical-random-forest-model",
    "title": "Take-home Exercise 3: Predicting HDB Public Housing Resale Pricies using Geographically Weighted Methods",
    "section": "6.8 Calibrating Geographical Random Forest Model",
    "text": "6.8 Calibrating Geographical Random Forest Model\n\n6.8.1 Calculating Bandwidth\nIn this section, we will calculate the bandwidth to find the optimal one to use for the grf() of SpatialML package.\n\ngwRF_bw <- grf.bw(formula = PRICE ~ STOREY + AREA_SQM + PROX_BUS + PROX_CBD +\n                   PROX_CHILDCARE + PROX_ELDERCARE + PROX_GOODPRIMARY +\n                   PROX_HAWKER + PROX_MRT + PROX_PARK + PROX_SHOPPING +\n                   PROX_SUPERMARKET + WITHIN_1KM_PRIMARY + WITHIN_350M_BUS +\n                   WITHIN_350M_CHILDCARE + WITHIN_350M_KINDERGARTEN + LEASE_MTHS,\n                 data = train_data,\n                 kernel = \"adaptive\",\n                 coords = coords_train)\n\n\n\n\n\n\n\nResults:\n\n\n\n\n\n\nBased on the following output, the bandwidth to use for the grf() would be 1183\n\n\n\n\n\n\n6.8.2 Calibrating Using Training Data\nThis code chunk below calibrate a geographic random forest model by using grf() of SpatialML package.\n\nset.seed(1234)\ngwRF_adaptive <- grf(formula = PRICE ~ STOREY + AREA_SQM + PROX_BUS + PROX_CBD +\n                   PROX_CHILDCARE + PROX_ELDERCARE + PROX_GOODPRIMARY +\n                   PROX_HAWKER + PROX_MRT + PROX_PARK + PROX_SHOPPING +\n                   PROX_SUPERMARKET + WITHIN_1KM_PRIMARY + WITHIN_350M_BUS +\n                   WITHIN_350M_CHILDCARE + WITHIN_350M_KINDERGARTEN + LEASE_MTHS,\n                 dframe = train_data,\n                 ntree = 30,\n                 bw = 1183,\n                 kernel = \"adaptive\",\n                 coords = coords_train)\n\n\n\n\n\n\n\nResults:\n\n\n\n\n\n\n\n\n6.8.2 Write gwRF_adaptive as rds\n\nwrite_rds(gwRF_adaptive, \"data/model/gwRF_adaptive.rds\")\n\n\n\n6.8.3 Read gwRF_adaptive file\n\ngwRF_adaptive <- read_rds(\"data/model/gwRF_adaptive.rds\")"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#predicting-using-test-data",
    "href": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#predicting-using-test-data",
    "title": "Take-home Exercise 3: Predicting HDB Public Housing Resale Pricies using Geographically Weighted Methods",
    "section": "6.9 Predicting Using Test Data",
    "text": "6.9 Predicting Using Test Data\n\n6.9.1 Preparing Test Data\nThe code chunk below will be used to combine the test data with its corresponding coordinates data.\n\ntest_data <- cbind(test_data, coords_test) %>%\n  st_drop_geometry()\n\n\n\n6.9.2 Predicting With Test Data\nNext, predict.grf() of SpatialML package will be used to predict the resale value by using the test data and gwRF_adaptive model calibrated earlier.\n\ngwRF_pred <- predict.grf(gwRF_adaptive, \n                           test_data, \n                           x.var.name=\"X\",\n                           y.var.name=\"Y\", \n                           local.w=1,\n                           global.w=0)\n\n\n\n6.9.3 Write gwRF_pred as rds\n\nGRF_pred <- write_rds(gwRF_pred, \"data/model/GRF_pred.rds\")\n\n\n\n6.9.4 Read gwRF_pred File and Convert to Data Frame\nThe out of the predict.grf() is a vector of predicted values. It is wiser to convert it into a data frame for further visualisation and analysis.\n\nGRF_pred <- read_rds(\"data/model/GRF_pred.rds\")\nGRF_pred_df <- as.data.frame(GRF_pred)\n\n\n\n6.9.5 Append the Predicted Values onto test_data\n\ntest_data_p <- cbind(test_data, GRF_pred_df)\n\n\n\n6.9.6 Write test_data_p as rds\n\nwrite_rds(test_data_p, \"data/model/test_data_p.rds\")"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#calculating-root-mean-square-error",
    "href": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#calculating-root-mean-square-error",
    "title": "Take-home Exercise 3: Predicting HDB Public Housing Resale Pricies using Geographically Weighted Methods",
    "section": "6.10 Calculating Root Mean Square Error",
    "text": "6.10 Calculating Root Mean Square Error\n\n6.10.1 Read test_data_p File\n\ntest_data_p <- read_rds(\"data/model/test_data_p.rds\")\n\n\n\n6.10.2 Calculate RMSE\nThe root mean square error (RMSE) allows us to measure how far predicted values are from observed values in a regression analysis. In the code chunk below, rmse() of Metrics package is used to compute the RMSE.\n\nrmse(test_data_p$PRICE, \n     test_data_p$GRF_pred)\n\n[1] 71825.49"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#visualising-predicted-values",
    "href": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#visualising-predicted-values",
    "title": "Take-home Exercise 3: Predicting HDB Public Housing Resale Pricies using Geographically Weighted Methods",
    "section": "6.11 Visualising Predicted Values",
    "text": "6.11 Visualising Predicted Values\nAlternatively, scatterplot can be used to visualise the actual resale price and the predicted resale price by using the code chunk below.\n\nggplot(data = test_data_p,\n       aes(x = GRF_pred,\n           y = PRICE)) +\n  geom_point()"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex10/Hands-On_Ex10.html",
    "href": "Hands-On_Ex/Hands-On_Ex10/Hands-On_Ex10.html",
    "title": "Hands-On Exercise 10: Modelling Geographical Accessibility",
    "section": "",
    "text": "pacman::p_load(tmap, SpatialAcc, sf, \n               ggstatsplot, reshape2,\n               tidyverse)\n\npackage 'dplyr' successfully unpacked and MD5 sums checked\npackage 'ggstatsplot' successfully unpacked and MD5 sums checked\n\nThe downloaded binary packages are in\n    C:\\Users\\la935\\AppData\\Local\\Temp\\RtmpsLkBeL\\downloaded_packages\n\n\n\n\n\n\n\n\nmpsz <- st_read(dsn = \"data/geospatial\", layer = \"MP14_SUBZONE_NO_SEA_PL\")\n\nReading layer `MP14_SUBZONE_NO_SEA_PL' from data source \n  `C:\\Users\\la935\\Desktop\\IS415 - GAA\\IS415 - GAA (New)\\Hands-On_Ex\\Hands-On_Ex10\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n\n\n\nhexagons <- st_read(dsn = \"data/geospatial\", layer = \"hexagons\")\n\nReading layer `hexagons' from data source \n  `C:\\Users\\la935\\Desktop\\IS415 - GAA\\IS415 - GAA (New)\\Hands-On_Ex\\Hands-On_Ex10\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 3125 features and 6 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 21506.33 xmax: 50010.26 ymax: 50256.33\nProjected CRS: SVY21 / Singapore TM\n\n\n\neldercare <- st_read(dsn = \"data/geospatial\", layer = \"ELDERCARE\") \n\nReading layer `ELDERCARE' from data source \n  `C:\\Users\\la935\\Desktop\\IS415 - GAA\\IS415 - GAA (New)\\Hands-On_Ex\\Hands-On_Ex10\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 120 features and 19 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 14481.92 ymin: 28218.43 xmax: 41665.14 ymax: 46804.9\nProjected CRS: SVY21 / Singapore TM\n\n\n\n\n\n\nmpsz <- st_transform(mpsz, 3414)\neldercare <- st_transform(eldercare, 3414)\nhexagons <- st_transform(hexagons, 3414)\n\n\n\n\n\neldercare <- eldercare %>%\n  select(fid, ADDRESSPOS) %>%\n  mutate(capacity = 100)\n\n\nhexagons <- hexagons %>%\n  select(fid) %>%\n  mutate(demand = 100)\n\n\n\n\n\nODMatrix <- read_csv(\"data/aspatial/OD_Matrix.csv\", skip = 0)\n\n\n\n\n\ndistmat <- ODMatrix %>%\n  select(origin_id, destination_id, total_cost) %>%\n  spread(destination_id, total_cost)%>%\n  select(c(-c('origin_id')))\n\n\ndistmat_km <- as.matrix(distmat/1000)"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex10/Hands-On_Ex10.html#computing-hansens-accessibility",
    "href": "Hands-On_Ex/Hands-On_Ex10/Hands-On_Ex10.html#computing-hansens-accessibility",
    "title": "Hands-On Exercise 10: Modelling Geographical Accessibility",
    "section": "Computing Hansen’s Accessibility",
    "text": "Computing Hansen’s Accessibility\n\nacc_Hansen <- data.frame(ac(hexagons$demand,\n                            eldercare$capacity,\n                            distmat_km, \n                            #d0 = 50,\n                            power = 2, \n                            family = \"Hansen\"))\n\n\ncolnames(acc_Hansen) <- \"accHansen\"\n\n\nacc_Hansen <- as_tibble(acc_Hansen)\n\n\nhexagon_Hansen <- bind_cols(hexagons, acc_Hansen)\n\n\nacc_Hansen <- data.frame(ac(hexagons$demand,\n                            eldercare$capacity,\n                            distmat_km, \n                            #d0 = 50,\n                            power = 0.5, \n                            family = \"Hansen\"))\n\ncolnames(acc_Hansen) <- \"accHansen\"\nacc_Hansen <- tbl_df(acc_Hansen)\nhexagon_Hansen <- bind_cols(hexagons, acc_Hansen)"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex10/Hands-On_Ex10.html#visualising-hansens-accessibility",
    "href": "Hands-On_Ex/Hands-On_Ex10/Hands-On_Ex10.html#visualising-hansens-accessibility",
    "title": "Hands-On Exercise 10: Modelling Geographical Accessibility",
    "section": "Visualising Hansen’s Accessibility",
    "text": "Visualising Hansen’s Accessibility"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex10/Hands-On_Ex10.html#extracting-map-extend",
    "href": "Hands-On_Ex/Hands-On_Ex10/Hands-On_Ex10.html#extracting-map-extend",
    "title": "Hands-On Exercise 10: Modelling Geographical Accessibility",
    "section": "Extracting Map Extend",
    "text": "Extracting Map Extend\n\nmapex <- st_bbox(hexagons)\n\n\ntmap_mode(\"plot\")\ntm_shape(hexagon_Hansen,\n         bbox = mapex) + \n  tm_fill(col = \"accHansen\",\n          n = 10,\n          style = \"quantile\",\n          border.col = \"black\",\n          border.lwd = 1) +\ntm_shape(eldercare) +\n  tm_symbols(size = 0.1) +\n  tm_layout(main.title = \"Accessibility to eldercare: Hansen method\",\n            main.title.position = \"center\",\n            main.title.size = 2,\n            legend.outside = FALSE,\n            legend.height = 0.45, \n            legend.width = 3.0,\n            legend.format = list(digits = 6),\n            legend.position = c(\"right\", \"top\"),\n            frame = TRUE) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar(width = 0.15) +\n  tm_grid(lwd = 0.1, alpha = 0.5)"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex10/Hands-On_Ex10.html#statistical-graphic-visualisation",
    "href": "Hands-On_Ex/Hands-On_Ex10/Hands-On_Ex10.html#statistical-graphic-visualisation",
    "title": "Hands-On Exercise 10: Modelling Geographical Accessibility",
    "section": "Statistical Graphic Visualisation",
    "text": "Statistical Graphic Visualisation\n\nhexagon_Hansen <- st_join(hexagon_Hansen, mpsz, \n                          join = st_intersects)\n\n\nggplot(data=hexagon_Hansen, \n       aes(y = log(accHansen), \n           x= REGION_N)) +\n  geom_boxplot() +\n  geom_point(stat=\"summary\", \n             fun.y=\"mean\", \n             colour =\"red\", \n             size=2)"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex10/Hands-On_Ex10.html#computing-kd2sfcas-accessibility",
    "href": "Hands-On_Ex/Hands-On_Ex10/Hands-On_Ex10.html#computing-kd2sfcas-accessibility",
    "title": "Hands-On Exercise 10: Modelling Geographical Accessibility",
    "section": "Computing KD2SFCA’s Accessibility",
    "text": "Computing KD2SFCA’s Accessibility\n\nacc_KD2SFCA <- data.frame(ac(hexagons$demand,\n                            eldercare$capacity,\n                            distmat_km, \n                            d0 = 50,\n                            power = 2, \n                            family = \"KD2SFCA\"))\n\ncolnames(acc_KD2SFCA) <- \"accKD2SFCA\"\nacc_KD2SFCA <- tbl_df(acc_KD2SFCA)\nhexagon_KD2SFCA <- bind_cols(hexagons, acc_KD2SFCA)"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex10/Hands-On_Ex10.html#visualising-kd2sfcas-accessibility",
    "href": "Hands-On_Ex/Hands-On_Ex10/Hands-On_Ex10.html#visualising-kd2sfcas-accessibility",
    "title": "Hands-On Exercise 10: Modelling Geographical Accessibility",
    "section": "Visualising KD2SFCA’s Accessibility",
    "text": "Visualising KD2SFCA’s Accessibility\n\ntmap_mode(\"plot\")\ntm_shape(hexagon_KD2SFCA,\n         bbox = mapex) + \n  tm_fill(col = \"accKD2SFCA\",\n          n = 10,\n          style = \"quantile\",\n          border.col = \"black\",\n          border.lwd = 1) +\ntm_shape(eldercare) +\n  tm_symbols(size = 0.1) +\n  tm_layout(main.title = \"Accessibility to eldercare: KD2SFCA method\",\n            main.title.position = \"center\",\n            main.title.size = 2,\n            legend.outside = FALSE,\n            legend.height = 0.45, \n            legend.width = 3.0,\n            legend.format = list(digits = 6),\n            legend.position = c(\"right\", \"top\"),\n            frame = TRUE) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar(width = 0.15) +\n  tm_grid(lwd = 0.1, alpha = 0.5)"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex10/Hands-On_Ex10.html#statistical-graphic-visualisation-1",
    "href": "Hands-On_Ex/Hands-On_Ex10/Hands-On_Ex10.html#statistical-graphic-visualisation-1",
    "title": "Hands-On Exercise 10: Modelling Geographical Accessibility",
    "section": "Statistical Graphic Visualisation",
    "text": "Statistical Graphic Visualisation\n\nhexagon_KD2SFCA <- st_join(hexagon_KD2SFCA, mpsz, \n                          join = st_intersects)\n\n\nggplot(data=hexagon_KD2SFCA, \n       aes(y = accKD2SFCA, \n           x= REGION_N)) +\n  geom_boxplot() +\n  geom_point(stat=\"summary\", \n             fun.y=\"mean\", \n             colour =\"red\", \n             size=2)"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex10/Hands-On_Ex10.html#computing-sam-accessibility",
    "href": "Hands-On_Ex/Hands-On_Ex10/Hands-On_Ex10.html#computing-sam-accessibility",
    "title": "Hands-On Exercise 10: Modelling Geographical Accessibility",
    "section": "Computing SAM Accessibility",
    "text": "Computing SAM Accessibility\n\nacc_SAM <- data.frame(ac(hexagons$demand,\n                         eldercare$capacity,\n                         distmat_km, \n                         d0 = 50,\n                         power = 2, \n                         family = \"SAM\"))\n\ncolnames(acc_SAM) <- \"accSAM\"\nacc_SAM <- tbl_df(acc_SAM)\nhexagon_SAM <- bind_cols(hexagons, acc_SAM)"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex10/Hands-On_Ex10.html#visualising-sams-accessibility",
    "href": "Hands-On_Ex/Hands-On_Ex10/Hands-On_Ex10.html#visualising-sams-accessibility",
    "title": "Hands-On Exercise 10: Modelling Geographical Accessibility",
    "section": "Visualising SAM’s Accessibility",
    "text": "Visualising SAM’s Accessibility\n\ntmap_mode(\"plot\")\ntm_shape(hexagon_SAM,\n         bbox = mapex) + \n  tm_fill(col = \"accSAM\",\n          n = 10,\n          style = \"quantile\",\n          border.col = \"black\",\n          border.lwd = 1) +\ntm_shape(eldercare) +\n  tm_symbols(size = 0.1) +\n  tm_layout(main.title = \"Accessibility to eldercare: SAM method\",\n            main.title.position = \"center\",\n            main.title.size = 2,\n            legend.outside = FALSE,\n            legend.height = 0.45, \n            legend.width = 3.0,\n            legend.format = list(digits = 3),\n            legend.position = c(\"right\", \"top\"),\n            frame = TRUE) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar(width = 0.15) +\n  tm_grid(lwd = 0.1, alpha = 0.5)"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex10/Hands-On_Ex10.html#statistical-graphic-visualisation-2",
    "href": "Hands-On_Ex/Hands-On_Ex10/Hands-On_Ex10.html#statistical-graphic-visualisation-2",
    "title": "Hands-On Exercise 10: Modelling Geographical Accessibility",
    "section": "Statistical Graphic Visualisation",
    "text": "Statistical Graphic Visualisation\n\nhexagon_SAM <- st_join(hexagon_SAM, mpsz, \n                       join = st_intersects)\n\n\nggplot(data=hexagon_SAM, \n       aes(y = accSAM, \n           x= REGION_N)) +\n  geom_boxplot() +\n  geom_point(stat=\"summary\", \n             fun.y=\"mean\", \n             colour =\"red\", \n             size=2)"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex10/In-Class_Ex10.html",
    "href": "In-Class_Ex/In-Class_Ex10/In-Class_Ex10.html",
    "title": "In-Class Exercise 10: Modelling Geographical Accessibility",
    "section": "",
    "text": "pacman::p_load(tmap, SpatialAcc, sf, \n               ggstatsplot, reshape2,\n               tidyverse, fca)\n\npackage 'dplyr' successfully unpacked and MD5 sums checked\npackage 'ggstatsplot' successfully unpacked and MD5 sums checked\n\nThe downloaded binary packages are in\n    C:\\Users\\la935\\AppData\\Local\\Temp\\RtmpA7xWfz\\downloaded_packages\n\n\n\n\n\n\nmpsz <- st_read(dsn = \"data/geospatial\", layer = \"MP14_SUBZONE_NO_SEA_PL\")\n\nReading layer `MP14_SUBZONE_NO_SEA_PL' from data source \n  `C:\\Users\\la935\\Desktop\\IS415 - GAA\\IS415 - GAA (New)\\In-Class_Ex\\In-Class_Ex10\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n\nhexagons <- st_read(dsn = \"data/geospatial\", layer = \"hexagons\")\n\nReading layer `hexagons' from data source \n  `C:\\Users\\la935\\Desktop\\IS415 - GAA\\IS415 - GAA (New)\\In-Class_Ex\\In-Class_Ex10\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 3125 features and 6 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 21506.33 xmax: 50010.26 ymax: 50256.33\nProjected CRS: SVY21 / Singapore TM\n\neldercare <- st_read(dsn = \"data/geospatial\", layer = \"ELDERCARE\") \n\nReading layer `ELDERCARE' from data source \n  `C:\\Users\\la935\\Desktop\\IS415 - GAA\\IS415 - GAA (New)\\In-Class_Ex\\In-Class_Ex10\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 120 features and 19 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 14481.92 ymin: 28218.43 xmax: 41665.14 ymax: 46804.9\nProjected CRS: SVY21 / Singapore TM\n\n\n\n\n\nmpsz <- st_transform(mpsz, 3414)\neldercare <- st_transform(eldercare, 3414)\nhexagons <- st_transform(hexagons, 3414)\n\n\n\n\n\neldercare <- eldercare %>%\n  select(fid, ADDRESSPOS) %>%\n  mutate(capacity = 100)\n\nCapacity is the number of vacancy in the elderly care, for ease of use, set 100 for all elderly care.\n\nhexagons <- hexagons %>%\n  select(fid) %>%\n  mutate(demand = 100)\n\nDemand is the number of hexagon that is needed???\n\n\n\n\n\nODMatrix <- read_csv(\"data/aspatial/OD_Matrix.csv\", skip = 0)\n\n\n\n\ndistmat <- ODMatrix %>%\n  select(origin_id, destination_id, total_cost) %>%\n  spread(destination_id, total_cost)%>%\n  select(c(-c('origin_id')))\n\nSpread is use to widen the columns and reduce the rows:\n\n\ndistmat_km <- as.matrix(distmat/1000)"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex10/In-Class_Ex10.html#computing-hansens-accessibility",
    "href": "In-Class_Ex/In-Class_Ex10/In-Class_Ex10.html#computing-hansens-accessibility",
    "title": "In-Class Exercise 10: Modelling Geographical Accessibility",
    "section": "Computing Hansen’s Accessibility",
    "text": "Computing Hansen’s Accessibility\n\nacc_Hansen <- data.frame(ac(hexagons$demand,\n                            eldercare$capacity,\n                            distmat_km, \n                            #d0 = 50,\n                            power = 2, \n                            family = \"Hansen\"))"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex10/In-Class_Ex10.html#rename-column-name",
    "href": "In-Class_Ex/In-Class_Ex10/In-Class_Ex10.html#rename-column-name",
    "title": "In-Class Exercise 10: Modelling Geographical Accessibility",
    "section": "Rename Column Name",
    "text": "Rename Column Name\n\ncolnames(acc_Hansen) <- \"accHansen\""
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex10/In-Class_Ex10.html#convert-to-tibble",
    "href": "In-Class_Ex/In-Class_Ex10/In-Class_Ex10.html#convert-to-tibble",
    "title": "In-Class Exercise 10: Modelling Geographical Accessibility",
    "section": "Convert to Tibble",
    "text": "Convert to Tibble\n\nacc_Hansen <- as_tibble(acc_Hansen)"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex10/In-Class_Ex10.html#join-acc_hansen-with-hexagons",
    "href": "In-Class_Ex/In-Class_Ex10/In-Class_Ex10.html#join-acc_hansen-with-hexagons",
    "title": "In-Class Exercise 10: Modelling Geographical Accessibility",
    "section": "Join acc_Hansen with hexagons",
    "text": "Join acc_Hansen with hexagons\n\nhexagon_Hansen <- bind_cols(hexagons, acc_Hansen)"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex10/In-Class_Ex10.html#extracting-map-extend",
    "href": "In-Class_Ex/In-Class_Ex10/In-Class_Ex10.html#extracting-map-extend",
    "title": "In-Class Exercise 10: Modelling Geographical Accessibility",
    "section": "Extracting Map Extend",
    "text": "Extracting Map Extend\n\nmapex <- st_bbox(hexagons)"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex10/In-Class_Ex10.html#visualising-hansens-accessibility",
    "href": "In-Class_Ex/In-Class_Ex10/In-Class_Ex10.html#visualising-hansens-accessibility",
    "title": "In-Class Exercise 10: Modelling Geographical Accessibility",
    "section": "Visualising Hansen’s Accessibility",
    "text": "Visualising Hansen’s Accessibility\n\ntmap_mode(\"plot\")\ntm_shape(hexagon_Hansen,\n         bbox = mapex) + \n  tm_fill(col = \"accHansen\",\n          n = 10,\n          style = \"quantile\",\n          border.col = \"black\",\n          border.lwd = 1) +\ntm_shape(eldercare) +\n  tm_symbols(size = 0.1) +\n  tm_layout(main.title = \"Accessibility to eldercare: Hansen method\",\n            main.title.position = \"center\",\n            main.title.size = 2,\n            legend.outside = FALSE,\n            legend.height = 0.45, \n            legend.width = 3.0,\n            legend.format = list(digits = 6),\n            legend.position = c(\"right\", \"top\"),\n            frame = TRUE) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar(width = 0.15) +\n  tm_grid(lwd = 0.1, alpha = 0.5)"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex10/In-Class_Ex10.html#statistical-graphic-visualisation",
    "href": "In-Class_Ex/In-Class_Ex10/In-Class_Ex10.html#statistical-graphic-visualisation",
    "title": "In-Class Exercise 10: Modelling Geographical Accessibility",
    "section": "Statistical Graphic Visualisation",
    "text": "Statistical Graphic Visualisation\n\nhexagon_Hansen <- st_join(hexagon_Hansen, mpsz, \n                          join = st_intersects)\n\n\nggplot(data=hexagon_Hansen, \n       aes(y = log(accHansen), \n           x= REGION_N)) +\n  geom_boxplot() +\n  geom_point(stat=\"summary\", \n             fun.y=\"mean\", \n             colour =\"red\", \n             size=2)"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex10/data/geospatial/ELDERCARE.html",
    "href": "Hands-On_Ex/Hands-On_Ex10/data/geospatial/ELDERCARE.html",
    "title": "Leon's IS415 (GAA) Journey",
    "section": "",
    "text": "<!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’>  ELDERCARE  ENG dataset\n\nELDERCARE\n\n                 0 0     false"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex10/data/geospatial/hexagons.html",
    "href": "Hands-On_Ex/Hands-On_Ex10/data/geospatial/hexagons.html",
    "title": "Leon's IS415 (GAA) Journey",
    "section": "",
    "text": "<!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’>     dataset\n\n\n                 0 0     false"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex10/data/geospatial/ELDERCARE.html",
    "href": "In-Class_Ex/In-Class_Ex10/data/geospatial/ELDERCARE.html",
    "title": "Leon's IS415 (GAA) Journey",
    "section": "",
    "text": "<!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’>  ELDERCARE  ENG dataset\n\nELDERCARE\n\n                 0 0     false"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex10/data/geospatial/hexagons.html",
    "href": "In-Class_Ex/In-Class_Ex10/data/geospatial/hexagons.html",
    "title": "Leon's IS415 (GAA) Journey",
    "section": "",
    "text": "<!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’>     dataset\n\n\n                 0 0     false"
  }
]